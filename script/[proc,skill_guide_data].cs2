// 661
[proc,skill_guide_data](int $int0, int $int1, int $int2)(int, obj, string)
switch_int ($int0) {
    case 1 :
        return(~skill_guide_data_attack($int1, $int2));
    case 2 :
        switch_int ($int1) {
            case 0 :
                switch_int ($int2) {
                    case 0 :
                        return(1, obj_1337, "Bronze warhammer");
                    case 1 :
                        return(1, obj_1335, "Iron warhammer");
                    case 2 :
                        return(5, obj_1339, "Steel warhammer");
                    case 3 :
                        return(5, obj_3196, "Members: Black halberd<br> (with 10 Attack)");
                    case 4 :
                        return(5, obj_6599, "Members: White halberd<br> (with 10 Attack)");
                    case 5 :
                        return(10, obj_1341, "Black warhammer");
                    case 6 :
                        return(10, obj_6613, "Members: White warhammer<br> (with 10 Prayer)");
                    case 7 :
                        return(10, obj_3198, "Members: Mithril halberd<br> (with 20 Attack)");
                    case 8 :
                        return(15, obj_3200, "Members: Adamant halberd<br> (with 30 Attack)");
                    case 9 :
                        return(20, obj_1343, "Mithril warhammer");
                    case 10 :
                        return(20, obj_3202, "Members: Rune halberd<br> (with 40 Attack)");
                    case 11 :
                        return(30, obj_1345, "Adamant warhammer");
                    case 12 :
                        return(30, obj_3204, "Members: Dragon halberd<br> (with 60 Attack)");
                    case 13 :
                        return(40, obj_1347, "Rune warhammer");
                    case 14 :
                        return(40, obj_10887, "Members: Barrelchest Anchor<br> (with 60 Attack)");
                    case 15 :
                        return(42, obj_8841, "Members: Void Knight equipment<br>(with 42 combat stats and 22 Prayer)");
                    case 16 :
                        return(50, obj_4153, "Members: Granite maul<br> (with 50 Attack)");
                    case 17 :
                        return(50, obj_21646, "Members: Granite longsword<br> (with 50 Attack)");
                    case 18 :
                        return(60, obj_6528, "Members: TzHaar-Ket-Om");
                    case 19 :
                        return(60, obj_13576, "Members: Dragon warhammer");
                    case 20 :
                        return(60, obj_27624, "Members: Ancient sceptre<br> (requires Secrets of the North, 50 Attack and 70 Magic)");
                    case 21 :
                        return(70, obj_4718, "Members: Dharok's greataxe<br> (with 70 Attack)");
                    case 22 :
                        return(70, obj_4747, "Members: Torag's hammers<br> (with 70 Attack)");
                    case 23 :
                        return(70, obj_13263, "Members: Abyssal bludgeon<br> (with 70 Attack)");
                    case 24 :
                        return(75, obj_21003, "Members: Elder maul<br> (with 75 Attack)");
                    case 25 :
                        return(90, obj_22325, "Members: Scythe of Vitur<br> (with 80 Attack)");
                }
            case 1 :
                switch_int ($int2) {
                    case 0 :
                        return(42, obj_8839, "Void Knight equipment<br>(with 42 combat stats and 22 Prayer)");
                    case 1 :
                        return(50, obj_10589, "Granite armour<br> (with 50 Defence)");
                    case 2 :
                        return(70, obj_24419, "Members: Inquisitor's armour<br> (with 30 Defence)");
                    case 3 :
                        return(75, obj_13239, "Primordial boots<br> (with 75 Defence)");
                }
            case 2 :
                switch_int ($int2) {
                    case 0 :
                        return(19, obj_6515, "Cross the River Lum to Al Kharid<br> (with 8 Agility and 37 Ranged)");
                    case 1 :
                        return(21, obj_6515, "Karamja<br> (with 53 Agility and 42 Ranged)");
                    case 2 :
                        return(22, obj_6515, "Escape from the water obelisk island<br> (with 36 Agility and 39 Ranged)");
                    case 3 :
                        return(28, obj_6515, "Scale the Observatory cliff<br> (with 23 Agility and 24 Ranged, after completing the Observatory quest)");
                    case 4 :
                        return(35, obj_6517, "Scale the Catherby cliff<br> (with 32 Agility and 35 Ranged)");
                    case 5 :
                        return(37, obj_6517, "Scale Falador wall<br> (with 11 Agility and 19 Ranged)");
                    case 6 :
                        return(38, obj_6517, "Scale Yanille wall<br> (with 39 Agility and 21 Ranged)");
                    case 7 :
                        return(70, obj_6515, "Cross cave, south of Dorgesh-Kaan <br> (with 70 Agility and 70 Strength, after completing Death to the Dorgeshuun)");
                }
            case 3 :
                if ($int2 = 0) {
                    return(60, obj_11793, "Access the God Wars Dungeon via the Strength route");
                }
                if ($int2 = 1) {
                    return(70, obj_11793, "Enter the Bandos area of the God Wars Dungeon");
                }
            case 4 :
                switch_int ($int2) {
                    case 0 :
                        return(-1, obj_7620, "To start fishing like a Barbarian, talk to<br>Otto Godblessed when you have at least<br>level 48 Fishing, level 15 Agility and level 15 Strength.");
                    case 1 :
                        return(15, obj_11328, "Leaping trout<br> (with 15 Agility & 48 Fishing)");
                    case 2 :
                        return(30, obj_11330, "Leaping salmon<br> (with 30 Agility & 58 Fishing)");
                    case 3 :
                        return(35, obj_359, "Tuna<br> (with 55 Fishing)");
                    case 4 :
                        return(35, obj_25564, "Harpoonfish<br> (with 55 Fishing)");
                    case 5 :
                        return(45, obj_11332, "Leaping sturgeon<br> (with 45 Agility & 70 Fishing)");
                    case 6 :
                        return(50, obj_371, "Swordfish<br> (with 70 Fishing)");
                    case 7 :
                        return(76, obj_383, "Shark<br> (with 96 Fishing)");
                }
        }
        return(-1, null, "");
    case 5 :
        return(~skill_guide_data_defence($int1, $int2));
    case 3 :
        if ($int1 = 0) {
            if ($int2 = 0) {
                return(1, obj_841, "Standard bows<br> Ammo: Arrows up to iron");
            }
            if ($int2 = 1) {
                return(5, obj_843, "Oak bows<br> Ammo: Arrows up to steel");
            }
            if ($int2 = 2) {
                return(20, obj_849, "Willow bows<br> Ammo: Arrows up to mithril");
            }
            if ($int2 = 3) {
                return(30, obj_853, "Maple bows<br> Ammo: Arrows up to adamant");
            }
            if ($int2 = 4) {
                return(30, obj_4827, "Members: Ogre composite bows<br> Ammo: 'Brutal' arrows up to rune");
            }
            if ($int2 = 5) {
                return(40, obj_857, "Members: Yew bows<br> Ammo: Arrows up to rune");
            }
            if ($int2 = 6) {
                return(50, obj_861, "Members: Magic bows<br> Ammo: Arrows up to amethyst");
            }
            if ($int2 = 7) {
                return(50, obj_6724, "Members: Seerculls<br> Ammo: Arrows up to amethyst");
            }
            if ($int2 = 8) {
                return(60, obj_11235, "Members: Dark bows<br> Ammo: Arrows up to dragon");
            }
            if ($int2 = 9) {
                return(60, obj_22550, "Members: Craw's bow<br> Ammo: None");
            }
            if ($int2 = 10) {
                return(65, obj_12424, "Members: 3rd age bow<br> Ammo: Arrows up to dragon");
            }
            if ($int2 = 11) {
                return(70, obj_23983, "Members: Crystal bows (with 50 Agility)<br> Ammo: None");
            }
            if ($int2 = 12) {
                return(70, obj_27655, "Members: Webweaver bow<br> Ammo: None");
            }
            if ($int2 = 13) {
                return(80, obj_25865, "Members: Bow of Faerdhinen (with 70 Agility)<br> Ammo: None");
            }
            if ($int2 = 14) {
                return(80, obj_27610, "Members: Venator bow<br> Ammo: Arrows up to dragon");
            }
            if ($int2 = 15) {
                return(85, obj_20997, "Members: Twisted bow<br> Ammo: Arrows up to dragon");
            }
            return(-1, null, "");
        }
        if ($int1 = 1) {
            if ($int2 = 0) {
                return(1, obj_864, "Bronze items");
            }
            if ($int2 = 1) {
                return(1, obj_863, "Iron items");
            }
            if ($int2 = 2) {
                return(5, obj_865, "Steel items");
            }
            if ($int2 = 3) {
                return(10, obj_869, "Black items");
            }
            if ($int2 = 4) {
                return(20, obj_866, "Mithril items");
            }
            if ($int2 = 5) {
                return(30, obj_867, "Adamantite items");
            }
            if ($int2 = 6) {
                return(40, obj_868, "Rune items");
            }
            if ($int2 = 7) {
                return(45, obj_10033, "Chinchompas");
            }
            if ($int2 = 8) {
                return(50, obj_25849, "Amethyst darts");
            }
            if ($int2 = 9) {
                return(55, obj_10034, "Carnivorous chinchompas");
            }
            if ($int2 = 10) {
                return(60, obj_11230, "Dragon darts");
            }
            if ($int2 = 11) {
                return(60, obj_22804, "Dragon knives");
            }
            if ($int2 = 12) {
                return(60, obj_6522, "TokTz-Xil-Ul");
            }
            if ($int2 = 13) {
                return(61, obj_20849, "Dragon thrownaxes");
            }
            if ($int2 = 14) {
                return(65, obj_11959, "Black chinchompas");
            }
            if ($int2 = 15) {
                return(75, obj_12924, "Toxic blowpipe");
            }
            return(-1, null, "");
        }
        if ($int1 = 2) {
            if ($int2 = 0) {
                return(1, obj_837, "Crossbow<br> Ammo: Bronze crossbow bolts");
            }
            if ($int2 = 1) {
                return(1, obj_767, "Phoenix crossbow<br> Ammo: Bronze crossbow bolts");
            }
            if ($int2 = 2) {
                return(1, obj_9174, "Members: Bronze crossbow<br> Ammo: Bronze crossbow bolts");
            }
            if ($int2 = 3) {
                return(16, obj_9176, "Members: Blurite crossbow<br> Ammo: Bolts up to blurite");
            }
            if ($int2 = 4) {
                return(26, obj_9177, "Members: Iron crossbow<br> Ammo: Bolts up to iron");
            }
            if ($int2 = 5) {
                return(28, obj_8880, "Members: Dorgeshuun crossbow<br> Ammo: Bolts up to iron");
            }
            if ($int2 = 6) {
                return(31, obj_9179, "Members: Steel crossbow<br> Ammo: Bolts up to steel");
            }
            if ($int2 = 7) {
                return(36, obj_9181, "Members: Mithril crossbow<br> Ammo: Bolts up to mithril");
            }
            if ($int2 = 8) {
                return(46, obj_9183, "Members: Adamantite crossbow<br> Ammo: Bolts up to adamant");
            }
            if ($int2 = 9) {
                return(50, obj_10156, "Members: Hunters' crossbow<br> Ammo: Kebbit bolts");
            }
            if ($int2 = 10) {
                return(61, obj_9185, "Members: Runite crossbow<br> Ammo: Bolts up to runite");
            }
            if ($int2 = 11) {
                return(64, obj_21902, "Members: Dragon crossbow<br> Ammo: Bolts up to dragon");
            }
            if ($int2 = 12) {
                return(70, obj_21012, "Members: Dragon hunter crossbow<br> Ammo: Bolts up to dragon");
            }
            if ($int2 = 13) {
                return(70, obj_11785, "Members: Armadyl crossbow<br> Ammo: Bolts up to dragon");
            }
            if ($int2 = 14) {
                return(70, obj_4734, "Members: Karil's crossbow");
            }
            if ($int2 = 15) {
                return(80, obj_26374, "Members: Zaryte crossbow<br> Ammo: Bolts up to dragon");
            }
            return(-1, null, "");
        }
        if ($int1 = 3) {
            if ($int2 = 0) {
                return(1, obj_1129, "Plain leather items");
            }
            if ($int2 = 1) {
                return(1, obj_1131, "Hard leather body<br> (with 10 Defence)");
            }
            if ($int2 = 2) {
                return(20, obj_1133, "Studded leather body<br> (with 20 Defence)");
            }
            if ($int2 = 3) {
                return(20, obj_1097, "Studded leather chaps");
            }
            if ($int2 = 4) {
                return(20, obj_1169, "Coif");
            }
            if ($int2 = 5) {
                return(20, obj_22269, "Members: Hard leather shield <br> (with 10 Defence)");
            }
            if ($int2 = 6) {
                return(25, obj_10954, "Members: Frog-leather <br> (with 25 Defence)");
            }
            if ($int2 = 7) {
                return(30, obj_6322, "Members: Snakeskin armour<br> (with 30 Defence)");
            }
            if ($int2 = 8) {
                return(30, obj_22272, "Members: Snakeskin shield <br> (with 30 Defence)");
            }
            if ($int2 = 9) {
                return(30, obj_10498, "Members: Ava's attractor<br> (after Animal Magnetism)");
            }
            if ($int2 = 10) {
                return(40, obj_2577, "Members: Ranger boots");
            }
            if ($int2 = 11) {
                return(40, obj_2581, "Members: Robin Hood hat");
            }
            if ($int2 = 12) {
                return(40, obj_12596, "Members: Rangers' tunic");
            }
            if ($int2 = 13) {
                return(40, obj_19994, "Members: Ranger gloves");
            }
            if ($int2 = 14) {
                return(40, obj_23249, "Members: Rangers' tights");
            }
            if ($int2 = 15) {
                return(40, obj_6133, "Members: Spined armour<br> (after The Fremennik Trials, with 40 Defence)");
            }
            if ($int2 = 16) {
                return(40, obj_1065, "Green dragonhide vambraces");
            }
            if ($int2 = 17) {
                return(40, obj_1099, "Green dragonhide chaps");
            }
            if ($int2 = 18) {
                return(40, obj_1135, "Green dragonhide body<br> (with 40 Defence)");
            }
            if ($int2 = 19) {
                return(40, obj_22275, "Members: Green dragonhide shield <br> (with 40 Defence)");
            }
            if ($int2 = 20) {
                return(42, obj_8839, "Members: Void Knight equipment<br>(with 42 combat stats and 22 Prayer)");
            }
            if ($int2 = 21) {
                return(50, obj_10499, "Members: Ava's accumulator<br> (after Animal Magnetism)");
            }
            if ($int2 = 22) {
                return(50, obj_2487, "Members: Blue dragonhide vambraces");
            }
            if ($int2 = 23) {
                return(50, obj_2493, "Members: Blue dragonhide chaps");
            }
            if ($int2 = 24) {
                return(50, obj_2499, "Members: Blue dragonhide body<br> (with 40 Defence)");
            }
            if ($int2 = 25) {
                return(50, obj_22278, "Members: Blue dragonhide shield <br> (with 40 Defence)");
            }
            if ($int2 = 26) {
                return(60, obj_10555, "Members: Penance skirt<br> (with 40 Defence)");
            }
            if ($int2 = 27) {
                return(60, obj_2489, "Members: Red dragonhide vambraces");
            }
            if ($int2 = 28) {
                return(60, obj_2495, "Members: Red dragonhide chaps");
            }
            if ($int2 = 29) {
                return(60, obj_2501, "Members: Red dragonhide body<br> (with 40 Defence)");
            }
            if ($int2 = 30) {
                return(60, obj_22281, "Members: Red dragonhide shield <br> (with 40 Defence)");
            }
            if ($int2 = 31) {
                return(65, obj_10330, "Members: 3rd age range armour<br> (with 45 Defence)");
            }
            if ($int2 = 32) {
                return(70, obj_22109, "Members: Ava's Assembler<br> (after Dragon Slayer II)");
            }
            if ($int2 = 33) {
                return(70, obj_2491, "Members: Black dragonhide vambraces");
            }
            if ($int2 = 34) {
                return(70, obj_2497, "Members: Black dragonhide chaps");
            }
            if ($int2 = 35) {
                return(70, obj_2503, "Members: Black dragonhide body<br> (with 40 Defence)");
            }
            if ($int2 = 36) {
                return(70, obj_22284, "Members: Black dragonhide shield<br> (with 40 Defence)");
            }
            if ($int2 = 37) {
                return(70, obj_23188, "Members: God dragonhide shields<br> (with 40 Defence)");
            }
            if ($int2 = 38) {
                return(70, obj_10370, "Members: God dragonhide armour<br> (with 40 Defence)");
            }
            if ($int2 = 39) {
                return(70, obj_11826, "Members: Armadyl armour<br> (with 70 Defence)");
            }
            if ($int2 = 40) {
                return(70, obj_4736, "Members: Karil's leather armour<br> (with 70 Defence)");
            }
            if ($int2 = 41) {
                return(70, obj_22002, "Members: Dragonfire ward<br>(with 75 Defence)");
            }
            if ($int2 = 42) {
                return(70, obj_22951, "Members: Boots of brimstone<br>(with 70 Defence and Magic)");
            }
            if ($int2 = 43) {
                return(75, obj_13237, "Members: Pegasian boots<br> (with 75 Defence)");
            }
            if ($int2 = 44) {
                return(75, obj_21000, "Members: Twisted buckler<br> (with 75 Defence)");
            }
            if ($int2 = 45) {
                return(80, obj_26235, "Members: Zaryte vambraces<br> (with 45 Defence)");
            }
            if ($int2 = 46) {
                return(80, obj_27229, "Members: Masori armour<br> (with 30 Defence)");
            }
            return(-1, null, "");
        }
        if ($int1 = 4) {
            if ($int2 = 0) {
                return(42, obj_8841, "Void Knight equipment<br>(with 42 combat stats and 22 Prayer)");
            }
            if ($int2 = 1) {
                return(65, obj_19478, "Light ballista<br> Ammo: All Javelins");
            }
            if ($int2 = 2) {
                return(75, obj_19481, "Heavy ballista (after Monkey Madness II)<br> Ammo: All Javelins");
            }
            return(-1, null, "");
        }
        if ($int1 = 5) {
            if ($int2 = 0) {
                return(19, obj_6517, "Scale Falador wall<br>(with 11 Agility and 37 Strength)");
            }
            if ($int2 = 1) {
                return(21, obj_6517, "Scale Yanille wall<br>(with 39 Agility and 38 Strength)");
            }
            if ($int2 = 2) {
                return(24, obj_6517, "Scale Observatory cliff (after Observatory quest)<br>(with 23 Agility and 28 Strength)");
            }
            if ($int2 = 3) {
                return(35, obj_6517, "Scale the Catherby cliff<br>(with 32 Agility and 35 Strength)");
            }
            if ($int2 = 4) {
                return(37, obj_6515, "Cross the River Lum to Al Kharid<br>(with 8 Agility and 19 Strength)");
            }
            if ($int2 = 5) {
                return(39, obj_6515, "Escape from the water obelisk island<br>(with 36 Agility and 22 Strength)");
            }
            if ($int2 = 6) {
                return(42, obj_6515, "Karamja, south of the volcano<br>(with 53 Agility and 21 Strength)");
            }
            if ($int2 = 7) {
                return(62, obj_6514, "Hallowed Sepulchre - Grapple swing");
            }
            if ($int2 = 8) {
                return(70, obj_6515, "Cross cave south of Dorgesh-Kaan<br>(with 70 Agility and 70 Strength)");
            }
            return(-1, null, "");
        }
        if ($int1 = 6) {
            return(~skill_guide_salamanders($int2));
        }
        return(-1, null, "");
    case 7 :
        return(~skill_guide_data_prayer($int1, $int2));
    case 4 :
        return(~skill_guide_data_magic($int1, $int2));
    case 6 :
        if ($int1 = 0) {
            switch_int ($int2) {
                case 0 :
                    return(-1, obj_7620, "Hitpoints are used to tell you how healthy your character is. A character who reaches 0 Hitpoints has died, but will reappear in their chosen respawn location (normally Lumbridge).");
                case 1 :
                    return(-1, obj_7620, "If you see any red 'hit splats' during combat, the number shown corresponds to the number of Hitpoints lost as a result of that strike.");
                case 2 :
                    return(-1, obj_7620, "Blue hit splats mean no damage has been dealt.");
                case 3 :
                    return(-1, obj_7620, "Green hit splats are poison damage.");
                case 4 :
                    return(-1, obj_7620, "Teal hit splats are venom damage. (Members)");
                case 5 :
                    return(-1, obj_7620, "Orange hit splats are disease damage. (Members)");
                case 6 :
                    return(-1, obj_7620, "Dark purple hit splats are corruption damage. (Members)");
            }
        } else if ($int1 = 1) {
            switch_int ($int2) {
                case 0 :
                    return(-1, obj_10476, "Purple Sweets: Restores 1-3 Hitpoints<br>(Members)");
                case 1 :
                    return(-1, obj_319, "Anchovies: Restores 1 Hitpoint");
                case 2 :
                    return(-1, obj_315, "Shrimp: Restores 3 Hitpoints");
                case 3 :
                    return(-1, obj_2140, "Cooked chicken: Restores 3 Hitpoints");
                case 4 :
                    return(-1, obj_325, "Sardine: Restores 3 Hitpoints");
                case 5 :
                    return(-1, obj_2142, "Cooked meat: Restores 3 Hitpoints");
                case 6 :
                    return(-1, obj_24785, "Cooked mystery meat: Restores 5 Hitpoints");
                case 7 :
                    return(-1, obj_2309, "Bread: Restores 5 Hitpoints");
                case 8 :
                    return(-1, obj_347, "Herring: Restores 5 Hitpoints");
                case 9 :
                    return(-1, obj_3228, "Cooked Rabbit: Restores 5 Hitpoints<br>(Members)");
                case 10 :
                    return(-1, obj_25631, "Steak Sandwich: Restores 6 Hitpoints");
                case 11 :
                    return(-1, obj_355, "Mackerel: Restores 6 Hitpoints<br>(Members)");
                case 12 :
                    return(-1, obj_19662, "Botanical Pie: Restores 6 Hitpoints<br>(Members)");
                case 13 :
                    return(-1, obj_3381, "Slimy Eel: Restores 6-10 Hitpoints<br>(Members)");
                case 14 :
                    return(-1, obj_333, "Trout: Restores 7 Hitpoints");
                case 15 :
                    return(-1, obj_339, "Cod: Restores 7 Hitpoints<br>(Members)");
                case 16 :
                    return(-1, obj_7223, "Roast Rabbit: Restores 7 Hitpoints<br>(Members)");
                case 17 :
                    return(-1, obj_5003, "Cave Eel: Restores 7-11 Hitpoints<br>(Members)");
                case 18 :
                    return(-1, obj_351, "Pike: Restores 8 Hitpoints");
                case 19 :
                    return(-1, obj_329, "Salmon: Restores 9 Hitpoints");
                case 20 :
                    return(-1, obj_2325, "Redberry pie: Restores 9 Hitpoints");
                case 21 :
                    return(-1, obj_361, "Tuna: Restores 10 Hitpoints");
                case 22 :
                    return(-1, obj_7518, "Crab meat: Restores 10 Hitpoints<br>(Members)");
                case 23 :
                    return(-1, obj_7530, "Cooked fishcake: Restores 11 Hitpoints<br>(Members)");
                case 24 :
                    return(-1, obj_1993, "Jug of wine: Restores 11 Hitpoints");
                case 25 :
                    return(-1, obj_2327, "Meat pie: Restores 11 Hitpoints");
                case 26 :
                    return(-1, obj_2149, "Lava Eel: Restores 11 Hitpoints<br>(Members)");
                case 27 :
                    return(-1, obj_7178, "Garden pie: Restores 12 Hitpoints<br>(Members)");
                case 28 :
                    return(-1, obj_7188, "Fish pie: Restores 12 Hitpoints<br>(Members)");
                case 29 :
                    return(-1, obj_1891, "Cake: Restores 12 Hitpoints");
                case 30 :
                    return(-1, obj_379, "Lobster: Restores 12 Hitpoints");
                case 31 :
                    return(-1, obj_365, "Bass: Restores 13 Hitpoints<br>(Members)");
                case 32 :
                    return(-1, obj_373, "Swordfish: Restores 14 Hitpoints");
                case 33 :
                    return(-1, obj_2289, "Plain pizza: Restores 14 Hitpoints");
                case 34 :
                    return(-1, obj_2323, "Apple pie: Restores 14 Hitpoints");
                case 35 :
                    return(-1, obj_6703, "Potato with butter: Restores 14 Hitpoints<br>(Members)");
                case 36 :
                    return(-1, obj_7054, "Chilli Potato: Restores 14 Hitpoints<br>(Members)");
                case 37 :
                    return(-1, obj_1897, "Chocolate Cake: Restores 15 Hitpoints");
                case 38 :
                    return(-1, obj_7946, "Monkfish: Restores 16 Hitpoints<br>(Members)");
                case 39 :
                    return(-1, obj_7198, "Admiral pie: Restores 16 Hitpoints<br>(Members)");
                case 40 :
                    return(-1, obj_2293, "Meat pizza: Restores 16 Hitpoints");
                case 41 :
                    return(-1, obj_6705, "Potato with cheese: Restores 16 Hitpoints<br>(Members)");
                case 42 :
                    return(-1, obj_7056, "Egg Potato: Restores 16 Hitpoints<br>(Members)");
                case 43 :
                    return(-1, obj_3144, "Cooked karambwan: Restores 18 Hitpoints<br>(Members)");
                case 44 :
                    return(-1, obj_2297, "Anchovy pizza: Restores 18 Hitpoints");
                case 45 :
                    return(-1, obj_1885, "Ugthanki kebab: Restores 19 Hitpoints<br>(Members)");
                case 46 :
                    return(-1, obj_385, "Shark: Restores 20 Hitpoints<br>(Members)");
                case 47 :
                    return(-1, obj_7058, "Mushroom Potato: Restores 20 Hitpoints<br>(Members)");
                case 48 :
                    return(-1, obj_397, "Sea Turtle: Restores 21 Hitpoints<br>(Members)");
                case 49 :
                    return(-1, obj_391, "Manta Ray: Restores 22 Hitpoints<br>(Members)");
                case 50 :
                    return(-1, obj_11936, "Dark Crab: Restores 22 Hitpoints<br>(Members)");
                case 51 :
                    return(-1, obj_7060, "Tuna Potato: Restores 22 Hitpoints<br>(Members)");
                case 52 :
                    return(-1, obj_7208, "Wild pie: Restores 22 Hitpoints<br>(Members)");
                case 53 :
                    return(-1, obj_7218, "Summer pie: Restores 22 Hitpoints<br>(Members)");
                case 54 :
                    return(-1, obj_2301, "Pineapple pizza: Restores 22 Hitpoints<br>(Members)");
                case 55 :
                    return(-1, obj_13441, "Anglerfish: Restores Hitpoints based on your Hitpoints level up to a maximum of 22 - can boost beyond your level<br>(Members)");
                case 56 :
                    return(-1, obj_6687, "Saradomin brew: Restores 15% of your Hitpoints level plus 2 - can boost beyond your level<br>(Members)");
            }
        } else if ($int1 = 2) {
            switch_int ($int2) {
                case 0 :
                    return(42, obj_8839, "Void Knight equipment<br>(with 42 combat stats and 22 Prayer)");
                case 1 :
                    return(50, obj_24422, "Nightmare Staff (without orb)<br> (with <tostring(72)> Magic)");
                case 2 :
                    return(50, obj_24423, "Nightmare Staff (with orb)<br> (with <tostring(82)> Magic)");
                case 3 :
                    return(75, obj_19550, "Enchanted zenyte jewellery");
            }
        }
        return(-1, null, "");
    case 8 :
        return(~skill_guide_data_agility($int1, $int2));
    case 9 :
        switch_int ($int1) {
            case 0 :
                switch_int ($int2) {
                    case 0 :
                        return(-1, obj_7620, "You must complete the Druidic Ritual quest before you can use Herblore.");
                    case 1 :
                        return(3, obj_221, "Attack potion<br>Guam leaf & eye of newt");
                    case 2 :
                        return(5, obj_235, "Anti-poison potion<br>Marrentill & ground unicorn horn");
                    case 3 :
                        return(8, obj_1534, "Relicym's balm");
                    case 4 :
                        return(12, obj_225, "Strength potion<br>Tarromin & limpwurt root");
                    case 5 :
                        return(15, obj_592, "Serum 207<br>Tarromin & ashes");
                    case 6 :
                        return(19, obj_10142, "Guam tar<br>Guam leaf & swamp tar");
                    case 7 :
                        return(22, obj_21622, "Compost potion<br>Harralander & volcanic ash");
                    case 8 :
                        return(22, obj_223, "Stat restore potion<br>Harralander & red spiders' eggs");
                    case 9 :
                        return(22, obj_1550, "Guthix balance potion");
                    case 10 :
                        return(26, obj_1975, "Energy potion<br>Harralander & chocolate dust");
                    case 11 :
                        return(30, obj_239, "Defence potion<br>Ranarr weed & white berries");
                    case 12 :
                        return(31, obj_10143, "Marrentill tar<br>Marrentill & swamp tar");
                    case 13 :
                        return(34, obj_2152, "Agility potion<br>Toadflax & toad legs");
                    case 14 :
                        return(36, obj_9736, "Combat potion<br>Harralander & ground desert goat horn");
                    case 15 :
                        return(38, obj_231, "Prayer restore potion<br>Ranarr weed & snape grass");
                    case 16 :
                        return(39, obj_10144, "Tarromin tar<br>Tarromin & swamp tar");
                    case 17 :
                        return(44, obj_10145, "Harralander tar<br>Harralander & swamp tar");
                    case 18 :
                        return(45, obj_221, "Super attack potion<br>Irit leaf & eye of newt");
                    case 19 :
                        return(48, obj_235, "Super anti-poison potion<br>Irit leaf & ground unicorn horn");
                    case 20 :
                        return(50, obj_231, "Fishing potion<br>Avantoe & snape grass");
                    case 21 :
                        return(52, obj_2970, "Super energy potion<br>Avantoe & Mort Myre fungi");
                    case 22 :
                        return(53, obj_10109, "Hunting potion - Avantoe & ground sabre-toothed kebbit teeth");
                    case 23 :
                        return(55, obj_225, "Super strength potion<br>Kwuarm & limpwurt root");
                    case 24 :
                        return(57, obj_9016, "Magic essence potion<br>Star flower & ground gorak's claw");
                    case 25 :
                        return(60, obj_241, "Weapon poison<br>Kwuarm & ground blue dragon scale");
                    case 26 :
                        return(63, obj_223, "Super restore potion<br>Snapdragon & red spiders' eggs");
                    case 27 :
                        return(65, obj_10937, "Sanfew serum cure all<br>Super restore potion, snake weed, ground unicorn horn and nail beast nails.");
                    case 28 :
                        return(66, obj_239, "Super defence potion<br>Cadantine & white berries");
                    case 29 :
                        return(68, obj_6049, "Antidote+<br>Coconut milk, toadflax & yew roots");
                    case 30 :
                        return(69, obj_241, "Anti-firebreath potion<br>Lantadyme & ground blue dragon scale");
                    case 31 :
                        return(70, obj_23964, "Divine super attack potion<br>Crystal dust & super attack potion");
                    case 32 :
                        return(70, obj_23964, "Divine super strength potion<br>Crystal dust & super strength potion");
                    case 33 :
                        return(70, obj_23964, "Divine super defence potion<br>Crystal dust & super defence potion");
                    case 34 :
                        return(72, obj_245, "Ranging potion<br>Dwarf weed & wine of Zamorak");
                    case 35 :
                        return(73, obj_6016, "Weapon poison(+)<br>Coconut milk, cactus spine & red spiders' eggs");
                    case 36 :
                        return(74, obj_23964, "Divine ranging potion<br>Crystal dust & ranging potion");
                    case 37 :
                        return(76, obj_3138, "Magic potion<br>Lantadyme & potato cactus");
                    case 38 :
                        return(77, obj_3961, "Stamina potion<br>Amylase & super energy potion");
                    case 39 :
                        return(78, obj_247, "Zamorak brew<br>Torstol & jangerberries");
                    case 40 :
                        return(78, obj_23964, "Divine magic potion<br>Crystal dust & magic potion");
                    case 41 :
                        return(79, obj_6051, "Antidote++<br>Coconut milk, irit leaf & magic tree roots");
                    case 42 :
                        return(80, obj_245, "Bastion potion<br>Cadantine & wine of Zamorak mixed in a vial of blood");
                    case 43 :
                        return(80, obj_3138, "Battlemage potion<br>Cadantine & potato cactus mixed in a vial of blood");
                    case 44 :
                        return(81, obj_6693, "Saradomin brew<br>Toadflax & crushed birdnest");
                    case 45 :
                        return(82, obj_6018, "Weapon poison(++)<br>Coconut milk, nightshade & poison ivy berries");
                    case 46 :
                        return(84, obj_3256, "Extended antifire potion<br>Antifire potion & lava scale shards");
                    case 47 :
                        return(85, obj_26368, "Ancient brew<br>Dwarf weed & nihil dust");
                    case 48 :
                        return(86, obj_23964, "Divine bastion potion<br>Crystal dust & bastion potion");
                    case 49 :
                        return(86, obj_23964, "Divine battlemage potion<br>Crystal dust & battlemage potion");
                    case 50 :
                        return(87, obj_3997, "Anti-venom<br>Antidote++ & Zulrah's scales");
                    case 51 :
                        return(88, obj_27272, "Menaphite remedy<br>Dwarf weed & Lily of the sands ");
                    case 52 :
                        return(90, obj_269, "Super combat potion<br>Super attack potion, super defence potion, super strength potion & torstol");
                    case 53 :
                        return(91, obj_27616, "Forgotten brew<br>Ancient brew & ancient essence");
                    case 54 :
                        return(92, obj_21975, "Super antifire potion<br>Antifire potion & crushed superior dragon bones<br>(after Dragon Slayer II)");
                    case 55 :
                        return(94, obj_269, "Anti-venom+<br>Anti-venom & Torstol");
                    case 56 :
                        return(97, obj_23964, "Divine super combat potion<br>Crystal dust & super combat potion");
                    case 57 :
                        return(98, obj_3256, "Extended super antifires<br>Super antifire potion & lava scale shards<br>(after Dragon Slayer II)");
                }
                return(-1, null, "");
            case 1 :
                switch_int ($int2) {
                    case 0 :
                        return(-1, obj_7620, "You must complete the Druidic Ritual quest before you can use Herblore");
                    case 1 :
                        return(3, obj_249, "Guam leaf");
                    case 2 :
                        return(3, obj_1534, "Rogue's purse");
                    case 3 :
                        return(3, obj_1526, "Snake weed");
                    case 4 :
                        return(5, obj_251, "Marrentill");
                    case 5 :
                        return(11, obj_253, "Tarromin");
                    case 6 :
                        return(20, obj_255, "Harralander");
                    case 7 :
                        return(25, obj_257, "Ranarr weed");
                    case 8 :
                        return(30, obj_2998, "Toadflax");
                    case 9 :
                        return(40, obj_259, "Irit leaf");
                    case 10 :
                        return(48, obj_261, "Avantoe");
                    case 11 :
                        return(54, obj_263, "Kwuarm");
                    case 12 :
                        return(59, obj_3000, "Snapdragon");
                    case 13 :
                        return(65, obj_265, "Cadantine");
                    case 14 :
                        return(67, obj_2481, "Lantadyme");
                    case 15 :
                        return(70, obj_267, "Dwarf weed");
                    case 16 :
                        return(75, obj_269, "Torstol");
                }
                return(-1, null, "");
            case 2 :
                switch_int ($int2) {
                    case 0 :
                        return(-1, obj_7620, "You must complete barbarian herblore training before you can make these potions.");
                    case 1 :
                        return(4, obj_11429, "Attack mix");
                    case 2 :
                        return(6, obj_11433, "Antipoison mix");
                    case 3 :
                        return(9, obj_11437, "Relicym's mix");
                    case 4 :
                        return(14, obj_11443, "Strength mix");
                    case 5 :
                        return(24, obj_11449, "Restore mix");
                    case 6 :
                        return(29, obj_11453, "Energy mix");
                    case 7 :
                        return(33, obj_11457, "Defence mix");
                    case 8 :
                        return(37, obj_11461, "Agility mix");
                    case 9 :
                        return(40, obj_11445, "Combat mix");
                    case 10 :
                        return(42, obj_11465, "Prayer mix");
                    case 11 :
                        return(47, obj_11469, "Super attack mix");
                    case 12 :
                        return(51, obj_11473, "Anti-poison supermix");
                    case 13 :
                        return(53, obj_11477, "Fishing mix");
                    case 14 :
                        return(56, obj_11481, "Super energy mix");
                    case 15 :
                        return(58, obj_11517, "Hunting mix");
                    case 16 :
                        return(59, obj_11485, "Super strength mix");
                    case 17 :
                        return(61, obj_11489, "Magic essence mix");
                    case 18 :
                        return(67, obj_11493, "Super restore mix");
                    case 19 :
                        return(71, obj_11497, "Super defence mix");
                    case 20 :
                        return(74, obj_11501, "Antidote+ mix");
                    case 21 :
                        return(75, obj_11505, "Antifire mix");
                    case 22 :
                        return(80, obj_11509, "Ranging mix");
                    case 23 :
                        return(83, obj_11513, "Magic mix");
                    case 24 :
                        return(85, obj_11521, "Zamorak mix");
                    case 25 :
                        return(86, obj_12633, "Stamina mix");
                    case 26 :
                        return(91, obj_11960, "Extended antifire mix");
                    case 27 :
                        return(92, obj_26350, "Ancient mix");
                    case 28 :
                        return(98, obj_21994, "Super antifire mix");
                    case 29 :
                        return(99, obj_22221, "Extended super antifire mix");
                }
                return(-1, null, "");
            case 3 :
                switch_int ($int2) {
                    case 0 :
                        return(-1, obj_7620, "Potions may be <col=6f0000>strong</col>, <col=6f0000>standard</col> or <col=6f0000>weak</col>, depending on your Herblore level.");
                    case 1 :
                        return(47, obj_20905, "Weak Golpar potions:");
                    case 2 :
                        return(scale(126, 100, 47), obj_20905, "Standard Golpar potions");
                    case 3 :
                        return(scale(150, 100, 47), obj_20905, "Strong Golpar potions");
                    case 4 :
                        return(-1, obj_20920, "Elder potions<br> with Stinkhorn mushroom");
                    case 5 :
                        return(-1, obj_20944, "Kodai potions<br> with Endarkened juice");
                    case 6 :
                        return(-1, obj_20932, "Twisted potions<br> with Cicely");
                    case 7 :
                        return(52, obj_20908, "Weak Buchu leaf potions:");
                    case 8 :
                        return(scale(126, 100, 52), obj_20908, "Standard Buchu leaf potions");
                    case 9 :
                        return(scale(150, 100, 52), obj_20908, "Strong Buchu leaf potions");
                    case 10 :
                        return(-1, obj_20956, "Revitalisation potions<br> with Stinkhorn mushroom");
                    case 11 :
                        return(-1, obj_20980, "Xeric's Aid potions<br> with Endarkened juice");
                    case 12 :
                        return(-1, obj_20968, "Prayer enhance potions<br> with Cicely");
                    case 13 :
                        return(60, obj_20902, "Weak Noxifer potions:");
                    case 14 :
                        return(scale(126, 100, 60), obj_20902, "Standard Noxifer potions");
                    case 15 :
                        return(scale(150, 100, 60), obj_20902, "Strong Noxifer potions");
                    case 16 :
                        return(-1, obj_25761, "Antipoison potions<br> with Cicely");
                    case 17 :
                        return(-1, obj_20992, "Overload<br> with Elder, Kodai & Twisted potions");
                    case 18 :
                        return(-1, obj_20996, "For overload potions, the tier is capped at the tier of the potions used to make it.");
                }
                return(-1, null, "");
            case 4 :
                if ($int2 = 0) {
                    return(31, obj_21511, "Harvest herbs from the <col=6f0000>Herbiboar</col> on <col=6f0000>Fossil Island</col> (with 80 Hunter).");
                }
                if ($int2 = 1) {
                    return(58, obj_13226, "Use the Herb Sack reward item, purchased from the Tithe Farm or Slayer Masters.");
                }
                return(-1, null, "");
        }
        return(-1, null, "");
    case 10 :
        return(~skill_guide_data_thieving($int1, $int2));
    case 11 :
        switch_int ($int1) {
            case 0 :
                if ($int2 = 0) {
                    return(21, obj_5418, "Vegetable sack");
                }
                if ($int2 = 1) {
                    return(26, obj_21652, "Drift net");
                }
                if ($int2 = 2) {
                    return(36, obj_5376, "Fruit basket");
                }
                return(-1, null, "");
            case 1 :
                if ($int2 = 0) {
                    return(1, obj_1059, "Leather gloves");
                }
                if ($int2 = 1) {
                    return(7, obj_1061, "Leather boots");
                }
                if ($int2 = 2) {
                    return(9, obj_1167, "Leather cowl");
                }
                if ($int2 = 3) {
                    return(11, obj_1063, "Leather vambraces");
                }
                if ($int2 = 4) {
                    return(14, obj_1129, "Leather body");
                }
                if ($int2 = 5) {
                    return(14, obj_13385, "Members: Xerician hat");
                }
                if ($int2 = 6) {
                    return(15, obj_3327, "Members: Snail helmet");
                }
                if ($int2 = 7) {
                    return(15, obj_7539, "Members: Crab shell armour");
                }
                if ($int2 = 8) {
                    return(17, obj_13389, "Members: Xerician robe");
                }
                if ($int2 = 9) {
                    return(18, obj_1095, "Leather chaps");
                }
                if ($int2 = 10) {
                    return(22, obj_13387, "Members: Xerician top");
                }
                if ($int2 = 11) {
                    return(28, obj_1131, "Hard leather body");
                }
                if ($int2 = 12) {
                    return(32, obj_10077, "Members: Spiked vambraces");
                }
                if ($int2 = 13) {
                    return(35, obj_6259, "Members: Broodoo shield");
                }
                if ($int2 = 14) {
                    return(38, obj_1169, "Members: Coif");
                }
                if ($int2 = 15) {
                    return(41, obj_1133, "Members: Studded body");
                }
                if ($int2 = 16) {
                    return(41, obj_22269, "Members: Leather shield");
                }
                if ($int2 = 17) {
                    return(43, obj_10824, "Members: Yak-hide leg armour");
                }
                if ($int2 = 18) {
                    return(44, obj_1097, "Members: Studded chaps");
                }
                if ($int2 = 19) {
                    return(45, obj_6328, "Members: Snakeskin boots");
                }
                if ($int2 = 20) {
                    return(46, obj_10822, "Members: Yak-hide body armour");
                }
                if ($int2 = 21) {
                    return(47, obj_6330, "Members: Snakeskin vambraces");
                }
                if ($int2 = 22) {
                    return(48, obj_6326, "Members: Snakeskin bandana");
                }
                if ($int2 = 23) {
                    return(51, obj_6324, "Members: Snakeskin chaps");
                }
                if ($int2 = 24) {
                    return(52, obj_12931, "Members: Serpentine helm");
                }
                if ($int2 = 25) {
                    return(53, obj_6322, "Members: Snakeskin body");
                }
                if ($int2 = 26) {
                    return(55, obj_11864, "Members: Slayer helm");
                }
                if ($int2 = 27) {
                    return(56, obj_22272, "Members: Snakeskin shield");
                }
                if ($int2 = 28) {
                    return(57, obj_1065, "Members: Green dragonhide vambraces");
                }
                if ($int2 = 29) {
                    return(60, obj_1099, "Members: Green dragonhide chaps");
                }
                if ($int2 = 30) {
                    return(60, obj_3391, "Members: Splitbark gauntlets");
                }
                if ($int2 = 31) {
                    return(60, obj_3393, "Members: Splitbark boots");
                }
                if ($int2 = 32) {
                    return(61, obj_3385, "Members: Splitbark helm");
                }
                if ($int2 = 33) {
                    return(62, obj_22275, "Members: Green dragonhide shield");
                }
                if ($int2 = 34) {
                    return(62, obj_3387, "Members: Splitbark body");
                }
                if ($int2 = 35) {
                    return(62, obj_3389, "Members: Splitbark legs");
                }
                if ($int2 = 36) {
                    return(63, obj_1135, "Members: Green dragonhide body");
                }
                if ($int2 = 37) {
                    return(66, obj_2487, "Members: Blue dragonhide vambraces");
                }
                if ($int2 = 38) {
                    return(68, obj_2493, "Members: Blue dragonhide chaps");
                }
                if ($int2 = 39) {
                    return(69, obj_22278, "Members: Blue dragonhide shield");
                }
                if ($int2 = 40) {
                    return(71, obj_2499, "Members: Blue dragonhide body");
                }
                if ($int2 = 41) {
                    return(73, obj_2489, "Members: Red dragonhide vambraces");
                }
                if ($int2 = 42) {
                    return(75, obj_2495, "Members: Red dragonhide chaps");
                }
                if ($int2 = 43) {
                    return(76, obj_22281, "Members: Red dragonhide shield");
                }
                if ($int2 = 44) {
                    return(77, obj_2501, "Members: Red dragonhide body");
                }
                if ($int2 = 45) {
                    return(79, obj_2491, "Members: Black dragonhide vambraces");
                }
                if ($int2 = 46) {
                    return(82, obj_2497, "Members: Black dragonhide chaps");
                }
                if ($int2 = 47) {
                    return(83, obj_22284, "Members: Black dragonhide shield");
                }
                if ($int2 = 48) {
                    return(84, obj_2503, "Members: Black dragonhide body");
                }
                if ($int2 = 49) {
                    return(90, obj_27238, "Members: Break down armadylean armour and fortify Masori armour");
                }
                return(-1, null, "");
            case 2 :
                if ($int2 = 0) {
                    return(1, obj_1759, "Wool");
                }
                if ($int2 = 1) {
                    return(10, obj_1777, "Members: Flax into bow strings");
                }
                if ($int2 = 2) {
                    return(10, obj_9438, "Members: Sinew into crossbow strings");
                }
                if ($int2 = 3) {
                    return(19, obj_6038, "Members: Magic tree roots into magic strings");
                }
                if ($int2 = 4) {
                    return(30, obj_954, "Members: Yak hair into rope");
                }
                return(-1, null, "");
            case 3 :
                if ($int2 = 0) {
                    return(1, obj_1931, "Pot");
                }
                if ($int2 = 1) {
                    return(7, obj_2313, "Pie dish");
                }
                if ($int2 = 2) {
                    return(8, obj_1923, "Bowl");
                }
                if ($int2 = 3) {
                    return(19, obj_5350, "Members: Plant pot");
                }
                if ($int2 = 4) {
                    return(25, obj_4440, "Members: Pot lid");
                }
                return(-1, null, "");
            case 4 :
                if ($int2 = 0) {
                    return(1, obj_1919, "Beer glass");
                }
                if ($int2 = 1) {
                    return(4, obj_4527, "Candle lantern");
                }
                if ($int2 = 2) {
                    return(12, obj_4525, "Oil lamp");
                }
                if ($int2 = 3) {
                    return(26, obj_4535, "Oil lantern");
                }
                if ($int2 = 4) {
                    return(33, obj_229, "Vial");
                }
                if ($int2 = 5) {
                    return(42, obj_6667, "Fishbowl");
                }
                if ($int2 = 6) {
                    return(46, obj_567, "Glass orb");
                }
                if ($int2 = 7) {
                    return(49, obj_4542, "Bullseye lantern lens");
                }
                if ($int2 = 8) {
                    return(87, obj_10973, "Dorgeshuun light orb");
                }
                return(-1, null, "");
            case 5 :
                if ($int2 = 0) {
                    return(1, obj_1609, "Members: Cut opal");
                }
                if ($int2 = 1) {
                    return(1, obj_21081, "Members: Opal ring");
                }
                if ($int2 = 2) {
                    return(3, obj_10496, "Polished buttons");
                }
                if ($int2 = 3) {
                    return(5, obj_1635, "Gold ring");
                }
                if ($int2 = 4) {
                    return(6, obj_1654, "Gold necklace");
                }
                if ($int2 = 5) {
                    return(7, obj_11069, "Members: Gold bracelet");
                }
                if ($int2 = 6) {
                    return(8, obj_1692, "Gold amulet");
                }
                if ($int2 = 7) {
                    return(13, obj_1611, "Members: Cut jade");
                }
                if ($int2 = 8) {
                    return(13, obj_21084, "Members: Jade ring");
                }
                if ($int2 = 9) {
                    return(16, obj_1716, "Holy symbol");
                }
                if ($int2 = 10) {
                    return(16, obj_1613, "Members: Cut red topaz");
                }
                if ($int2 = 11) {
                    return(16, obj_21087, "Members: Red topaz ring");
                }
                if ($int2 = 12) {
                    return(16, obj_21090, "Members: Opal necklace");
                }
                if ($int2 = 13) {
                    return(17, obj_1722, "Members: Unholy symbol");
                }
                if ($int2 = 14) {
                    return(20, obj_1607, "Cut sapphire");
                }
                if ($int2 = 15) {
                    return(20, obj_1637, "Sapphire ring");
                }
                if ($int2 = 16) {
                    return(22, obj_1656, "Sapphire necklace");
                }
                if ($int2 = 17) {
                    return(22, obj_21117, "Members: Opal bracelet");
                }
                if ($int2 = 18) {
                    return(23, obj_5525, "Tiara");
                }
                if ($int2 = 19) {
                    return(23, obj_11072, "Members: Sapphire bracelet");
                }
                if ($int2 = 20) {
                    return(24, obj_1694, "Sapphire amulet");
                }
                if ($int2 = 21) {
                    return(25, obj_21093, "Members: Jade necklace");
                }
                if ($int2 = 22) {
                    return(27, obj_1605, "Cut emerald");
                }
                if ($int2 = 23) {
                    return(27, obj_1639, "Emerald ring");
                }
                if ($int2 = 24) {
                    return(27, obj_21108, "Members: Opal amulet");
                }
                if ($int2 = 25) {
                    return(29, obj_1658, "Emerald necklace");
                }
                if ($int2 = 26) {
                    return(29, obj_21120, "Members: Jade bracelet");
                }
                if ($int2 = 27) {
                    return(30, obj_11076, "Members: Emerald bracelet");
                }
                if ($int2 = 28) {
                    return(31, obj_1696, "Emerald amulet");
                }
                if ($int2 = 29) {
                    return(32, obj_21096, "Members: Red topaz necklace");
                }
                if ($int2 = 30) {
                    return(34, obj_1603, "Cut ruby");
                }
                if ($int2 = 31) {
                    return(34, obj_1641, "Ruby ring");
                }
                if ($int2 = 32) {
                    return(34, obj_21111, "Members: Jade amulet");
                }
                if ($int2 = 33) {
                    return(37, obj_10132, "Members: Rabbit-foot necklaces");
                }
                if ($int2 = 34) {
                    return(38, obj_21123, "Members: Red topaz bracelet");
                }
                if ($int2 = 35) {
                    return(40, obj_1660, "Ruby necklace");
                }
                if ($int2 = 36) {
                    return(42, obj_11085, "Members: Ruby bracelet");
                }
                if ($int2 = 37) {
                    return(42, obj_26788, "Members: Gold Tiara");
                }
                if ($int2 = 38) {
                    return(43, obj_1601, "Cut diamond");
                }
                if ($int2 = 39) {
                    return(43, obj_1643, "Diamond ring");
                }
                if ($int2 = 40) {
                    return(45, obj_21114, "Members: Red topaz amulet");
                }
                if ($int2 = 41) {
                    return(50, obj_1698, "Ruby amulet");
                }
                if ($int2 = 42) {
                    return(55, obj_1615, "Members: Cut dragonstone");
                }
                if ($int2 = 43) {
                    return(55, obj_1645, "Members: Dragonstone ring");
                }
                if ($int2 = 44) {
                    return(56, obj_1662, "Diamond necklace");
                }
                if ($int2 = 45) {
                    return(58, obj_11092, "Members: Diamond bracelet");
                }
                if ($int2 = 46) {
                    return(67, obj_6573, "Members: Cut onyx");
                }
                if ($int2 = 47) {
                    return(67, obj_6575, "Members: Onyx ring");
                }
                if ($int2 = 48) {
                    return(70, obj_1700, "Diamond amulet");
                }
                if ($int2 = 49) {
                    return(72, obj_1664, "Members: Dragonstone necklace");
                }
                if ($int2 = 50) {
                    return(74, obj_11115, "Members: Dragonstone bracelet");
                }
                if ($int2 = 51) {
                    return(75, obj_11866, "Members: Slayer ring");
                }
                if ($int2 = 52) {
                    return(80, obj_1702, "Members: Dragonstone amulet");
                }
                if ($int2 = 53) {
                    return(82, obj_6577, "Members: Onyx necklace");
                }
                if ($int2 = 54) {
                    return(84, obj_11130, "Members: Onyx bracelet");
                }
                if ($int2 = 55) {
                    return(89, obj_19493, "Members: Cut zenyte");
                }
                if ($int2 = 56) {
                    return(89, obj_19538, "Members: Zenyte ring");
                }
                if ($int2 = 57) {
                    return(90, obj_6581, "Members: Onyx amulet");
                }
                if ($int2 = 58) {
                    return(92, obj_19535, "Members: Zenyte necklace");
                }
                if ($int2 = 59) {
                    return(95, obj_19532, "Members: Zenyte bracelet");
                }
                if ($int2 = 60) {
                    return(98, obj_19541, "Members: Zenyte amulet");
                }
                return(-1, null, "");
            case 6 :
                switch_int ($int2) {
                    case 0 :
                        return(18, obj_2961, "Silver sickle");
                    case 1 :
                        return(21, obj_9414, "Silver crossbow bolts");
                    case 2 :
                        return(54, obj_1395, "Water battlestaff");
                    case 3 :
                        return(58, obj_1399, "Earth battlestaff");
                    case 4 :
                        return(59, obj_12904, "Toxic Staff of the Dead");
                    case 5 :
                        return(59, obj_12899, "Trident of the Swamp");
                    case 6 :
                        return(62, obj_1393, "Fire battlestaff");
                    case 7 :
                        return(66, obj_1397, "Air battlestaff");
                    case 8 :
                        return(83, obj_4768, "Amethyst bolt tips");
                    case 9 :
                        return(85, obj_21350, "Amethyst arrowtips");
                    case 10 :
                        return(85, obj_27665, "Accursed Sceptre");
                    case 11 :
                        return(87, obj_13220, "Amethyst javelin heads");
                    case 12 :
                        return(89, obj_25853, "Amethyst dart tips");
                }
                return(-1, null, "");
            case 7 :
                switch_int ($int2) {
                    case 0 :
                        return(70, obj_25545, "Celestial signet<br>(with 70 Smithing)");
                    case 1 :
                        return(70, obj_23971, "Crystal helm<br>(with 70 Smithing)");
                    case 2 :
                        return(72, obj_23979, "Crystal legs<br>(with 72 Smithing)");
                    case 3 :
                        return(74, obj_23975, "Crystal body<br>(with 74 Smithing)");
                    case 4 :
                        return(76, obj_23680, "Crystal pickaxe<br>(with 76 Smithing)");
                    case 5 :
                        return(76, obj_23673, "Crystal axe<br>(with 76 Smithing)");
                    case 6 :
                        return(76, obj_23762, "Crystal harpoon<br>(with 76 Smithing)");
                    case 7 :
                        return(78, obj_23983, "Crystal bow<br>(with 78 Smithing)");
                    case 8 :
                        return(78, obj_23987, "Crystal halberd<br>(with 78 Smithing)");
                    case 9 :
                        return(78, obj_23991, "Crystal shield<br>(with 78 Smithing)");
                    case 10 :
                        return(80, obj_23951, "Enhanced crystal key<br>(with 80 Smithing)");
                    case 11 :
                        return(80, obj_23946, "Eternal teleport crystal<br>(with 80 Smithing)");
                    case 12 :
                        return(82, obj_23995, "Blade of Saeldor<br>(with 82 Smithing)");
                    case 13 :
                        return(82, obj_24551, "Blade of Saeldor (c)<br>(with 82 Smithing)");
                    case 14 :
                        return(82, obj_25865, "Bow of Faerdhinen<br>(with 82 Smithing)");
                    case 15 :
                        return(82, obj_25867, "Bow of Faerdhinen (c)<br>(with 82 Smithing)");
                }
                return(-1, null, "");
            case 8 :
                switch_int ($int2) {
                    case 0 :
                        return(5, obj_21512, "Craft a birdhouse trap from normal logs");
                    case 1 :
                        return(10, obj_19665, "Extract sinew from monkey tails");
                    case 2 :
                        return(15, obj_21515, "Craft a birdhouse trap from oak logs");
                    case 3 :
                        return(25, obj_21518, "Craft a birdhouse trap from willow logs");
                    case 4 :
                        return(30, obj_2347, "Repair Piscarilius fishing cranes");
                    case 5 :
                        return(35, obj_21521, "Craft a birdhouse trap from teak logs");
                    case 6 :
                        return(38, obj_13445, "Dense essence<br>(with 38 Mining)");
                    case 7 :
                        return(45, obj_22192, "Craft a birdhouse trap from maple logs");
                    case 8 :
                        return(50, obj_22195, "Craft a birdhouse trap from mahogany logs");
                    case 9 :
                        return(56, obj_26784, "Craft a colossal pouch from essence pouches");
                    case 10 :
                        return(60, obj_22198, "Craft a birdhouse trap from yew logs");
                    case 11 :
                        return(75, obj_22201, "Craft a birdhouse trap from magic logs");
                    case 12 :
                        return(75, obj_27281, "Craft a divine rune pouch from a Thread of Elidinis.");
                    case 13 :
                        return(90, obj_22204, "Craft a birdhouse trap from redwood logs");
                }
                return(-1, null, "");
        }
        return(-1, null, "");
    case 19 :
        if ($int1 = 0) {
            if ($int2 = 0) {
                return(1, obj_6443, "15 Arrow shafts (Logs)");
            }
            if ($int2 = 1) {
                return(1, obj_882, "Bronze arrows");
            }
            if ($int2 = 2) {
                return(7, obj_4773, "Bronze 'brutal' arrows");
            }
            if ($int2 = 3) {
                return(15, obj_6443, "30 Arrow shafts (Oak logs)");
            }
            if ($int2 = 4) {
                return(15, obj_884, "Iron arrows");
            }
            if ($int2 = 5) {
                return(18, obj_4778, "Iron 'brutal' arrows");
            }
            if ($int2 = 6) {
                return(30, obj_6443, "45 Arrow shafts (Willow logs)");
            }
            if ($int2 = 7) {
                return(30, obj_886, "Steel arrows");
            }
            if ($int2 = 8) {
                return(33, obj_4783, "Steel 'brutal' arrows");
            }
            if ($int2 = 9) {
                return(38, obj_4788, "Black 'brutal' arrows");
            }
            if ($int2 = 10) {
                return(45, obj_6443, "60 Arrow shafts (Maple logs)");
            }
            if ($int2 = 11) {
                return(45, obj_888, "Mithril arrows");
            }
            if ($int2 = 12) {
                return(49, obj_4793, "Mithril 'brutal' arrows");
            }
            if ($int2 = 13) {
                return(52, obj_4160, "Broad arrows");
            }
            if ($int2 = 14) {
                return(60, obj_6443, "75 Arrow shafts (Yew logs)");
            }
            if ($int2 = 15) {
                return(60, obj_890, "Adamant arrows");
            }
            if ($int2 = 16) {
                return(62, obj_4798, "Adamant 'brutal' arrows");
            }
            if ($int2 = 17) {
                return(75, obj_6443, "90 Arrow shafts (Magic logs)");
            }
            if ($int2 = 18) {
                return(75, obj_892, "Rune arrows");
            }
            if ($int2 = 19) {
                return(77, obj_4803, "Rune 'brutal' arrows");
            }
            if ($int2 = 20) {
                return(82, obj_21326, "Amethyst arrows");
            }
            if ($int2 = 21) {
                return(90, obj_6443, "105 Arrow shafts (Redwood logs)");
            }
            if ($int2 = 22) {
                return(90, obj_11212, "Dragon arrows");
            }
            return(-1, null, "");
        }
        if ($int1 = 1) {
            if ($int2 = 0) {
                return(5, obj_841, "Shortbows");
            }
            if ($int2 = 1) {
                return(10, obj_839, "Longbows");
            }
            if ($int2 = 2) {
                return(20, obj_843, "Oak shortbows");
            }
            if ($int2 = 3) {
                return(25, obj_845, "Oak longbows");
            }
            if ($int2 = 4) {
                return(30, obj_4827, "Ogre composite bows");
            }
            if ($int2 = 5) {
                return(35, obj_849, "Willow shortbows");
            }
            if ($int2 = 6) {
                return(40, obj_847, "Willow longbows");
            }
            if ($int2 = 7) {
                return(50, obj_853, "Maple shortbows");
            }
            if ($int2 = 8) {
                return(55, obj_851, "Maple longbows");
            }
            if ($int2 = 9) {
                return(65, obj_857, "Yew shortbows");
            }
            if ($int2 = 10) {
                return(70, obj_855, "Yew longbows");
            }
            if ($int2 = 11) {
                return(80, obj_861, "Magic shortbows");
            }
            if ($int2 = 12) {
                return(85, obj_859, "Magic longbows");
            }
            if ($int2 = 13) {
                return(85, obj_27655, "Webweaver bow");
            }
            return(-1, null, "");
        }
        if ($int1 = 2) {
            if ($int2 = 0) {
                return(9, obj_877, "Bronze bolts");
            }
            if ($int2 = 1) {
                return(11, obj_879, "Opal-tipped bronze bolts");
            }
            if ($int2 = 2) {
                return(24, obj_9139, "Blurite bolts<br>(after Knight's Sword quest)");
            }
            if ($int2 = 3) {
                return(26, obj_9335, "Jade-tipped blurite bolts");
            }
            if ($int2 = 4) {
                return(32, obj_10158, "Kebbit-tipped hunting bolts");
            }
            if ($int2 = 5) {
                return(39, obj_9140, "Iron bolts");
            }
            if ($int2 = 6) {
                return(41, obj_880, "Pearl-tipped iron bolts");
            }
            if ($int2 = 7) {
                return(42, obj_10159, "Long kebbit-tipped hunting bolts");
            }
            if ($int2 = 8) {
                return(43, obj_9145, "Silver bolts");
            }
            if ($int2 = 9) {
                return(46, obj_9141, "Steel bolts");
            }
            if ($int2 = 10) {
                return(48, obj_9336, "Red topaz-tipped steel bolts");
            }
            if ($int2 = 11) {
                return(51, obj_881, "Barbed-tipped bolts");
            }
            if ($int2 = 12) {
                return(54, obj_9142, "Mithril bolts");
            }
            if ($int2 = 13) {
                return(55, obj_11875, "Broad bolts");
            }
            if ($int2 = 14) {
                return(56, obj_9337, "Sapphire-tipped mithril bolts");
            }
            if ($int2 = 15) {
                return(58, obj_9338, "Emerald-tipped mithril bolts");
            }
            if ($int2 = 16) {
                return(59, obj_9418, "Mithril grapple-tipped bolts");
            }
            if ($int2 = 17) {
                return(61, obj_9143, "Adamantite bolts");
            }
            if ($int2 = 18) {
                return(63, obj_9339, "Ruby-tipped adamantite bolts");
            }
            if ($int2 = 19) {
                return(65, obj_9340, "Diamond-tipped adamantite bolts");
            }
            if ($int2 = 20) {
                return(69, obj_9144, "Runite bolts");
            }
            if ($int2 = 21) {
                return(71, obj_9341, "Dragonstone-tipped runite bolts");
            }
            if ($int2 = 22) {
                return(73, obj_9342, "Onyx-tipped runite bolts");
            }
            if ($int2 = 23) {
                return(76, obj_21316, "Amethyst broad bolts");
            }
            if ($int2 = 24) {
                return(84, obj_21905, "Dragon bolts");
            }
            return(-1, null, "");
        }
        if ($int1 = 3) {
            if ($int2 = 0) {
                return(10, obj_806, "Bronze darts");
            }
            if ($int2 = 1) {
                return(22, obj_807, "Iron darts");
            }
            if ($int2 = 2) {
                return(37, obj_808, "Steel darts");
            }
            if ($int2 = 3) {
                return(52, obj_809, "Mithril darts");
            }
            if ($int2 = 4) {
                return(53, obj_12926, "Toxic blowpipe");
            }
            if ($int2 = 5) {
                return(67, obj_810, "Adamant darts");
            }
            if ($int2 = 6) {
                return(81, obj_811, "Rune darts");
            }
            if ($int2 = 7) {
                return(90, obj_25849, "Amethyst darts");
            }
            if ($int2 = 8) {
                return(95, obj_11230, "Dragon darts");
            }
            return(-1, null, "");
        }
        if ($int1 = 4) {
            if ($int2 = 0) {
                return(9, obj_9440, "Bronze/wooden crossbows");
            }
            if ($int2 = 1) {
                return(24, obj_9442, "Blurite/oak crossbows<br>(after Knight's Sword quest)");
            }
            if ($int2 = 2) {
                return(39, obj_9444, "Iron/willow crossbows");
            }
            if ($int2 = 3) {
                return(46, obj_9446, "Steel/teak crossbows");
            }
            if ($int2 = 4) {
                return(54, obj_9448, "Mithril/maple crossbows");
            }
            if ($int2 = 5) {
                return(61, obj_9450, "Adamantite/mahogany crossbows");
            }
            if ($int2 = 6) {
                return(69, obj_9452, "Runite/yew crossbows");
            }
            if ($int2 = 7) {
                return(78, obj_21952, "Dragon/magic crossbows");
            }
            return(-1, null, "");
        }
        if ($int1 = 5) {
            if ($int2 = 0) {
                return(3, obj_825, "Bronze javelins");
            }
            if ($int2 = 1) {
                return(17, obj_826, "Iron javelins");
            }
            if ($int2 = 2) {
                return(32, obj_827, "Steel javelins");
            }
            if ($int2 = 3) {
                return(47, obj_19478, "Light ballistae");
            }
            if ($int2 = 4) {
                return(47, obj_828, "Mithril javelins");
            }
            if ($int2 = 5) {
                return(62, obj_829, "Adamant javelins");
            }
            if ($int2 = 6) {
                return(72, obj_19481, "Heavy ballistae");
            }
            if ($int2 = 7) {
                return(77, obj_830, "Rune javelins");
            }
            if ($int2 = 8) {
                return(84, obj_21318, "Amethyst javelins");
            }
            if ($int2 = 9) {
                return(92, obj_19484, "Dragon javelins");
            }
            return(-1, null, "");
        }
        if ($int1 = 6) {
            if ($int2 = 0) {
                return(27, obj_22251, "Oak shield");
            }
            if ($int2 = 1) {
                return(42, obj_22254, "Willow shield");
            }
            if ($int2 = 2) {
                return(57, obj_22257, "Maple shield");
            }
            if ($int2 = 3) {
                return(72, obj_22260, "Yew shield");
            }
            if ($int2 = 4) {
                return(87, obj_22263, "Magic shield");
            }
            if ($int2 = 5) {
                return(92, obj_22266, "Redwood shield");
            }
            return(-1, null, "");
        }
        if ($int1 = 7) {
            if ($int2 = 0) {
                return(40, obj_1391, "Battlestaves");
            }
            return(-1, null, "");
        }
        return(-1, null, "");
    case 13 :
        if ($int1 = 0) {
            switch_int ($int2) {
                case 0 :
                    return(1, obj_1436, "Rune essence<br>(after Rune Mysteries)");
                case 1 :
                    return(1, obj_434, "Clay");
                case 2 :
                    return(1, obj_436, "Copper ore");
                case 3 :
                    return(1, obj_438, "Tin ore");
                case 4 :
                    return(10, obj_668, "Blurite ore");
                case 5 :
                    return(10, obj_3211, "Members: Limestone");
                case 6 :
                    return(14, obj_25676, "Barronite<br>(after Below Ice Mountain)");
                case 7 :
                    return(15, obj_440, "Iron ore");
                case 8 :
                    return(20, obj_442, "Silver ore");
                case 9 :
                    return(22, obj_21622, "Members: Volcanic ash");
                case 10 :
                    return(30, obj_453, "Coal");
                case 11 :
                    return(30, obj_7936, "Members: Pure essence<br>(after Rune Mysteries)");
                case 12 :
                    return(30, obj_12011, "Members: Motherlode mine (lower level)");
                case 13 :
                    return(35, obj_6977, "Members: Sandstone");
                case 14 :
                    return(38, obj_13445, "Members: Dense essence<br>(with 38 Crafting)");
                case 15 :
                    return(40, obj_444, "Gold");
                case 16 :
                    return(40, obj_1629, "Members: Gem rocks");
                case 17 :
                    return(42, obj_13571, "Members: Volcanic sulphur");
                case 18 :
                    return(43, obj_13573, "Members: Lovakengj Blast Mine");
                case 19 :
                    return(45, obj_6983, "Members: Granite");
                case 20 :
                    return(50, obj_21532, "Members: Volcanic Mine (with 150 Kudos)");
                case 21 :
                    return(55, obj_447, "Mithril ore");
                case 22 :
                    return(60, obj_24704, "Members: Daeyalt essence<br>(after Sins of the Father)");
                case 23 :
                    return(65, obj_13356, "Members: Lovakite ore");
                case 24 :
                    return(70, obj_449, "Adamantite ore");
                case 25 :
                    return(70, obj_1761, "Members: Soft clay");
                case 26 :
                    return(72, obj_12011, "Members: Motherlode mine (upper level)");
                case 27 :
                    return(72, obj_22593, "Members: <"Te Salt">");
                case 28 :
                    return(72, obj_22595, "Members: <"Efh Salt">");
                case 29 :
                    return(72, obj_22597, "Members: <"Urt Salt">");
                case 30 :
                    return(72, obj_22603, "Members: Basalt");
                case 31 :
                    return(75, obj_27619, "Members: Ancient essence<br>(after Secrets of the North)");
                case 32 :
                    return(85, obj_451, "Runite ore");
                case 33 :
                    return(92, obj_21347, "Members: Amethyst");
            }
            return(-1, null, "");
        }
        if ($int1 = 1) {
            switch_int ($int2) {
                case 0 :
                    return(1, obj_1265, "Bronze pickaxe");
                case 1 :
                    return(1, obj_1267, "Iron pickaxe");
                case 2 :
                    return(6, obj_1269, "Steel pickaxe");
                case 3 :
                    return(11, obj_12297, "Black pickaxe");
                case 4 :
                    return(20, obj_21343, "Members: Mining gloves");
                case 5 :
                    return(21, obj_1273, "Mithril pickaxe");
                case 6 :
                    return(31, obj_1271, "Adamant pickaxe");
                case 7 :
                    return(41, obj_1275, "Rune pickaxe");
                case 8 :
                    return(41, obj_23276, "Gilded pickaxe");
                case 9 :
                    return(55, obj_21345, "Members: Superior mining gloves");
                case 10 :
                    return(61, obj_11920, "Members: Dragon pickaxe");
                case 11 :
                    return(61, obj_20014, "Members: 3rd age pickaxe");
                case 12 :
                    return(61, obj_13243, "Members: Infernal pickaxe<br>(with 85 Smithing)");
                case 13 :
                    return(70, obj_21392, "Members: Expert mining gloves");
                case 14 :
                    return(71, obj_23680, "Members: Crystal pickaxe<br>(after Song of the Elves)");
            }
            return(-1, null, "");
        }
        if ($int1 = 2) {
            switch_int ($int2) {
                case 0 :
                    return(30, obj_12011, "Members: Motherlode Mine");
                case 1 :
                    return(60, obj_447, "Mining Guild");
                case 2 :
                    return(72, obj_12011, "Members: Motherlode Mine upper area");
            }
            return(-1, null, "");
        }
        if ($int1 = 3) {
            switch_int ($int2) {
                case 0 :
                    return(10, obj_25532, "Size-1 stars");
                case 1 :
                    return(20, obj_25532, "Size-2 stars");
                case 2 :
                    return(30, obj_25532, "Size-3 stars");
                case 3 :
                    return(40, obj_25532, "Size-4 stars");
                case 4 :
                    return(50, obj_25532, "Size-5 stars");
                case 5 :
                    return(60, obj_25532, "Size-6 stars");
                case 6 :
                    return(70, obj_25532, "Size-7 stars");
                case 7 :
                    return(80, obj_25532, "Size-8 stars");
                case 8 :
                    return(90, obj_25532, "Size-9 stars");
            }
        }
        return(-1, null, "");
    case 14 :
        return(~skill_guide_data_smithing($int1, $int2));
    case 15 :
        if ($int1 = 0) {
            if ($int2 = 0) {
                return(1, obj_317, "Shrimp - Small fishing net");
            }
            if ($int2 = 1) {
                return(5, obj_3150, "Members: Karambwanji - Small fishing net");
            }
            if ($int2 = 2) {
                return(7, obj_25652, "Guppy - Small fishing net (After Below Ice Mountain)");
            }
            if ($int2 = 3) {
                return(15, obj_321, "Anchovies - Small fishing net");
            }
            if ($int2 = 4) {
                return(20, obj_25658, "Cavefish - Small fishing net (After Below Ice Mountain)");
            }
            if ($int2 = 5) {
                return(33, obj_5004, "Members: Giant frogspawn - Small fishing net");
            }
            if ($int2 = 6) {
                return(33, obj_25664, "Tetra - Small fishing net (After Below Ice Mountain)");
            }
            if ($int2 = 7) {
                return(62, obj_7944, "Members: Monkfish - Small fishing net");
            }
            if ($int2 = 8) {
                return(82, obj_10572, "Members: Minnow - Small fishing net<br>(after Fishing Contest)");
            }
            return(-1, null, "");
        }
        if ($int1 = 1) {
            if ($int2 = 0) {
                return(16, obj_353, "Members: Mackerel - Big fishing net");
            }
            if ($int2 = 1) {
                return(16, obj_407, "Members: Oyster - Big fishing net");
            }
            if ($int2 = 2) {
                return(16, obj_405, "Members: Caskets - Big fishing net");
            }
            if ($int2 = 3) {
                return(23, obj_341, "Members: Cod - Big fishing net");
            }
            if ($int2 = 4) {
                return(46, obj_363, "Members: Bass - Big fishing net");
            }
            if ($int2 = 5) {
                return(46, obj_25670, "Members: Catfish - Big fishing net (After Below Ice Mountain)");
            }
            return(-1, null, "");
        }
        if ($int1 = 2) {
            if ($int2 = 0) {
                return(5, obj_327, "Sardine - Fishing rod & Fishing bait");
            }
            if ($int2 = 1) {
                return(10, obj_345, "Herring - Fishing rod & Fishing bait");
            }
            if ($int2 = 2) {
                return(20, obj_335, "Trout - Fly fishing rod & Feathers");
            }
            if ($int2 = 3) {
                return(25, obj_349, "Pike - Fishing rod & Fishing bait");
            }
            if ($int2 = 4) {
                return(28, obj_3379, "Members: Slimy eel - Fishing rod & Fishing bait");
            }
            if ($int2 = 5) {
                return(30, obj_331, "Salmon - Fly fishing rod & feathers");
            }
            if ($int2 = 6) {
                return(38, obj_10138, "Members: Rainbow fish - Fly fishing rod & Stripy feathers");
            }
            if ($int2 = 7) {
                return(38, obj_5001, "Members: Cave eel - Fishing rod & Fishing bait");
            }
            if ($int2 = 8) {
                return(53, obj_2148, "Members: Lava eel - Oily fishing rod & Fishing bait");
            }
            if ($int2 = 9) {
                return(80, obj_21293, "Members: Infernal eel - Oily fishing rod & Fishing bait");
            }
            if ($int2 = 10) {
                return(82, obj_13439, "Members: Anglerfish - Fishing rod & Sandworms");
            }
            if ($int2 = 11) {
                return(87, obj_13339, "Members: Sacred eel - Fishing rod & Fishing bait");
            }
            return(-1, null, "");
        }
        if ($int1 = 3) {
            if ($int2 = 0) {
                return(35, obj_359, "Tuna - Harpoon");
            }
            if ($int2 = 1) {
                return(50, obj_371, "Swordfish - Harpoon");
            }
            if ($int2 = 2) {
                return(76, obj_383, "Members: Shark - Harpoon");
            }
            return(-1, null, "");
        }
        if ($int1 = 4) {
            if ($int2 = 0) {
                return(43, obj_22826, "Members: Bluegill - Aerial fishing<br>(With 35 hunter)");
            }
            if ($int2 = 1) {
                return(56, obj_22829, "Members: Common tench - Aerial fishing<br>(With 51 hunter)");
            }
            if ($int2 = 2) {
                return(73, obj_22832, "Members: Mottled eel - Aerial fishing<br>(With 68 hunter)");
            }
            if ($int2 = 3) {
                return(91, obj_22835, "Members: Greater siren - Aerial fishing<br>(With 87 hunter)");
            }
            return(-1, null, "");
        }
        if ($int1 = 5) {
            if ($int2 = 0) {
                return(40, obj_377, "Lobster - Lobster pot");
            }
            if ($int2 = 1) {
                return(85, obj_11934, "Members: Dark crab - Lobster pot & Dark fishing bait");
            }
            return(-1, null, "");
        }
        if ($int1 = 6) {
            if ($int2 = 0) {
                return(-1, obj_7620, "To start fishing like a Barbarian, talk to<br>Otto Godblessed when you have at least<br>level 48 Fishing, level 15 Agility and level 15 Strength.");
            }
            if ($int2 = 1) {
                return(48, obj_11328, "Leaping trout - Barbarian rod & most bait types<br> (with 15 Agility & 15 Strength)");
            }
            if ($int2 = 2) {
                return(55, obj_359, "Tuna<br> (with 35 Strength)");
            }
            if ($int2 = 3) {
                return(55, obj_25564, "Harpoonfish<br> (with 35 Strength)");
            }
            if ($int2 = 4) {
                return(58, obj_11330, "Leaping salmon - Barbarian rod & most bait types<br> (with 30 Agility & 30 Strength)");
            }
            if ($int2 = 5) {
                return(70, obj_11332, "Leaping sturgeon - Barbarian rod & most bait types<br> (with 45 Agility & 45 Strength)");
            }
            if ($int2 = 6) {
                return(70, obj_371, "Swordfish<br> (with 50 Strength)");
            }
            if ($int2 = 7) {
                return(96, obj_383, "Shark<br> (with 76 Strength)");
            }
            return(-1, null, "");
        }
        if ($int1 = 7) {
            if ($int2 = 0) {
                return(1, obj_303, "Small fishing net");
            }
            if ($int2 = 1) {
                return(1, obj_307, "Fishing rod");
            }
            if ($int2 = 2) {
                return(1, obj_305, "Members: Big fishing net");
            }
            if ($int2 = 3) {
                return(1, obj_311, "Harpoon");
            }
            if ($int2 = 4) {
                return(1, obj_309, "Fly fishing rod");
            }
            if ($int2 = 5) {
                return(1, obj_301, "Lobster pot");
            }
            if ($int2 = 6) {
                return(1, obj_3157, "Members: Karambwan vessel (after Tai Bwo Wannai Trio)");
            }
            if ($int2 = 7) {
                return(34, obj_13258, "Members: Angler's outfit");
            }
            if ($int2 = 8) {
                return(43, obj_22816, "Members: Cormorant's glove<br>(with 35 hunter)");
            }
            if ($int2 = 9) {
                return(48, obj_11323, "Members: Barbarian rod<br>(with 15 strength & 15 agility)");
            }
            if ($int2 = 10) {
                return(61, obj_21028, "Members: Dragon harpoon");
            }
            if ($int2 = 11) {
                return(71, obj_23762, "Members: Crystal harpoon<br>(after Song of the Elves)");
            }
            if ($int2 = 12) {
                return(75, obj_21031, "Members: Infernal harpoon<br>(with 85 Cooking)");
            }
            return(-1, null, "");
        }
        if ($int1 = 8) {
            if ($int2 = 0) {
                return(1, obj_20855, "Pysk fish");
            }
            if ($int2 = 1) {
                return(15, obj_20857, "Suphi fish");
            }
            if ($int2 = 2) {
                return(30, obj_20859, "Leckish fish");
            }
            if ($int2 = 3) {
                return(45, obj_20861, "Brawk fish");
            }
            if ($int2 = 4) {
                return(60, obj_20863, "Mycil fish");
            }
            if ($int2 = 5) {
                return(75, obj_20865, "Roqed fish");
            }
            if ($int2 = 6) {
                return(90, obj_20867, "Kyren fish");
            }
            return(-1, null, "");
        }
        if ($int1 = 9) {
            if ($int2 = 0) {
                return(15, obj_13429, "Members: Collecting from barrels of fresh fish");
            }
            if ($int2 = 1) {
                return(35, obj_25565, "Members: Fighting Tempoross");
            }
            if ($int2 = 2) {
                return(47, obj_21655, "Members: Accessing drift net fishing on Fossil Island (with 44 hunter)");
            }
            if ($int2 = 3) {
                return(65, obj_3142, "Members: Karambwan - Karambwan vessel");
            }
            if ($int2 = 4) {
                return(79, obj_395, "Members: Sea turtle - Trawler & Tempoross");
            }
            if ($int2 = 5) {
                return(81, obj_389, "Members: Manta ray - Trawler & Tempoross");
            }
            return(-1, null, "");
        }
        return(-1, null, "");
    case 16 :
        if ($int1 = 0) {
            if ($int2 = 0) {
                return(1, obj_2142, "Meat");
            }
            if ($int2 = 1) {
                return(1, obj_9436, "Members: Sinew<br>(made by drying beef or bear meat on a range)");
            }
            if ($int2 = 2) {
                return(1, obj_315, "Shrimp");
            }
            if ($int2 = 3) {
                return(1, obj_2140, "Chicken");
            }
            if ($int2 = 4) {
                return(1, obj_3228, "Members: Rabbit");
            }
            if ($int2 = 5) {
                return(1, obj_319, "Anchovies");
            }
            if ($int2 = 6) {
                return(1, obj_325, "Sardine");
            }
            if ($int2 = 7) {
                return(1, obj_3146, "Members: Karambwan");
            }
            if ($int2 = 8) {
                return(1, obj_1885, "Members: Ugthanki kebab");
            }
            if ($int2 = 9) {
                return(5, obj_347, "Herring");
            }
            if ($int2 = 10) {
                return(10, obj_355, "Members: Mackerel");
            }
            if ($int2 = 11) {
                return(11, obj_9980, "Members: Roasted bird meat");
            }
            if ($int2 = 12) {
                return(12, obj_3369, "Members: Thin snail");
            }
            if ($int2 = 13) {
                return(15, obj_333, "Trout");
            }
            if ($int2 = 14) {
                return(16, obj_6297, "Members: Spider");
            }
            if ($int2 = 15) {
                return(16, obj_7223, "Members: Roasted rabbit");
            }
            if ($int2 = 16) {
                return(17, obj_3371, "Members: Lean snail");
            }
            if ($int2 = 17) {
                return(18, obj_339, "Members: Cod");
            }
            if ($int2 = 18) {
                return(20, obj_351, "Pike");
            }
            if ($int2 = 19) {
                return(21, obj_9988, "Members: Roasted beast meat");
            }
            if ($int2 = 20) {
                return(21, obj_7521, "Members: Giant crab meat");
            }
            if ($int2 = 21) {
                return(22, obj_3373, "Members: Fat snail");
            }
            if ($int2 = 22) {
                return(25, obj_329, "Salmon");
            }
            if ($int2 = 23) {
                return(28, obj_3381, "Members: Slimy eel");
            }
            if ($int2 = 24) {
                return(30, obj_361, "Tuna");
            }
            if ($int2 = 25) {
                return(30, obj_2878, "Members: Roasted chompy");
            }
            if ($int2 = 26) {
                return(31, obj_7530, "Members: Fishcakes");
            }
            if ($int2 = 27) {
                return(35, obj_10136, "Members: Rainbow fish");
            }
            if ($int2 = 28) {
                return(38, obj_5003, "Members: Cave eel");
            }
            if ($int2 = 29) {
                return(40, obj_379, "Lobster");
            }
            if ($int2 = 30) {
                return(41, obj_7568, "Members: Jubbly");
            }
            if ($int2 = 31) {
                return(43, obj_365, "Members: Bass");
            }
            if ($int2 = 32) {
                return(45, obj_373, "Swordfish");
            }
            if ($int2 = 33) {
                return(53, obj_2149, "Members: Lava eel");
            }
            if ($int2 = 34) {
                return(62, obj_7946, "Members: Monkfish");
            }
            if ($int2 = 35) {
                return(72, obj_13339, "Members: Dissect sacred eels");
            }
            if ($int2 = 36) {
                return(80, obj_385, "Members: Shark");
            }
            if ($int2 = 37) {
                return(82, obj_397, "Members: Sea turtle");
            }
            if ($int2 = 38) {
                return(84, obj_13441, "Members: Anglerfish");
            }
            if ($int2 = 39) {
                return(90, obj_11936, "Members: Dark crab");
            }
            if ($int2 = 40) {
                return(91, obj_391, "Members: Manta ray");
            }
            return(-1, null, "");
        }
        if ($int1 = 1) {
            if ($int2 = 0) {
                return(1, obj_2309, "Bread");
            }
            if ($int2 = 1) {
                return(58, obj_1865, "Members: Pitta bread");
            }
            if ($int2 = 2) {
                return(-1, obj_7620, "1. Pick some grain and take it to a windmill to make flour.");
            }
            if ($int2 = 3) {
                return(-1, obj_7620, "2. Use a pot to collect the flour you have made.");
            }
            if ($int2 = 4) {
                return(-1, obj_7620, "3. Fill a bucket or jug with water from a sink or fountain.");
            }
            if ($int2 = 5) {
                return(-1, obj_7620, "4. Mix the flour and water to make some bread dough.");
            }
            if ($int2 = 6) {
                return(-1, obj_7620, "5. Cook the dough by using it with a stove.");
            }
            return(-1, null, "");
        }
        if ($int1 = 2) {
            if ($int2 = 0) {
                return(10, obj_2325, "Redberry pie");
            }
            if ($int2 = 1) {
                return(20, obj_2327, "Meat pie");
            }
            if ($int2 = 2) {
                return(29, obj_7170, "Members: Mud pie");
            }
            if ($int2 = 3) {
                return(30, obj_2323, "Apple pie");
            }
            if ($int2 = 4) {
                return(34, obj_7178, "Members: Garden pie");
            }
            if ($int2 = 5) {
                return(47, obj_7188, "Members: Fish pie");
            }
            if ($int2 = 6) {
                return(52, obj_19662, "Members: Botanical pie");
            }
            if ($int2 = 7) {
                return(60, obj_21690, "Members: Mushroom pie");
            }
            if ($int2 = 8) {
                return(70, obj_7198, "Members: Admiral pie");
            }
            if ($int2 = 9) {
                return(73, obj_22795, "Members: Dragonfruit pie");
            }
            if ($int2 = 10) {
                return(85, obj_7208, "Members: Wild pie");
            }
            if ($int2 = 11) {
                return(95, obj_7218, "Members: Summer pie");
            }
            if ($int2 = 12) {
                return(-1, obj_7620, "To make a pie:");
            }
            if ($int2 = 13) {
                return(-1, obj_7620, "1. Mix flour and water to make pastry dough.");
            }
            if ($int2 = 14) {
                return(-1, obj_7620, "2. Place the dough in an empty pie dish.");
            }
            if ($int2 = 15) {
                return(-1, obj_7620, "3. Use your choice of filling with the empty pie (refer to pie recipe book).");
            }
            if ($int2 = 16) {
                return(-1, obj_7620, "4. Cook the pie by using it with a stove.");
            }
            return(-1, null, "");
        }
        if ($int1 = 3) {
            if ($int2 = 0) {
                return(25, obj_2003, "Stew");
            }
            if ($int2 = 1) {
                return(60, obj_2011, "Members: Curry");
            }
            if ($int2 = 2) {
                return(-1, obj_7620, "To make stew:");
            }
            if ($int2 = 3) {
                return(-1, obj_7620, "1. Obtain a bowl and fill it with water from a sink or fountain.");
            }
            if ($int2 = 4) {
                return(-1, obj_7620, "2. Pick a potato and place it in the bowl.");
            }
            if ($int2 = 5) {
                return(-1, obj_7620, "3. Cook some meat and place it in the bowl.");
            }
            if ($int2 = 6) {
                return(-1, obj_7620, "4. Cook the stew by using it with a stove or fire.");
            }
            if ($int2 = 7) {
                return(-1, obj_7620, "After completing Evil Dave's miniquest<br>from Recipe for Disaster, I can add<br>spices to cooked stew.");
            }
            if ($int2 = 8) {
                return(-1, obj_7620, "To make curry: make uncooked stew as above. Before cooking, add some spices or 3 curry leaves.");
            }
            return(-1, null, "");
        }
        if ($int1 = 4) {
            if ($int2 = 0) {
                return(35, obj_2289, "Plain pizza");
            }
            if ($int2 = 1) {
                return(45, obj_2293, "Meat pizza");
            }
            if ($int2 = 2) {
                return(55, obj_2297, "Anchovy pizza");
            }
            if ($int2 = 3) {
                return(65, obj_2301, "Members: Pineapple pizza");
            }
            if ($int2 = 4) {
                return(-1, obj_7620, "To make a pizza:");
            }
            if ($int2 = 5) {
                return(-1, obj_7620, "1. Mix flour and water to make a pizza base.");
            }
            if ($int2 = 6) {
                return(-1, obj_7620, "2. Add a tomato to the pizza.");
            }
            if ($int2 = 7) {
                return(-1, obj_7620, "3. Add some cheese to the pizza.");
            }
            if ($int2 = 8) {
                return(-1, obj_7620, "4. Cook the pizza by using it with a stove.");
            }
            if ($int2 = 9) {
                return(-1, obj_7620, "5. Add your choice of topping to the pizza.");
            }
            return(-1, null, "");
        }
        if ($int1 = 5) {
            if ($int2 = 0) {
                return(40, obj_1891, "Cake");
            }
            if ($int2 = 1) {
                return(50, obj_1897, "Chocolate cake");
            }
            if ($int2 = 2) {
                return(-1, obj_7620, "To make a cake:");
            }
            if ($int2 = 3) {
                return(-1, obj_7620, "1. Mix flour, eggs and milk together in a cake tin.");
            }
            if ($int2 = 4) {
                return(-1, obj_7620, "2. Cook the cake by using it with a stove.");
            }
            if ($int2 = 5) {
                return(-1, obj_7620, "3. Optional: Buy some chocolate and add it to the cake to make a chocolate cake.");
            }
            return(-1, null, "");
        }
        if ($int1 = 6) {
            if ($int2 = 0) {
                return(35, obj_1993, "Wine");
            }
            if ($int2 = 1) {
                return(65, obj_245, "Members: Wine of Zamorak");
            }
            if ($int2 = 2) {
                return(-1, obj_7620, "To make wine:");
            }
            if ($int2 = 3) {
                return(-1, obj_7620, "1. Fill a jug with water.");
            }
            if ($int2 = 4) {
                return(-1, obj_7620, "2. Use grapes with the jug of water.");
            }
            if ($int2 = 5) {
                return(-1, obj_7620, "3. Wait until the wine ferments.");
            }
            if ($int2 = 6) {
                return(-1, obj_7620, "Wine will ferment when left in<br>your inventory or the bank.");
            }
            return(-1, null, "");
        }
        if ($int1 = 7) {
            if ($int2 = 0) {
                return(20, obj_4242, "Nettle tea");
            }
            if ($int2 = 1) {
                return(-1, obj_7620, "To make nettle tea:");
            }
            if ($int2 = 2) {
                return(-1, obj_7620, "1. Fill a bowl with water.");
            }
            if ($int2 = 3) {
                return(-1, obj_7620, "2. Put some picked nettles into the bowl of water.");
            }
            if ($int2 = 4) {
                return(-1, obj_7620, "3. Boil the nettle-water by using it with a range or a fire.");
            }
            if ($int2 = 5) {
                return(-1, obj_7620, "4. Use the bowl of nettle tea with a cup.");
            }
            if ($int2 = 6) {
                return(-1, obj_7620, "5. If you take milk, use a bucket of milk on the nettle tea.");
            }
            return(-1, null, "");
        }
        if ($int1 = 8) {
            if ($int2 = 0) {
                return(14, obj_5763, "Cider<br>4 Apple mush");
            }
            if ($int2 = 1) {
                return(19, obj_1913, "Dwarven Stout<br>4 Hammerstone hops");
            }
            if ($int2 = 2) {
                return(24, obj_1905, "Asgarnian Ale<br>4 Asgarnian hops");
            }
            if ($int2 = 3) {
                return(29, obj_1909, "Greenman's Ale<br>4 Harralander leaves");
            }
            if ($int2 = 4) {
                return(34, obj_1907, "Wizard's Mind Bomb<br>4 Yanillian hops");
            }
            if ($int2 = 5) {
                return(39, obj_1911, "Dragon Bitter<br>4 Krandorian hops");
            }
            if ($int2 = 6) {
                return(44, obj_2955, "Moonlight Mead<br>4 Bittercap mushrooms");
            }
            if ($int2 = 7) {
                return(49, obj_5751, "Axeman's Folly<br>1 Oak root");
            }
            if ($int2 = 8) {
                return(54, obj_5755, "Chef's Delight<br>4 Portions of chocolate dust");
            }
            if ($int2 = 9) {
                return(59, obj_5759, "Slayer's Respite<br>4 Wildblood hops");
            }
            return(-1, null, "");
        }
        if ($int1 = 9) {
            if ($int2 = 0) {
                return(7, obj_6701, "Baked potato");
            }
            if ($int2 = 1) {
                return(9, obj_7072, "Spicy sauce (topping ingredient)");
            }
            if ($int2 = 2) {
                return(11, obj_7062, "Chilli con carne (topping)");
            }
            if ($int2 = 3) {
                return(13, obj_7078, "Scrambled egg (topping ingredient)");
            }
            if ($int2 = 4) {
                return(23, obj_7064, "Scrambled egg and tomato (topping)");
            }
            if ($int2 = 5) {
                return(28, obj_5988, "Sweetcorn");
            }
            if ($int2 = 6) {
                return(39, obj_6703, "Baked potato with butter");
            }
            if ($int2 = 7) {
                return(41, obj_7054, "Baked potato with chilli con carne");
            }
            if ($int2 = 8) {
                return(42, obj_7084, "Fried onion (topping ingredient)");
            }
            if ($int2 = 9) {
                return(46, obj_7082, "Fried mushroom (topping ingredient)");
            }
            if ($int2 = 10) {
                return(47, obj_6705, "Baked potato with butter and cheese");
            }
            if ($int2 = 11) {
                return(51, obj_7056, "Baked potato with egg and tomato");
            }
            if ($int2 = 12) {
                return(57, obj_7066, "Fried mushroom and onion (topping)");
            }
            if ($int2 = 13) {
                return(64, obj_7058, "Baked potato with mushroom and onion");
            }
            if ($int2 = 14) {
                return(67, obj_7068, "Tuna and sweetcorn (topping)");
            }
            if ($int2 = 15) {
                return(68, obj_7060, "Baked potato with tuna and sweetcorn");
            }
            if ($int2 = 16) {
                return(-1, obj_7620, "To make baked potatoes with toppings:");
            }
            if ($int2 = 17) {
                return(-1, obj_7620, "1. Bake the potato on a range.");
            }
            if ($int2 = 18) {
                return(-1, obj_7620, "2. Add some butter.");
            }
            if ($int2 = 19) {
                return(-1, obj_7620, "3. If needed, combine topping ingredients by chopping them into a bowl.");
            }
            if ($int2 = 20) {
                return(-1, obj_7620, "Ingredients for toppings:");
            }
            if ($int2 = 21) {
                return(-1, obj_7620, "1. Chilli con carne: meat & spicy sauce (made from garlic and gnome spice)");
            }
            if ($int2 = 22) {
                return(-1, obj_7620, "2. Egg and tomato: scrambled egg & tomato");
            }
            if ($int2 = 23) {
                return(-1, obj_7620, "3. Mushroom and onion: fried bittercap mushroom & fried onion");
            }
            if ($int2 = 24) {
                return(-1, obj_7620, "4. Tuna and sweetcorn: tuna & cooked sweetcorn");
            }
            return(-1, null, "");
        }
        if ($int1 = 10) {
            if ($int2 = 0) {
                return(21, obj_2130, "Cream");
            }
            if ($int2 = 1) {
                return(38, obj_6697, "Butter");
            }
            if ($int2 = 2) {
                return(48, obj_1985, "Cheese");
            }
            if ($int2 = 3) {
                return(-1, obj_7620, "To make dairy products:");
            }
            if ($int2 = 4) {
                return(-1, obj_7620, "1. Get a bucket of milk, a pot of cream or a pot of butter.");
            }
            if ($int2 = 5) {
                return(-1, obj_7620, "2. Use the milk, cream or butter in a churn.");
            }
            if ($int2 = 6) {
                return(-1, obj_7620, "3. Milk can be churned into cream, then into butter, then into cheese.");
            }
            return(-1, null, "");
        }
        if ($int1 = 11) {
            if ($int2 = 0) {
                return(6, obj_2084, "Fruit Blast");
            }
            if ($int2 = 1) {
                return(8, obj_2048, "Pineapple Punch");
            }
            if ($int2 = 2) {
                return(10, obj_2217, "Toad crunchies");
            }
            if ($int2 = 3) {
                return(12, obj_2213, "Spicy crunchies");
            }
            if ($int2 = 4) {
                return(14, obj_2205, "Worm crunchies");
            }
            if ($int2 = 5) {
                return(16, obj_2209, "Chocolate chip crunchies");
            }
            if ($int2 = 6) {
                return(18, obj_2054, "Wizard Blizzard");
            }
            if ($int2 = 7) {
                return(20, obj_2080, "Short Green Guy (SGG)");
            }
            if ($int2 = 8) {
                return(25, obj_2277, "Fruit batta");
            }
            if ($int2 = 9) {
                return(26, obj_2255, "Toad batta");
            }
            if ($int2 = 10) {
                return(27, obj_2253, "Worm batta");
            }
            if ($int2 = 11) {
                return(28, obj_2281, "Vegetable batta");
            }
            if ($int2 = 12) {
                return(29, obj_2259, "Cheese and tomato batta");
            }
            if ($int2 = 13) {
                return(30, obj_2191, "Worm hole");
            }
            if ($int2 = 14) {
                return(32, obj_2092, "Drunk Dragon");
            }
            if ($int2 = 15) {
                return(33, obj_2074, "Chocolate Saturday");
            }
            if ($int2 = 16) {
                return(35, obj_2195, "Vegetable ball");
            }
            if ($int2 = 17) {
                return(37, obj_2064, "Blurberry Special");
            }
            if ($int2 = 18) {
                return(40, obj_2187, "Tangled toads' legs");
            }
            if ($int2 = 19) {
                return(42, obj_2185, "Chocolate bomb");
            }
            return(-1, null, "");
        }
        if ($int1 = 12) {
            if ($int2 = 0) {
                return(1, obj_20856, "Pysk fish");
            }
            if ($int2 = 1) {
                return(1, obj_20871, "Guanic bat");
            }
            if ($int2 = 2) {
                return(15, obj_20858, "Suphi fish");
            }
            if ($int2 = 3) {
                return(15, obj_20873, "Prael bat");
            }
            if ($int2 = 4) {
                return(30, obj_20860, "Leckish fish");
            }
            if ($int2 = 5) {
                return(30, obj_20875, "Giral bat");
            }
            if ($int2 = 6) {
                return(45, obj_20862, "Brawk fish");
            }
            if ($int2 = 7) {
                return(45, obj_20877, "Phluxia bat");
            }
            if ($int2 = 8) {
                return(60, obj_20864, "Mycil fish");
            }
            if ($int2 = 9) {
                return(60, obj_20879, "Kryket bat");
            }
            if ($int2 = 10) {
                return(75, obj_20866, "Roqed fish");
            }
            if ($int2 = 11) {
                return(75, obj_20881, "Murng bat");
            }
            if ($int2 = 12) {
                return(90, obj_20868, "Kyren fish");
            }
            if ($int2 = 13) {
                return(90, obj_20883, "Psykk bat");
            }
            return(-1, null, "");
        }
        if ($int1 = 13) {
            if ($int2 = 0) {
                return(-1, obj_7620, "Ritual Offering are used in the Ancient Offering Ritual in the ruins of Camdozaal (After Below Ice Mountain).");
            }
            if ($int2 = 1) {
                return(7, obj_25654, "Guppy");
            }
            if ($int2 = 2) {
                return(20, obj_25660, "Cavefish");
            }
            if ($int2 = 3) {
                return(33, obj_25666, "Tetra");
            }
            if ($int2 = 4) {
                return(46, obj_25672, "Members: Catfish");
            }
        }
        return(-1, null, "");
    case 17 :
        return(~skill_guide_data_firemaking($int1, $int2));
    case 18 :
        if ($int1 = 0) {
            switch_int ($int2) {
                case 0 :
                    return(1, obj_1511, "Normal trees");
                case 1 :
                    return(1, obj_2862, "Members: Achey trees");
                case 2 :
                    return(10, obj_6281, "Members: Light jungle");
                case 3 :
                    return(15, obj_1521, "Oak trees");
                case 4 :
                    return(20, obj_6283, "Members: Medium jungle");
                case 5 :
                    return(30, obj_1519, "Willow trees");
                case 6 :
                    return(35, obj_6285, "Members: Dense jungle");
                case 7 :
                    return(35, obj_6333, "Members: Teak trees");
                case 8 :
                    return(42, obj_13355, "Members: Juniper trees");
                case 9 :
                    return(45, obj_1517, "Maple trees");
                case 10 :
                    return(45, obj_3239, "Members: Hollow trees");
                case 11 :
                    return(50, obj_6332, "Members: Mahogany trees");
                case 12 :
                    return(54, obj_10810, "Members: Arctic pine trees");
                case 13 :
                    return(60, obj_1515, "Yew trees");
                case 14 :
                    return(62, obj_24691, "Members: Blisterwood tree");
                case 15 :
                    return(65, obj_21626, "Members: Sulliuscep mushroom trees");
                case 16 :
                    return(75, obj_1513, "Members: Magic trees");
                case 17 :
                    return(90, obj_19669, "Members: Redwood trees");
            }
            return(-1, null, "");
        }
        if ($int1 = 1) {
            switch_int ($int2) {
                case 0 :
                    return(1, obj_1351, "Bronze axe");
                case 1 :
                    return(1, obj_1349, "Iron axe");
                case 2 :
                    return(6, obj_1353, "Steel axe");
                case 3 :
                    return(11, obj_1361, "Black axe");
                case 4 :
                    return(21, obj_1355, "Mithril axe");
                case 5 :
                    return(31, obj_1357, "Adamant axe");
                case 6 :
                    return(41, obj_1359, "Rune axe");
                case 7 :
                    return(41, obj_23279, "Gilded axe");
                case 8 :
                    return(61, obj_6739, "Members: Dragon axe");
                case 9 :
                    return(61, obj_20011, "Members: 3rd age axe");
                case 10 :
                    return(61, obj_13241, "Members: Infernal axe<br>(with 85 Firemaking)");
                case 11 :
                    return(71, obj_23673, "Members: Crystal axe<br>(after Song of the Elves)");
            }
            return(-1, null, "");
        }
        if ($int1 = 2) {
            switch_int ($int2) {
                case 0 :
                    return(12, obj_7414, "Log canoe");
                case 1 :
                    return(27, obj_7414, "Dugout canoe");
                case 2 :
                    return(42, obj_7414, "Stable dugout canoe");
                case 3 :
                    return(56, obj_10826, "Members: Fremennik round shield");
                case 4 :
                    return(56, obj_10812, "Members: Split arctic pine logs");
                case 5 :
                    return(57, obj_7414, "Waka canoe");
            }
            return(-1, null, "");
        }
        return(-1, null, "");
    case 12 :
        if ($int1 = 0) {
            if ($int2 = 0) {
                return(1, obj_556, "Air runes");
            }
            if ($int2 = 1) {
                return(2, obj_558, "Mind runes");
            }
            if ($int2 = 2) {
                return(5, obj_555, "Water runes");
            }
            if ($int2 = 3) {
                return(6, obj_4695, "Members: Mist runes");
            }
            if ($int2 = 4) {
                return(9, obj_557, "Earth runes");
            }
            if ($int2 = 5) {
                return(10, obj_4696, "Members: Dust runes");
            }
            if ($int2 = 6) {
                return(13, obj_4698, "Members: Mud runes");
            }
            if ($int2 = 7) {
                return(14, obj_554, "Fire runes");
            }
            if ($int2 = 8) {
                return(15, obj_4697, "Members: Smoke runes");
            }
            if ($int2 = 9) {
                return(19, obj_4694, "Members: Steam runes");
            }
            if ($int2 = 10) {
                return(20, obj_559, "Body runes");
            }
            if ($int2 = 11) {
                return(23, obj_4699, "Members: Lava runes");
            }
            if ($int2 = 12) {
                return(27, obj_564, "Members: Cosmic runes");
            }
            if ($int2 = 13) {
                return(35, obj_562, "Members: Chaos runes");
            }
            if ($int2 = 14) {
                return(40, obj_9075, "Members: Astral runes");
            }
            if ($int2 = 15) {
                return(44, obj_561, "Members: Nature runes");
            }
            if ($int2 = 16) {
                return(54, obj_563, "Members: Law runes");
            }
            if ($int2 = 17) {
                return(65, obj_560, "Members: Death runes");
            }
            if ($int2 = 18) {
                return(77, obj_565, "Members: Blood runes");
            }
            if ($int2 = 19) {
                return(90, obj_566, "Members: Soul runes");
            }
            if ($int2 = 20) {
                return(95, obj_21880, "Members: Wrath runes");
            }
            return(-1, null, "");
        }
        if ($int1 = 1) {
            if ($int2 = 0) {
                return(-1, obj_7620, "As your Runecrafting skill develops, you will be able to craft multiple runes from one piece of essence. You only receive experience for each piece of essence crafted, not each rune crafted.");
            }
            if ($int2 = 1) {
                return(11, obj_556, "2 Air runes per essence");
            }
            if ($int2 = 2) {
                return(14, obj_558, "2 Mind runes per essence");
            }
            if ($int2 = 3) {
                return(19, obj_555, "2 Water runes per essence");
            }
            if ($int2 = 4) {
                return(22, obj_556, "3 Air runes per essence");
            }
            if ($int2 = 5) {
                return(26, obj_557, "2 Earth runes per essence");
            }
            if ($int2 = 6) {
                return(28, obj_558, "3 Mind runes per essence");
            }
            if ($int2 = 7) {
                return(33, obj_556, "4 Air runes per essence");
            }
            if ($int2 = 8) {
                return(35, obj_554, "2 Fire runes per essence");
            }
            if ($int2 = 9) {
                return(38, obj_555, "3 Water runes per essence");
            }
            if ($int2 = 10) {
                return(42, obj_558, "4 Mind runes per essence");
            }
            if ($int2 = 11) {
                return(44, obj_556, "5 Air runes per essence");
            }
            if ($int2 = 12) {
                return(46, obj_559, "2 Body runes per essence");
            }
            if ($int2 = 13) {
                return(52, obj_557, "3 Earth runes per essence");
            }
            if ($int2 = 14) {
                return(55, obj_556, "6 Air runes per essence");
            }
            if ($int2 = 15) {
                return(56, obj_558, "5 Mind runes per essence");
            }
            if ($int2 = 16) {
                return(57, obj_555, "4 Water runes per essence");
            }
            if ($int2 = 17) {
                return(59, obj_564, "Members: 2 Cosmic runes per essence");
            }
            if ($int2 = 18) {
                return(66, obj_556, "7 Air runes per essence");
            }
            if ($int2 = 19) {
                return(70, obj_558, "6 Mind runes per essence");
            }
            if ($int2 = 20) {
                return(70, obj_554, "3 Fire runes per essence");
            }
            if ($int2 = 21) {
                return(74, obj_562, "Members: 2 Chaos runes per essence");
            }
            if ($int2 = 22) {
                return(76, obj_555, "5 Water runes per essence");
            }
            if ($int2 = 23) {
                return(77, obj_556, "8 Air runes per essence");
            }
            if ($int2 = 24) {
                return(78, obj_557, "4 Earth runes per essence");
            }
            if ($int2 = 25) {
                return(82, obj_9075, "Members: 2 Astral runes per essence");
            }
            if ($int2 = 26) {
                return(84, obj_558, "7 Mind runes per essence");
            }
            if ($int2 = 27) {
                return(88, obj_556, "9 Air runes per essence");
            }
            if ($int2 = 28) {
                return(91, obj_561, "Members: 2 Nature runes per essence");
            }
            if ($int2 = 29) {
                return(92, obj_559, "3 Body runes per essence");
            }
            if ($int2 = 30) {
                return(95, obj_555, "6 Water runes per essence");
            }
            if ($int2 = 31) {
                return(95, obj_563, "Members: 2 Law runes per essence");
            }
            if ($int2 = 32) {
                return(98, obj_558, "8 Mind runes per essence");
            }
            if ($int2 = 33) {
                return(99, obj_556, "10 Air runes per essence");
            }
            if ($int2 = 34) {
                return(99, obj_560, "Members: 2 Death runes per essence");
            }
            return(-1, null, "");
        }
        if ($int1 = 2) {
            if ($int2 = 0) {
                return(-1, obj_7620, "Pouches come in various sizes which allow you to carry extra essence in them. As you use the pouches they degrade and store less essence, just speak to the Dark Mage at the centre of the Abyss to restore them.");
            }
            if ($int2 = 1) {
                return(1, obj_5509, "Small pouch: Holds 3 extra essence");
            }
            if ($int2 = 2) {
                return(25, obj_5510, "Medium pouch: Holds 6 extra essence");
            }
            if ($int2 = 3) {
                return(50, obj_5512, "Large pouch: Holds 9 extra essence");
            }
            if ($int2 = 4) {
                return(75, obj_5514, "Giant pouch: Holds 12 extra essence");
            }
            if ($int2 = 5) {
                return(85, obj_26784, "Colossal pouch: Holds 40 essence");
            }
            return(-1, null, "");
        }
        if ($int1 = 3) {
            if ($int2 = 0) {
                return(42, obj_25395, "Swampbark boots and gauntlets");
            }
            if ($int2 = 1) {
                return(46, obj_25398, "Swampbark helm");
            }
            if ($int2 = 2) {
                return(48, obj_25389, "Swampbark body and legs");
            }
            if ($int2 = 3) {
                return(60, obj_13235, "Eternal boots (with 60 Magic)");
            }
            if ($int2 = 4) {
                return(60, obj_13237, "Pegasian boots (with 60 Magic)");
            }
            if ($int2 = 5) {
                return(60, obj_13239, "Primordial boots (with 60 Magic)");
            }
            if ($int2 = 6) {
                return(77, obj_25410, "Bloodbark boots and gauntlets");
            }
            if ($int2 = 7) {
                return(79, obj_25413, "Bloodbark helm");
            }
            if ($int2 = 8) {
                return(81, obj_25404, "Bloodbark body and legs");
            }
            return(-1, null, "");
        }
        if ($int1 = 4) {
            if ($int2 = 0) {
                return(27, obj_26903, "Guardians of the Rift<br>(after Temple of the Eye)");
            }
            return(-1, null, "");
        }
        return(-1, null, "");
    case 20 :
        return(~skill_guide_data_slayer($int1, $int2));
    case 21 :
        return(~skill_guide_data_farming($int1, $int2));
    case 22 :
        return(~skill_guide_data_construction($int1, $int2));
    case 23 :
        return(~skill_guide_data_hunter($int1, $int2));
}
return(-1, null, "");
