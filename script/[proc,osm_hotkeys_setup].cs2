// 7410
[proc,osm_hotkeys_setup]
def_int $int0 = 0;
def_int $int1 = enum_getoutputcount(enum_5611);
def_int $int2 = 1;
$int2 = calc($int2 + 9);
def_int $int3 = 0;
def_component $component4 = null;
def_struct $struct5 = null;
def_int $int6 = 0;
while ($int0 < $int1) {
    $component4 = enum(int, component, enum_5611, $int0);
    if ($component4 ! null) {
        $int3 = ~osm_hotkey_get(calc($int0 + 1));
        $struct5 = enum(int, struct, enum_5607, $int3);
        if ((%settings_osm_hotkeys_show_empty_hotkeys = 1 | $struct5 ! null & $int3 > 0) & %osm_hotkeys_dropdown ! 1) {
            if_sethide(false, $component4);
            ~osm_hotkey_build($component4, $int3, $struct5);
            if_setposition(0, $int2, ^setpos_abs_centre, ^setpos_abs_top, $component4);
            $int6 = 1;
            $int2 = calc($int2 + 40 - 1);
        } else {
            cc_deleteall($component4);
            if_sethide(true, $component4);
            if_setonop(null, $component4);
            if_setop(1, "", $component4);
        }
    }
    $int0 = calc($int0 + 1);
}
if ($int6 = 1) {
    if_setsize(0, 33, ^setsize_minus, ^setsize_abs, osm_hotkeys:master_toggle);
} else {
    if_setsize(0, 43, ^setsize_minus, ^setsize_abs, osm_hotkeys:master_toggle);
}
$int2 = calc($int2 + if_getheight(osm_hotkeys:master_toggle));
if_setsize(58, $int2, ^setsize_abs, ^setsize_abs, osm_hotkeys:content);
~script7412(~toplevel_getcomponents);
