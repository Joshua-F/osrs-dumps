// 960
[proc,worldswitcher_entry_draw](component $component0, int $int1, int $int2, component $component3, int $int4, int $int5, int $int6, string $string0, int $int7, int $int8, int $int9, int $int10, int $int11, int $int12, int $int13, int $int14, int $int15, int $int16, component $component17)(int)
if ($int4 ! -1 & .cc_find($component3, $int4) = ^true) {
    .cc_sethide(false);
    .cc_setposition(0, $int2, ^setpos_abs_centre, ^setpos_abs_top);
    if (string_length($string0) > 0) {
        .cc_setonmouserepeat("tooltip_mouserepeat(event_com, event_comsubid, $component17, removetags($string0), 25, 190)");
    } else {
        .cc_setonmouserepeat(null);
    }
} else if (string_length($string0) > 0) {
    if_setonmouserepeat("tooltip_mouserepeat(event_com, -1, $component17, removetags($string0), 25, 190)", $component3);
} else {
    if_setonmouserepeat(null, $component3);
}
def_int $int18 = 0;
def_int $int19 = 0;
if (map_world = $int5) {
    $int18 = 1;
} else if (testbit($int6, 7) = ^true) {
    $int19 = enum(int, int, enum_1496, $int5);
    if (testbit($int6, 0) = ^true) {
        if ($int15 < $int19) {
            $int18 = 1;
        }
    } else if ($int16 < $int19) {
        $int18 = 1;
    }
}
if (~script2872($int6) = true & %varplayerbit_8374 = 0) {
    $int18 = 1;
}
cc_create($component0, ^iftype_rectangle, $int1);
$int1 = calc($int1 + 1);
cc_setsize(0, $int9, ^setsize_minus, ^setsize_abs);
cc_setposition(0, $int2, ^setpos_abs_centre, ^setpos_abs_top);
cc_setfill(true);
if ($int18 = 0) {
    cc_setcolour(^white);
    cc_settrans(255);
    if ($int4 ! -1 & .cc_find($component3, $int4) = ^true) {
        .cc_setonmouseover("cc_settrans($component0, cc_getid, 200, null)");
        .cc_setonmouseleave("cc_settrans($component0, cc_getid, 255, $component17)");
        .cc_setonop("logout_op(event_op, 6, $int5)");
    } else {
        if_setonmouseover("cc_settrans(event_com, cc_getid, 200, null)", $component3);
        if_setonmouseleave("cc_settrans(event_com, cc_getid, 255, $component17)", $component3);
        if_setonop("logout_op(event_op, 6, $int5)", $component3);
    }
} else {
    if (map_world = $int5) {
        cc_setcolour(0x0dc10d);
    } else {
        cc_setcolour(^black);
    }
    cc_settrans(175);
    if ($int4 ! -1 & .cc_find($component3, $int4) = ^true) {
        .cc_setonmouseleave("deltooltip($component17)");
        .cc_setonop(null);
    } else {
        if_setonmouseleave("deltooltip($component17)", $component3);
        if_setonop(null, $component3);
    }
}
cc_create($component0, ^iftype_graphic, $int1);
$int1 = calc($int1 + 1);
cc_setsize(16, 16, ^setsize_abs, ^setsize_abs);
cc_setposition(0, calc($int2 + ($int9 - cc_getheight) / 2), ^setpos_abs_left, ^setpos_abs_top);
.cc_create($component0, ^iftype_text, $int1);
$int1 = calc($int1 + 1);
.cc_setsize($int11, $int9, ^setsize_abs, ^setsize_abs);
.cc_setposition($int10, $int2, ^setpos_abs_left, ^setpos_abs_top);
.cc_settextfont(p12_full);
.cc_settextalign(^settextalign_centre, ^settextalign_centre, 0);
.cc_settextshadow(true);
if ($int5 <= 0) {
    .cc_settext("-");
} else {
    .cc_settext(tostring($int5));
}
if (testbit($int6, 2) = ^true) {
    cc_setgraphic("worldswitcher_stars,2");
    if ($int18 = 0) {
        .cc_setcolour(0xf0f000);
    } else {
        .cc_setcolour(0x7f7f7f);
    }
} else if (testbit($int6, 29) = ^true) {
    cc_setgraphic("worldswitcher_stars,3");
    if ($int18 = 0) {
        .cc_setcolour(0xf0f000);
    } else {
        .cc_setcolour(0x7f7f7f);
    }
} else if (testbit($int6, 25) = ^true) {
    cc_setgraphic("worldswitcher_stars,4");
    if ($int18 = 0) {
        .cc_setcolour(0xf0f000);
    } else {
        .cc_setcolour(0x7f7f7f);
    }
} else if (testbit($int6, 0) = ^true) {
    cc_setgraphic("worldswitcher_stars,1");
    if ($int18 = 0) {
        .cc_setcolour(0xf0f000);
    } else {
        .cc_setcolour(0x7f7f7f);
    }
} else {
    cc_setgraphic("worldswitcher_stars,0");
    if ($int18 = 0) {
        .cc_setcolour(0xe0e0e0);
    } else {
        .cc_setcolour(0x7f7f7f);
    }
}
cc_create($component0, ^iftype_graphic, $int1);
$int1 = calc($int1 + 1);
cc_setsize($int12, 15, ^setsize_abs, ^setsize_abs);
cc_setposition(calc($int10 + $int11), calc($int2 + ($int9 - cc_getheight) / 2), ^setpos_abs_left, ^setpos_abs_top);
cc_setgraphic(enum(int, graphic, enum_1125, $int7));
cc_create($component0, ^iftype_text, $int1);
$int1 = calc($int1 + 1);
cc_setsize($int13, $int9, ^setsize_abs, ^setsize_abs);
cc_setposition($int14, $int2, ^setpos_abs_right, ^setpos_abs_top);
if ($int18 = 0) {
    cc_setcolour(^white);
} else {
    cc_setcolour(0x7f7f7f);
}
cc_settextfont(p11_full);
cc_settextalign(^settextalign_centre, ^settextalign_centre, 0);
cc_settextshadow(true);
cc_settext(tostring($int8));
def_int $int20 = 0;
def_string $string1 = "";
def_int $int21 = string_length($string0);
if ($int21 <= 0) {
    $string0, $int21 = "-", 1;
}
if ($int21 > 0 & parawidth($string0, 512, p11_full) > $int14) {
    while ($int21 > 1 & $int20 = 0) {
        $int21 = calc($int21 - 1);
        $string1 = append(substring($string0, 0, $int21), "...");
        if (parawidth($string1, 512, p11_full) <= $int14) {
            $string0, $int20 = $string1, 1;
        }
    }
}
cc_create($component0, ^iftype_text, $int1);
$int1 = calc($int1 + 1);
cc_setsize($int14, $int9, ^setsize_abs, ^setsize_abs);
cc_setposition(0, $int2, ^setpos_abs_right, ^setpos_abs_top);
if ($int18 = 1) {
    cc_setcolour(0x7f7f7f);
} else if (testbit($int6, 2) = ^true | testbit($int6, 29) = ^true | testbit($int6, 25) = ^true) {
    cc_setcolour(^red);
} else {
    cc_setcolour(0xff981f);
}
cc_settextfont(p11_full);
cc_settextalign(^settextalign_left, ^settextalign_centre, 0);
cc_settextshadow(true);
cc_settext($string0);
return($int1);
