// 6351
[clientscript,pvpa_1v1_info_drag_preview](int $int0, int $int1, int $int2, int $int3, int $int4, component $component5, component $component6, component $component7, int $int8, int $int9, int $int10, int $int11, int $int12, component $component13, component $component14, component $component15, component $component16, component $component17)
def_int $int18 = %varclient_207;
def_int $int19 = %varclient_208;
def_int $int20 = %varclient_209;
def_int $int21 = %varclient_210;
def_int $int22 = 0;
def_int $int23 = if_getwidth($component5);
def_int $int24 = calc(if_getheight($component5) - $int8);
if (cc_find($component5, $int0) = ^true) {
    cc_setgraphic(null);
    switch_int ($int0) {
        case 0 :
            $int20, $int21 = calc($int20 + ($int1 - $int3)), calc($int21 + ($int2 - $int4));
        case 1 :
            $int19 = calc($int19 + ($int2 - $int4));
        case 2 :
            $int22 = calc($int1 - $int3);
            $int18, $int20 = calc($int18 - $int22), calc($int20 + $int22);
        case 3 :
            $int18 = calc($int18 + ($int1 - $int3));
        case 4 :
            $int22 = calc($int1 - $int3);
            $int18, $int20 = calc($int18 - $int22), calc($int20 + $int22);
            $int22 = calc($int2 - $int4);
            $int19, $int21 = calc($int19 - $int22), calc($int21 + $int22);
        case 5 :
            $int18 = calc($int18 + ($int1 - $int3));
            $int22 = calc($int2 - $int4);
            $int19, $int21 = calc($int19 - $int22), calc($int21 + $int22);
        case 6 :
            $int22 = calc($int1 - $int3);
            $int18, $int20 = calc($int18 - $int22), calc($int20 + $int22);
            $int19 = calc($int19 + ($int2 - $int4));
        case 7 :
            $int18 = calc($int18 + ($int1 - $int3));
            $int19 = calc($int19 + ($int2 - $int4));
    }
    if ($int20 < 10) {
        $int18, $int20 = calc($int18 + $int20), 0;
    }
    $int22 = calc($int23 - ($int20 + $int18));
    if ($int22 < 10) {
        $int18 = calc($int18 + $int22);
    }
    if ($int21 < calc($int8 + 10)) {
        $int19, $int21 = calc($int19 + ~max(0, calc($int21 - $int8))), $int8;
    }
    $int22 = calc($int24 + $int8 - ($int21 + $int19));
    if ($int22 < 10) {
        $int19 = calc($int19 + $int22);
    }
    $int18 = ~max($int9, ~min($int11, ~min($int18, $int23)));
    $int19 = ~max($int10, ~min($int12, ~min($int19, $int24)));
    $int20 = ~max(0, ~min($int20, calc($int23 - $int18)));
    $int21 = ~max($int8, ~min($int21, calc($int8 + $int24 - $int19)));
    if_setposition($int20, $int21, ^setposh_abs_left, ^setposv_abs_top, $component7);
    if_setsize($int18, $int19, ^setsize_abs, ^setsize_abs, $component7);
    if_sethide(false, $component7);
    if_sethide(true, $component6);
    cc_setontimer("pvpa_1v1_info_drag_end(calc(clientclock + 3), $int18, $int19, $int20, $int21, $component5, $component6, $component7, $int8, $int9, $int10, $component13, $component14, $component15, $component16, $component17)");
}
