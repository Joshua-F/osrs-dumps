// 909
[proc,toplevel_resize](component $component0, enum $enum1)
def_component $component2 = enum(component, component, $enum1, interface_161:com90);
def_component $component3 = enum(component, component, $enum1, interface_161:com92);
def_component $component4 = enum(component, component, $enum1, interface_161:com7);
def_component $component5 = enum(component, component, $enum1, interface_161:com15);
def_component $component6 = null;
def_int $int7 = enum(enum, int, enum_1960, $enum1);
def_int $int8 = enum(enum, int, enum_1961, $enum1);
def_int $int9 = enum(enum, int, enum_1135, $enum1);
def_int $int10 = enum(enum, int, enum_1136, $enum1);
def_int $int11 = 0;
def_int $int12 = 0;
def_int $int13 = 0;
def_int $int14 = 0;
def_int $int15 = 0;
def_int $int16 = 0;
def_int $int17 = if_getwidth($component0);
def_int $int18 = if_getheight($component0);
def_int $int19 = 0;
if ($enum1 = enum_1745) {
    $int15 = ~max(0, calc($int17 - if_getwidth(interface_601:com19)));
    $int16 = ~max(0, calc($int18 - if_getheight(interface_601:com19)));
    $component6 = enum(component, component, $enum1, interface_161:com33);
    if ($component6 ! null & ~popout_available(-1) = true) {
        $int19 = calc(scale(%varclient_381, 16384, if_getwidth($component6)) + 42);
    }
}
if (%varplayerbit_4606 ! 0) {
    if (%varplayerbit_4606 = 2) {
        viewport_setfov(512, 220);
        viewport_clampfov(0, 0, 0, 0);
    } else if (%varplayerbit_4606 = 3) {
        viewport_setfov(256, 256);
        if ($enum1 = enum_1129) {
            viewport_clampfov(512, 512, 512, 512);
        } else {
            viewport_clampfov(640, 768, 512, 512);
        }
    } else {
        viewport_setfov(256, 256);
        viewport_clampfov(512, 512, 512, 512);
    }
    cam_setfollowheight(50);
    if ($component2 ! null & $component3 ! null) {
        $int11, $int12 = viewport_geteffectivesize;
        $int13, $int14 = ~max(0, calc($int17 - $int11)), ~max(0, calc($int18 - $int12));
        if_setsize($int11, $int12, ^setsize_abs, ^setsize_abs, $component2);
        if_setsize(calc($int11 - ~max(0, calc($int15 - $int13 - $int19))), calc($int12 - ~max(0, calc($int16 - $int14))), ^setsize_abs, ^setsize_abs, $component3);
        if ($component4 ! null & $component5 ! null) {
            $int13, $int14 = calc(($int13 - $int15) / 2), calc(($int14 - $int16) / 2);
            $int7, $int9 = ~max(0, calc($int7 - $int13)), ~max(0, calc($int9 - $int13));
            $int8, $int10 = ~max(0, calc($int8 - $int14)), ~max(0, calc($int10 - $int14));
            if_setposition($int7, $int8, ^setpos_abs_left, ^setpos_abs_top, $component4);
            if_setposition($int7, $int8, ^setpos_abs_left, ^setpos_abs_top, $component5);
            if_setsize(calc($int7 + $int9), calc($int8 + $int10), ^setsize_minus, ^setsize_minus, $component4);
            if_setsize(calc($int7 + $int9), calc($int8 + $int10), ^setsize_minus, ^setsize_minus, $component5);
            ~toplevel_mainmodal_bg_calculate($enum1, enum(component, component, $enum1, interface_161:com14), $component5, $int9, $int10);
        } else {
            ~toplevel_mainmodal_bg_calculate($enum1, enum(component, component, $enum1, interface_161:com14), $component3, 0, 0);
        }
    }
} else {
    viewport_clampfov(0, 0, 0, 0);
    if (%varclient_73 >= 128 & %varclient_73 <= 896 & %varclient_74 >= 128 & %varclient_74 <= 896) {
        ~camera_do_zoom(%varclient_73, %varclient_74);
    } else {
        ~camera_do_zoom(512, 512);
    }
    $int11, $int12 = viewport_geteffectivesize;
    if ($component2 ! null & $component3 ! null) {
        if_setsize($int11, $int12, ^setsize_abs, ^setsize_abs, $component2);
        if_setsize(calc($int11 - $int15 - $int19), calc($int12 - $int16), ^setsize_abs, ^setsize_abs, $component3);
        if ($component4 ! null & $component5 ! null) {
            if_setposition($int7, $int8, ^setpos_abs_left, ^setpos_abs_top, $component4);
            if_setposition($int7, $int8, ^setpos_abs_left, ^setpos_abs_top, $component5);
            if_setsize(calc($int7 + $int9), calc($int8 + $int10), ^setsize_minus, ^setsize_minus, $component4);
            if_setsize(calc($int7 + $int9), calc($int8 + $int10), ^setsize_minus, ^setsize_minus, $component5);
            ~toplevel_mainmodal_bg_calculate($enum1, enum(component, component, $enum1, interface_161:com14), $component5, $int9, $int10);
        } else {
            ~toplevel_mainmodal_bg_calculate($enum1, enum(component, component, $enum1, interface_161:com14), $component3, 0, 0);
        }
    }
}
def_component $component20 = enum(component, component, $enum1, interface_161:com16);
if ($component20 ! null) {
    if (~on_mobile = false & if_hassub($component20) = true) {
        if (%varclient_173 = -2) {
            if_setsize(512, 0, ^setsize_abs, ^setsize_minus, $component20);
        } else if (%varclient_173 = -3) {
            if_setsize(0, 0, ^setsize_minus, ^setsize_minus, $component20);
        } else {
            if_setsize(512, 334, ^setsize_abs, ^setsize_abs, $component20);
        }
    } else {
        if_setsize(512, 334, ^setsize_abs, ^setsize_abs, $component20);
    }
}
$component20 = enum(component, component, $enum1, interface_161:com18);
def_int $int21 = 0;
def_int $int22 = 0;
if ($component20 ! null) {
    if (if_hassub(enum(component, component, $enum1, interface_161:com9)) = true) {
        if (%varplayerbit_4692 ! 0) {
            $int22 = 0;
        } else {
            $int22 = 38;
        }
    }
    if (~on_mobile = true & %varplayerbit_542 = 0) {
        if (%varplayerbit_6254 = 0) {
            $int21 = calc(182 + 4);
        } else {
            $int21 = calc(120 + 4);
        }
    } else {
        $int21 = 0;
    }
    if_setposition($int21, $int22, ^setpos_abs_right, ^setpos_abs_top, $component20);
}
$component20 = enum(component, component, $enum1, interface_161:com9);
$int21 = 0;
if ($component20 ! null) {
    if (~on_mobile = true) {
        if (%varplayerbit_6254 = 0) {
            $int21 = 182;
        } else {
            $int21 = 120;
        }
    } else {
        $int21 = 0;
    }
    if_setsize($int21, 0, ^setsize_minus, ^setsize_minus, $component20);
}
~toplevel_resize_customise(enum(component, component, $enum1, interface_161:com33), $enum1);
