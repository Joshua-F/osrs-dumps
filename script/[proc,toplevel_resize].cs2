// 909
[proc,toplevel_resize](component $component0, enum $enum1)
def_component $component2 = enum(component, component, $enum1, interface_161:com2);
def_component $component3 = enum(component, component, $enum1, interface_161:com10);
def_component $component4 = enum(component, component, $enum1, interface_161:com5);
def_component $component5 = enum(component, component, $enum1, interface_161:com12);
def_int $int6 = enum(enum, int, enum_1960, $enum1);
def_int $int7 = enum(enum, int, enum_1961, $enum1);
def_int $int8 = enum(enum, int, enum_1135, $enum1);
def_int $int9 = enum(enum, int, enum_1136, $enum1);
def_int $int10 = 0;
def_int $int11 = 0;
def_int $int12 = 0;
def_int $int13 = 0;
def_int $int14 = 0;
def_int $int15 = 0;
def_int $int16 = if_getwidth($component0);
def_int $int17 = if_getheight($component0);
if ($enum1 = enum_1745) {
    $int14 = ~max(0, calc($int16 - if_getwidth(interface_601:com12)));
    $int15 = ~max(0, calc($int17 - if_getheight(interface_601:com12)));
}
if (%varplayerbit_4606 ! 0) {
    if (%varplayerbit_4606 = 2) {
        viewport_setfov(256, 180);
        viewport_setzoom(256, 180);
        viewport_clampfov(0, 0, 0, 0);
        cam_setfollowheight(50);
    } else {
        viewport_setfov(256, 256);
        viewport_setzoom(256, 256);
        viewport_clampfov(256, 256, 256, 256);
        cam_setfollowheight(50);
    }
    if ($component2 ! null & $component3 ! null) {
        $int10, $int11 = viewport_geteffectivesize;
        $int12, $int13 = ~max(0, calc($int16 - $int10)), ~max(0, calc($int17 - $int11));
        if_setsize($int10, $int11, ^setsize_abs, ^setsize_abs, $component2);
        if_setsize(calc($int10 - ~max(0, calc($int14 - $int12))), calc($int11 - ~max(0, calc($int15 - $int13))), ^setsize_abs, ^setsize_abs, $component3);
        if ($component4 ! null & $component5 ! null) {
            $int12, $int13 = calc(($int12 - $int14) / 2), calc(($int13 - $int15) / 2);
            $int6, $int8 = ~max(0, calc($int6 - $int12)), ~max(0, calc($int8 - $int12));
            $int7, $int9 = ~max(0, calc($int7 - $int13)), ~max(0, calc($int9 - $int13));
            if_setposition($int6, $int7, ^setposh_abs_left, ^setposv_abs_top, $component4);
            if_setposition($int6, $int7, ^setposh_abs_left, ^setposv_abs_top, $component5);
            if_setsize(calc($int6 + $int8), calc($int7 + $int9), ^setsize_minus, ^setsize_minus, $component4);
            if_setsize(calc($int6 + $int8), calc($int7 + $int9), ^setsize_minus, ^setsize_minus, $component5);
            ~toplevel_mainmodal_bg_calculate($enum1, enum(component, component, $enum1, interface_161:com11), $component5, $int8, $int9);
        } else {
            ~toplevel_mainmodal_bg_calculate($enum1, enum(component, component, $enum1, interface_161:com11), $component3, 0, 0);
        }
    }
} else {
    viewport_setfov(0, 0);
    viewport_clampfov(0, 0, 0, 0);
    if (%varclient_73 >= 195 & %varclient_73 <= 700 & %varclient_74 >= 175 & %varclient_74 <= 715) {
        ~camera_do_zoom(%varclient_73, %varclient_74);
    } else {
        ~camera_do_zoom(256, 320);
    }
    $int10, $int11 = viewport_geteffectivesize;
    if ($component2 ! null & $component3 ! null) {
        if_setsize($int10, $int11, ^setsize_abs, ^setsize_abs, $component2);
        if_setsize(calc($int10 - $int14), calc($int11 - $int15), ^setsize_abs, ^setsize_abs, $component3);
        if ($component4 ! null & $component5 ! null) {
            if_setposition($int6, $int7, ^setposh_abs_left, ^setposv_abs_top, $component4);
            if_setposition($int6, $int7, ^setposh_abs_left, ^setposv_abs_top, $component5);
            if_setsize(calc($int6 + $int8), calc($int7 + $int9), ^setsize_minus, ^setsize_minus, $component4);
            if_setsize(calc($int6 + $int8), calc($int7 + $int9), ^setsize_minus, ^setsize_minus, $component5);
            ~toplevel_mainmodal_bg_calculate($enum1, enum(component, component, $enum1, interface_161:com11), $component5, $int8, $int9);
        } else {
            ~toplevel_mainmodal_bg_calculate($enum1, enum(component, component, $enum1, interface_161:com11), $component3, 0, 0);
        }
    }
}
def_component $component18 = enum(component, component, $enum1, interface_161:com13);
if ($component18 ! null) {
    if (~on_mobile = false & if_hassub($component18) = true) {
        if (%varclient_173 = -2) {
            if_setsize(512, 0, ^setsize_abs, ^setsize_minus, $component18);
        } else if (%varclient_173 = -3) {
            if_setsize(0, 0, ^setsize_minus, ^setsize_minus, $component18);
        } else {
            if_setsize(512, 334, ^setsize_abs, ^setsize_abs, $component18);
        }
    } else {
        if_setsize(512, 334, ^setsize_abs, ^setsize_abs, $component18);
    }
}
$component18 = enum(component, component, $enum1, interface_161:com15);
def_int $int19 = 0;
def_int $int20 = 0;
if ($component18 ! null) {
    if (if_hassub(enum(component, component, $enum1, interface_161:com7)) = true) {
        if (%varplayerbit_4692 ! 0) {
            $int20 = 0;
        } else {
            $int20 = 38;
        }
    }
    if (~on_mobile = true) {
        if (%varplayerbit_6254 = 0) {
            $int19 = calc(182 + 4);
        } else {
            $int19 = calc(120 + 4);
        }
    } else {
        $int19 = 0;
    }
    if_setposition($int19, $int20, ^setposh_abs_right, ^setposv_abs_top, $component18);
}
$component18 = enum(component, component, $enum1, interface_161:com7);
$int19 = 0;
if ($component18 ! null) {
    if (~on_mobile = true) {
        if (%varplayerbit_6254 = 0) {
            $int19 = 182;
        } else {
            $int19 = 120;
        }
    } else {
        $int19 = 0;
    }
    if_setsize($int19, 0, ^setsize_minus, ^setsize_minus, $component18);
}
~toplevel_resize_customise($component0, $enum1);
