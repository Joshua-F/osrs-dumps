// 3216
[proc,league_task_is_completed](struct $struct0)(int)
def_struct $struct1 = enum(int, struct, enum_2670, %varplayerbit_10032);
if ($struct1 = null) {
    return(0);
}
def_enum $enum2 = struct_param($struct1, param_869);
if ($enum2 = null | enum(struct, boolean, $enum2, $struct0) = false) {
    return(0);
}
def_int $int3 = struct_param($struct0, param_873);
if ($int3 = -1 | $int3 < 0) {
    return(0);
}
def_int $int4 = calc($int3 % 32);
def_int $int5 = calc($int3 / 32);
switch_int ($int5) {
    case 0 :
        return(testbit(%varplayer_2616, $int4));
    case 1 :
        return(testbit(%varplayer_2617, $int4));
    case 2 :
        return(testbit(%varplayer_2618, $int4));
    case 3 :
        return(testbit(%varplayer_2619, $int4));
    case 4 :
        return(testbit(%varplayer_2620, $int4));
    case 5 :
        return(testbit(%varplayer_2621, $int4));
    case 6 :
        return(testbit(%varplayer_2622, $int4));
    case 7 :
        return(testbit(%varplayer_2623, $int4));
    case 8 :
        return(testbit(%varplayer_2624, $int4));
    case 9 :
        return(testbit(%varplayer_2625, $int4));
    case 10 :
        return(testbit(%varplayer_2626, $int4));
    case 11 :
        return(testbit(%varplayer_2627, $int4));
    case 12 :
        return(testbit(%varplayer_2628, $int4));
    case 13 :
        return(testbit(%varplayer_2629, $int4));
    case 14 :
        return(testbit(%varplayer_2630, $int4));
    case 15 :
        return(testbit(%varplayer_2631, $int4));
    case 16 :
        return(testbit(%varplayer_2808, $int4));
    case 17 :
        return(testbit(%varplayer_2809, $int4));
    case 18 :
        return(testbit(%varplayer_2810, $int4));
    case 19 :
        return(testbit(%varplayer_2811, $int4));
    case 20 :
        return(testbit(%varplayer_2812, $int4));
    case 21 :
        return(testbit(%varplayer_2813, $int4));
    case 22 :
        return(testbit(%varplayer_2814, $int4));
    case 23 :
        return(testbit(%varplayer_2815, $int4));
    case 24 :
        return(testbit(%varplayer_2816, $int4));
    case 25 :
        return(testbit(%varplayer_2817, $int4));
    case 26 :
        return(testbit(%varplayer_2818, $int4));
    case 27 :
        return(testbit(%varplayer_2819, $int4));
    case 28 :
        return(testbit(%varplayer_2820, $int4));
    case 29 :
        return(testbit(%varplayer_2821, $int4));
    case 30 :
        return(testbit(%varplayer_2822, $int4));
    case 31 :
        return(testbit(%varplayer_2823, $int4));
    case 32 :
        return(testbit(%varplayer_2824, $int4));
    case 33 :
        return(testbit(%varplayer_2825, $int4));
    case 34 :
        return(testbit(%varplayer_2826, $int4));
    case 35 :
        return(testbit(%varplayer_2827, $int4));
    case 36 :
        return(testbit(%varplayer_2828, $int4));
    case 37 :
        return(testbit(%varplayer_2829, $int4));
    case 38 :
        return(testbit(%varplayer_2830, $int4));
    case 39 :
        return(testbit(%varplayer_2831, $int4));
    case 40 :
        return(testbit(%varplayer_2832, $int4));
    case 41 :
        return(testbit(%varplayer_2833, $int4));
    case 42 :
        return(testbit(%varplayer_2834, $int4));
    case 43 :
        return(testbit(%varplayer_2835, $int4));
    case default :
        return(0);
}
