// 2103
[proc,hp_hud_update](component $component0, component $component1, component $component2, component $component3, component $component4, component $component5, component $component6, component $component7, component $component8, component $component9, boolean $boolean10)
if (if_gethide(interface_303:com5) = true) {
    return;
}
def_string $string0 = "";
if (%varplayer_1683 ! null) {
    $string0 = nc_param(%varplayer_1683, param_510);
    if (compare($string0, "") = 0) {
        $string0 = nc_name(%varplayer_1683);
    }
} else {
    $string0 = if_gettext($component5);
}
if (compare($string0, "") = 0) {
    if_sethide(true, $component4);
    if_setsize(if_getwidth($component0), 27, ^setsize_abs, ^setsize_abs, $component0);
} else {
    if_sethide(false, $component4);
    if_setsize(if_getwidth($component0), 42, ^setsize_abs, ^setsize_abs, $component0);
    if_settext($string0, $component5);
}
def_string $string1 = "<tostring(%varplayerbit_6099)> / <tostring(%varplayerbit_6100)>";
if_settext($string1, $component1);
def_int $int11 = if_getwidth($component2);
def_int $int12 = $int11;
def_int $int13 = calc(%varplayerbit_6100 + 1);
%varplayerbit_6100 = ~max(%varplayerbit_6100, 1);
$int12 = scale(%varplayerbit_6099, %varplayerbit_6100, $int12);
if (%varplayerbit_10338 > 0 & %varplayerbit_10338 <= $int13) {
    if_sethide(false, $component6);
    if_setposition(scale(calc(%varplayerbit_10338 - 1), %varplayerbit_6100, $int11), 0, ^setpos_abs_left, ^setpos_abs_centre, $component6);
} else {
    if_sethide(true, $component6);
}
if (%varplayerbit_10339 > 0 & %varplayerbit_10339 <= $int13) {
    if_sethide(false, $component7);
    if_setposition(calc($int11 - scale(calc(%varplayerbit_10339 - 1), %varplayerbit_6100, $int11)), 0, ^setpos_abs_right, ^setpos_abs_centre, $component7);
} else {
    if_sethide(true, $component7);
}
if (%varplayerbit_10340 > 0 & %varplayerbit_10340 <= $int13) {
    if_sethide(false, $component8);
    if_setposition(scale(calc(%varplayerbit_10340 - 1), %varplayerbit_6100, $int11), 0, ^setpos_abs_left, ^setpos_abs_centre, $component8);
} else {
    if_sethide(true, $component8);
}
if (%varplayerbit_10341 > 0 & %varplayerbit_10341 <= $int13) {
    if_sethide(false, $component9);
    if_setposition(scale(calc(%varplayerbit_10341 - 1), %varplayerbit_6100, $int11), 0, ^setpos_abs_left, ^setpos_abs_centre, $component9);
} else {
    if_sethide(true, $component9);
}
if ($int12 = 0 & %varplayerbit_6099 > 0) {
    $int12 = 1;
}
if ($int12 = if_getwidth($component2) & %varplayerbit_6099 < %varplayerbit_6100) {
    $int12 = calc($int12 - 1);
}
if ($boolean10 = true | if_getwidth($component3) = 0) {
    if_setsize($int12, if_getheight($component3), ^setsize_abs, ^setsize_abs, $component3);
    if_setontimer(null, $component3);
    return;
}
if_setontimer("hp_hud_update_bar($component3, $int12)", $component3);
