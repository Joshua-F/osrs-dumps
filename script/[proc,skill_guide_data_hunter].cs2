// 1599
[proc,skill_guide_data_hunter](int $int0, int $int1)(int, obj, string)
if ($int0 = 0) {
    switch_int ($int1) {
        case 0 :
            return(-1, hunting_icon, "Hunter lets you track and catch a wide variety of wildlife, granting access to various unique materials in the process.");
        case 1 :
            return(-1, hunting_ojibway_bird_snare, "Each animal you can hunt will typically be found in a specfic locale, and will require different gear. Make sure you come prepared!");
        case 2 :
            return(-1, huntguide_chinchompa_captured, "As your Hunter level improves, not only will you be able to hunt a wider variety of creatures, but you'll also be able to maintain more traps simultaneously, and they will successfully trap creatures more often.");
    }
}
if ($int0 = 1) {
    switch_int ($int1) {
        case 0 :
            return(1, huntguide_polar_beast, "Polar kebbits (snow)");
        case 1 :
            return(3, huntguide_wood_beast, "Common kebbits (woodland)");
        case 2 :
            return(7, huntguide_jungle_beast, "Feldip weasels (jungle)");
        case 3 :
            return(13, huntguide_desert_beast, "Desert devils (desert)");
        case 4 :
            return(49, huntguide_razor2_beast, "Razor-backed kebbits (woodland)");
        case 5 :
            return(80, huntguide_herbiboar, "Herbiboar (with 31 Herblore)");
    }
    return(-1, null, "");
}
if ($int0 = 2) {
    switch_int ($int1) {
        case 0 :
            return(1, huntguide_jungle_bird, "Crimson swifts (jungle)");
        case 1 :
            return(5, huntguide_desert_bird, "Golden warblers (desert)");
        case 2 :
            return(9, huntguide_wood_bird, "Copper longtails (woodland)");
        case 3 :
            return(11, huntguide_polar_bird, "Cerulean twitches (snow)");
        case 4 :
            return(19, huntguide_coloured_bird, "Tropical wagtails (jungle)");
    }
    return(-1, null, "");
}
if ($int0 = 3) {
    switch_int ($int1) {
        case 0 :
            return(15, huntguide_red_butterfly, "Ruby harvest butterflies (woodland)");
        case 1 :
            return(25, huntguide_red_butterfly, "Barehanded: Ruby harvest butterflies (woodland)");
        case 2 :
            return(25, huntguide_blue_butterfly, "Sapphire glacialis butterflies (snow)");
        case 3 :
            return(35, huntguide_blue_butterfly, "Barehanded: Sapphire glacialis butterflies (snow)");
        case 4 :
            return(35, huntguide_white_butterfly, "Snowy knight butterflies (snow)");
        case 5 :
            return(45, huntguide_white_butterfly, "Barehanded: Snowy knight butterflies (snow)");
        case 6 :
            return(45, huntguide_black_butterfly, "Black warlock butterflies (jungle)");
        case 7 :
            return(55, huntguide_black_butterfly, "Barehanded: Black warlock butterflies (jungle)");
        case 8 :
            return(65, huntguide_sunlight_moth, "Sunlight moths (savannah)");
        case 9 :
            return(75, huntguide_sunlight_moth, "Barehanded: Sunlight moths (savannah)");
        case 10 :
            return(75, huntguide_moonlight_moth, "Moonlight moths (caverns)");
        case 11 :
            return(85, huntguide_moonlight_moth, "Barehanded: Moonlight moths (caverns)");
    }
    return(-1, null, "");
}
if ($int0 = 4) {
    switch_int ($int1) {
        case 0 :
            return(17, ii_captured_impling_1, "Baby implings");
        case 1 :
            return(22, ii_captured_impling_2, "Young implings");
        case 2 :
            return(27, ii_captured_impling_1, "Barehanded: Baby implings");
        case 3 :
            return(28, ii_captured_impling_3, "Gourmet implings");
        case 4 :
            return(32, ii_captured_impling_2, "Barehanded: Young implings");
        case 5 :
            return(36, ii_captured_impling_4, "Earth implings");
        case 6 :
            return(38, ii_captured_impling_3, "Barehanded: Gourmet implings");
        case 7 :
            return(42, ii_captured_impling_5, "Essence implings");
        case 8 :
            return(46, ii_captured_impling_4, "Barehanded: Earth implings");
        case 9 :
            return(50, ii_captured_impling_6, "Eclectic implings");
        case 10 :
            return(52, ii_captured_impling_5, "Barehanded: Essence implings");
        case 11 :
            return(58, ii_captured_impling_7, "Nature implings");
        case 12 :
            return(60, ii_captured_impling_6, "Barehanded: Eclectic implings");
        case 13 :
            return(65, ii_captured_impling_8, "Magpie implings");
        case 14 :
            return(68, ii_captured_impling_7, "Barehanded: Nature implings");
        case 15 :
            return(74, ii_captured_impling_9, "Ninja implings");
        case 16 :
            return(75, ii_captured_impling_8, "Barehanded: Magpie implings");
        case 17 :
            return(80, ii_captured_impling_12, "Crystal implings");
        case 18 :
            return(83, ii_captured_impling_10, "Dragon implings");
        case 19 :
            return(84, ii_captured_impling_9, "Barehanded: Ninja implings");
        case 20 :
            return(89, ii_captured_impling_11, "Lucky implings");
        case 21 :
            return(90, ii_captured_impling_12, "Barehanded: Crystal implings");
        case 22 :
            return(93, ii_captured_impling_10, "Barehanded: Dragon implings");
        case 23 :
            return(99, ii_captured_impling_11, "Barehanded: Lucky implings");
    }
    return(-1, null, "");
}
if ($int0 = 5) {
    switch_int ($int1) {
        case 0 :
            return(23, huntguide_hunting_beast, "Wild kebbits (woodland)<br>Preferred bait: Raw meat");
        case 1 :
            return(33, huntguide_barbtailed_beast, "Barb-tailed kebbits (jungle)<br>Preferred bait: Raw rainbow fish ");
        case 2 :
            return(37, huntguide_razor_beast, "Prickly kebbits (northern woodland)<br>Preferred bait: Barley");
        case 3 :
            return(51, huntguide_sabre_beast, "Sabre-toothed kebbits (snow)<br>Preferred bait: Raw meat");
        case 4 :
            return(57, huntguide_fennecfox, "Pyre foxes (savannah)<br>Preferred bait: Embertailed jerboa tail");
        case 5 :
            return(60, mm2_monkey, "Maniacal monkeys (Ape Atoll)<br>Preferred bait: Banana");
    }
    return(-1, null, "");
}
if ($int0 = 6) {
    switch_int ($int1) {
        case 0 :
            return(27, hunting_ferret, "Ferrets (woodland)");
        case 1 :
            return(39, huntguide_jerboa, "Embertailed jerboa (savannah)");
        case 2 :
            return(53, huntguide_chinchompa_captured, "Chinchompas (woodland)<br>Preferred bait: Spicy chopped tomatoes");
        case 3 :
            return(63, huntguide_chinchompa_big_captured, "Red chinchompas (jungle)<br>Preferred bait: Spicy minced meat");
        case 4 :
            return(73, cert_range_icon_dummy, "Black chinchompas (woodland)<br>Preferred bait: Spicy minced meat");
    }
    return(-1, null, "");
}
if ($int0 = 7) {
    switch_int ($int1) {
        case 0 :
            return(29, green_salamander, "Swamp lizards (swamp)<br>Preferred bait: Guam tar");
        case 1 :
            return(47, orange_salamander, "Orange salamanders (desert)<br>Preferred bait: Marrentill tar");
        case 2 :
            return(59, red_salamander, "Red salamanders (lava)<br>Preferred bait: Tarromin tar");
        case 3 :
            return(67, black_salamander, "Black salamanders (lava)<br>Preferred bait: Harralander tar");
        case 4 :
            return(79, mountain_salamander, "Tecu salamanders (mountain)<br>Preferred bait: Irit tar");
    }
    return(-1, null, "");
}
if ($int0 = 8) {
    switch_int ($int1) {
        case 0 :
            return(31, hunting_hat_jaguar, "Spined larupias (jungle)");
        case 1 :
            return(41, hunting_hat_leopard, "Horned graahks (Karamja)");
        case 2 :
            return(55, hunting_hat_tiger, "Sabre-toothed kyatts (snow)");
        case 3 :
            return(72, huntguide_sun_antlers, "Sunlight antelope (savannah)");
        case 4 :
            return(91, huntguide_moon_antlers, "Moonlight antelope (caverns)");
    }
    return(-1, null, "");
}
if ($int0 = 9) {
    switch_int ($int1) {
        case 0 :
            return(35, aerial_fishing_bluegill, "Bluegill<br>(With 43 fishing)");
        case 1 :
            return(43, huntguide_speedy_beast, "Spotted kebbits (woodland)");
        case 2 :
            return(51, aerial_fishing_common_tench, "Common tench<br>(With 56 fishing)");
        case 3 :
            return(57, huntguide_silent_beast, "Dark kebbits (woodland)");
        case 4 :
            return(68, aerial_fishing_mottled_eel, "Mottled eel<br>(With 73 fishing)");
        case 5 :
            return(69, huntguide_speedy2_beast, "Dashing kebbits (woodland)");
        case 6 :
            return(87, aerial_fishing_greater_siren, "Greater siren<br>(With 91 fishing)");
    }
    return(-1, null, "");
}
if ($int0 = 10) {
    switch_int ($int1) {
        case 0 :
            return(1, hunting_icon, "Lay 1 trap at a time");
        case 1 :
            return(1, hunting_ojibway_bird_snare, "Set a bird trap");
        case 2 :
            return(1, noose_wand, "Use a noose wand in tracking");
        case 3 :
            return(15, hunting_butterfly_net, "Net butterflies");
        case 4 :
            return(20, hunting_icon, "Lay up to 2 traps at a time");
        case 5 :
            return(23, logs, "Set a deadfall trap (limit of 1)");
        case 6 :
            return(27, hunting_box_trap, "Set a box trap<br>(After Eagles' Peak quest)");
        case 7 :
            return(27, hunting_snare, "Set a rabbit snare");
        case 8 :
            return(29, net, "Set a net trap");
        case 9 :
            return(31, hunting_teasing_stick, "Set a pitfall trap");
        case 10 :
            return(39, torch_lit, "Use smoke to mask the scent on a trap");
        case 11 :
            return(40, hunting_icon, "Lay up to 3 traps at a time");
        case 12 :
            return(43, falcon_gloves, "Hunt with a falcon");
        case 13 :
            return(60, hunting_icon, "Lay up to 4 traps at a time");
        case 14 :
            return(71, magic_imp_box, "Set an imp trap");
        case 15 :
            return(80, hunting_icon, "Lay up to 5 traps at a time");
    }
    return(-1, null, "");
}
if ($int0 = 11) {
    switch_int ($int1) {
        case 0 :
            return(1, hunting_camoflauge_robe_polar, "Polar kebbit fur clothing (snow)");
        case 1 :
            return(1, hunting_camoflauge_robe_wood, "Common kebbit fur clothing (woodland)");
        case 2 :
            return(4, hunting_camoflauge_robe_jungle, "Feldip weasel fur clothing (jungle)");
        case 3 :
            return(10, hunting_camoflauge_robe_desert, "Desert devil fur clothing (desert)");
        case 4 :
            return(24, hunting_strung_rabbit_foot, "Lucky rabbit's foot");
        case 5 :
            return(28, hunting_hat_jaguar, "Larupia fur clothing");
        case 6 :
            return(38, hunting_hat_leopard, "Graahk hide clothing");
        case 7 :
            return(40, hunting_light_cape, "Spotted capes");
        case 8 :
            return(52, hunting_hat_tiger, "Kyatt fur clothing");
        case 9 :
            return(54, hunting_silent_gloves, "Gloves of silence");
        case 10 :
            return(66, hunting_lighter_cape, "Spottier capes");
    }
    return(-1, null, "");
}
if ($int0 = 12) {
    switch_int ($int1) {
        case 0 :
            return(5, birdhouse_normal, "Normal Birdhouse Trap");
        case 1 :
            return(14, birdhouse_oak, "Oak Birdhouse Trap");
        case 2 :
            return(24, birdhouse_willow, "Willow Birdhouse Trap");
        case 3 :
            return(34, birdhouse_teak, "Teak Birdhouse Trap");
        case 4 :
            return(44, birdhouse_maple, "Maple Birdhouse Trap");
        case 5 :
            return(49, birdhouse_mahogany, "Mahogany Birdhouse Trap");
        case 6 :
            return(59, birdhouse_yew, "Yew Birdhouse Trap");
        case 7 :
            return(74, birdhouse_magic, "Magic Birdhouse Trap");
        case 8 :
            return(89, birdhouse_redwood, "Redwood Birdhouse Trap");
    }
    return(-1, null, "");
}
if ($int0 = 13) {
    switch_int ($int1) {
        case 0 :
            return(1, raids_bat0_raw, "Chambers of Xeric - Guanic bat");
        case 1 :
            return(15, piscarilius_sandworms, "Dig for sandworms (Piscarillius Beach)");
        case 2 :
            return(15, raids_bat1_raw, "Chambers of Xeric - Prael bat");
        case 3 :
            return(20, raw_lizard, "Mossy Lizards traps (Neypotzli)");
        case 4 :
            return(27, huntguide_giant_eagle, "Giant eagles(various)");
        case 5 :
            return(27, huntguide_rabbit, "White rabbits (woodland)<br>Use a ferret to flush the rabbit out of its hole");
        case 6 :
            return(30, raids_bat2_raw, "Chambers of Xeric - Giral bat");
        case 7 :
            return(44, fossil_puffer_fish, "Accessing drift net fishing on Fossil Island (with 47 Fishing)");
        case 8 :
            return(45, raids_bat3_raw, "Chambers of Xeric - Phluxia bat");
        case 9 :
            return(46, hunting_icon, "Access to the Hunter Guild & Basic Hunters' Rumours");
        case 10 :
            return(50, hunting_crossbow_sunlight, "Equip the Sunlight hunters' crossbow (with 66 Ranged)");
        case 11 :
            return(57, hunting_icon, "Adept Hunters' Rumours");
        case 12 :
            return(60, raids_bat4_raw, "Chambers of Xeric - Kryket bat");
        case 13 :
            return(71, huntguide_imp, "Imps (worldwide)<br>Preferred bait: Magical beads");
        case 14 :
            return(72, hunting_icon, "Expert Hunters' Rumours");
        case 15 :
            return(75, raids_bat5_raw, "Chambers of Xeric - Murng bat");
        case 16 :
            return(90, raids_bat6_raw, "Chambers of Xeric - Psykk bat");
        case 17 :
            return(91, hunting_icon, "Master Hunters' Rumours");
        case 18 :
            return(99, raids_bat6_raw, "Chambers of Xeric - Barehanded bat-catching");
    }
    return(-1, null, "");
}
return(-1, null, "");
