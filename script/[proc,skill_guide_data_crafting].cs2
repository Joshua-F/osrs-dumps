// 7900
[proc,skill_guide_data_crafting](int $int0, int $int1)(int, obj, string)
switch_int ($int0) {
    case 0 :
        switch_int ($int1) {
            case 0 :
                return(-1, hammer, "Crafting is a wide-ranging skill that allows you to create various pieces of armour, jewellery, equipment and more.");
            case 1 :
                return(-1, leather, "To craft armour out of animal hides, you'll typically first need to take the hides to a tanner to get them tanned, then combine them with a needle and thread, which can be acquired from certain crafting shops in the world.");
            case 2 :
                return(-1, softclay, "To make pottery, you'll need to obtain some soft clay, obtained by adding water to clay. You can then use a pottery wheel to shape the clay into an unfired item, which you can then finish in a pottery oven.");
            case 3 :
                return(-1, gold_bar, "To make jewellery, you'll need to first get a crafting mould. You can then take that mould and some gold or silver bars to a furnace to craft your jewellery. At higher crafting levels, you can cut gems and mould them simultaneously to create jewellery which you can enchant!");
        }
    case 1 :
        switch_int ($int1) {
            case 0 :
                return(21, sack_empty, "Vegetable sack");
            case 1 :
                return(26, fossil_drift_net, "Drift net");
            case 2 :
                return(36, basket_empty, "Fruit basket");
        }
        return(-1, null, "");
    case 2 :
        switch_int ($int1) {
            case 0 :
                return(1, leather_gloves, "Leather gloves");
            case 1 :
                return(2, forestry_pheasant_hat, "Members: Pheasant clothing");
            case 2 :
                return(7, leather_boots, "Leather boots");
            case 3 :
                return(9, leather_cowl, "Leather cowl");
            case 4 :
                return(11, leather_vambraces, "Leather vambraces");
            case 5 :
                return(14, leather_armour, "Leather body");
            case 6 :
                return(14, xeric_hat, "Members: Xerician hat");
            case 7 :
                return(15, snelm_round_swamp, "Members: Snail helmet");
            case 8 :
                return(15, hundred_pirate_crab_shell_helm, "Members: Crab shell armour");
            case 9 :
                return(17, xeric_robe, "Members: Xerician robe");
            case 10 :
                return(18, leather_chaps, "Leather chaps");
            case 11 :
                return(22, xeric_top, "Members: Xerician top");
            case 12 :
                return(28, hardleather_body, "Hard leather body");
            case 13 :
                return(32, spiked_vambraces, "Members: Spiked vambraces");
            case 14 :
                return(35, broodoo_combatshield_10, "Members: Broodoo shield");
            case 15 :
                return(38, coif, "Members: Coif");
            case 16 :
                return(41, studded_body, "Members: Studded body");
            case 17 :
                return(41, leather_shield, "Members: Hard leather shield");
            case 18 :
                return(43, yak_hide_armour_greaves, "Members: Yak-hide leg armour");
            case 19 :
                return(44, studded_chaps, "Members: Studded chaps");
            case 20 :
                return(45, snakeskin_boots, "Members: Snakeskin boots");
            case 21 :
                return(46, yak_hide_armour_body, "Members: Yak-hide body armour");
            case 22 :
                return(47, snakeskin_vambraces, "Members: Snakeskin vambraces");
            case 23 :
                return(48, snakeskin_bandana, "Members: Snakeskin bandana");
            case 24 :
                return(51, snakeskin_chaps, "Members: Snakeskin chaps");
            case 25 :
                return(52, serpentine_helm_charged, "Members: Serpentine helm");
            case 26 :
                return(53, snakeskin_body, "Members: Snakeskin body");
            case 27 :
                return(55, slayer_helm, "Members: Slayer helm");
            case 28 :
                return(56, snakeskin_shield, "Members: Snakeskin shield");
            case 29 :
                return(57, dragon_vambraces, "Members: Green dragonhide vambraces");
            case 30 :
                return(60, dragonhide_chaps, "Members: Green dragonhide chaps");
            case 31 :
                return(60, splitbark_gauntlets, "Members: Splitbark gauntlets");
            case 32 :
                return(60, splitbark_greaves, "Members: Splitbark boots");
            case 33 :
                return(61, splitbark_helm, "Members: Splitbark helm");
            case 34 :
                return(62, green_dhide_shield, "Members: Green dragonhide shield");
            case 35 :
                return(62, splitbark_body, "Members: Splitbark body");
            case 36 :
                return(62, splitbark_legs, "Members: Splitbark legs");
            case 37 :
                return(63, dragonhide_body, "Members: Green dragonhide body");
            case 38 :
                return(66, blue_dragon_vambraces, "Members: Blue dragonhide vambraces");
            case 39 :
                return(68, blue_dragonhide_chaps, "Members: Blue dragonhide chaps");
            case 40 :
                return(68, hide_cape, "Members: Mixed hide cape");
            case 41 :
                return(69, hide_boots, "Members: Mixed hide boots");
            case 42 :
                return(69, blue_dhide_shield, "Members: Blue dragonhide shield");
            case 43 :
                return(71, blue_dragonhide_body, "Members: Blue dragonhide body");
            case 44 :
                return(71, hide_legs, "Members: Mixed hide legs");
            case 45 :
                return(72, hide_top, "Members: Mixed hide body");
            case 46 :
                return(73, red_dragon_vambraces, "Members: Red dragonhide vambraces");
            case 47 :
                return(75, red_dragonhide_chaps, "Members: Red dragonhide chaps");
            case 48 :
                return(76, red_dhide_shield, "Members: Red dragonhide shield");
            case 49 :
                return(77, red_dragonhide_body, "Members: Red dragonhide body");
            case 50 :
                return(79, black_dragon_vambraces, "Members: Black dragonhide vambraces");
            case 51 :
                return(82, black_dragonhide_chaps, "Members: Black dragonhide chaps");
            case 52 :
                return(83, black_dhide_shield, "Members: Black dragonhide shield");
            case 53 :
                return(84, black_dragonhide_body, "Members: Black dragonhide body");
            case 54 :
                return(86, huey_vambraces, "Members: <oc_name(huey_vambraces)>");
            case 55 :
                return(86, huey_coif, "Members: <oc_name(huey_coif)>");
            case 56 :
                return(87, huey_chaps, "Members: <oc_name(huey_chaps)>");
            case 57 :
                return(88, huey_body, "Members: <oc_name(huey_body)>");
            case 58 :
                return(90, masori_body_fortified, "Members: Break down armadylean armour and fortify Masori armour");
        }
        return(-1, null, "");
    case 3 :
        switch_int ($int1) {
            case 0 :
                return(1, ball_of_wool, "Wool");
            case 1 :
                return(10, bow_string, "Members: Flax into bow strings");
            case 2 :
                return(10, xbows_crossbow_string, "Members: Sinew into crossbow strings");
            case 3 :
                return(19, magic_string, "Members: Magic tree roots into magic strings");
            case 4 :
                return(30, rope, "Members: Yak hair into rope");
        }
        return(-1, null, "");
    case 4 :
        switch_int ($int1) {
            case 0 :
                return(1, pot_empty, "Pot");
            case 1 :
                return(3, cup_empty, "Members: Cup");
            case 2 :
                return(7, piedish, "Pie dish");
            case 3 :
                return(8, bowl_empty, "Bowl");
            case 4 :
                return(19, plantpot_empty, "Members: Plant pot");
            case 5 :
                return(25, potlid, "Members: Pot lid");
        }
        return(-1, null, "");
    case 5 :
        switch_int ($int1) {
            case 0 :
                return(1, beer_glass, "Beer glass");
            case 1 :
                return(4, candle_lantern_empty, "Candle lantern");
            case 2 :
                return(12, oil_lamp_empty, "Oil lamp");
            case 3 :
                return(26, oil_lantern_empty, "Oil lantern");
            case 4 :
                return(33, vial_empty, "Vial");
            case 5 :
                return(42, fishbowl_empty, "Fishbowl");
            case 6 :
                return(46, stafforb, "Glass orb");
            case 7 :
                return(49, bullseye_lantern_lens, "Bullseye lantern lens");
            case 8 :
                return(87, dorgesh_light_bulb, "Dorgeshuun light orb");
        }
        return(-1, null, "");
    case 6 :
        switch_int ($int1) {
            case 0 :
                return(1, opal, "Members: Cut opal");
            case 1 :
                return(1, opal_ring, "Members: Opal ring");
            case 2 :
                return(3, anma_p_buttons, "Polished buttons");
            case 3 :
                return(5, gold_ring, "Gold ring");
            case 4 :
                return(6, gold_necklace, "Gold necklace");
            case 5 :
                return(7, jewl_gold_bracelet, "Members: Gold bracelet");
            case 6 :
                return(8, strung_gold_amulet, "Gold amulet");
            case 7 :
                return(13, jade, "Members: Cut jade");
            case 8 :
                return(13, jade_ring, "Members: Jade ring");
            case 9 :
                return(16, stringstar, "Holy symbol");
            case 10 :
                return(16, red_topaz, "Members: Cut red topaz");
            case 11 :
                return(16, topaz_ring, "Members: Red topaz ring");
            case 12 :
                return(16, opal_necklace, "Members: Opal necklace");
            case 13 :
                return(17, stringsnake, "Members: Unholy symbol");
            case 14 :
                return(20, sapphire, "Cut sapphire");
            case 15 :
                return(20, sapphire_ring, "Sapphire ring");
            case 16 :
                return(22, sapphire_necklace, "Sapphire necklace");
            case 17 :
                return(22, opal_bracelet, "Members: Opal bracelet");
            case 18 :
                return(23, tiara, "Tiara");
            case 19 :
                return(23, jewl_sapphire_bracelet, "Members: Sapphire bracelet");
            case 20 :
                return(24, strung_sapphire_amulet, "Sapphire amulet");
            case 21 :
                return(25, jade_necklace, "Members: Jade necklace");
            case 22 :
                return(27, emerald, "Cut emerald");
            case 23 :
                return(27, emerald_ring, "Emerald ring");
            case 24 :
                return(27, strung_opal_amulet, "Members: Opal amulet");
            case 25 :
                return(29, emerald_necklace, "Emerald necklace");
            case 26 :
                return(29, jade_bracelet, "Members: Jade bracelet");
            case 27 :
                return(30, jewl_emerald_bracelet, "Members: Emerald bracelet");
            case 28 :
                return(31, strung_emerald_amulet, "Emerald amulet");
            case 29 :
                return(32, topaz_necklace, "Members: Red topaz necklace");
            case 30 :
                return(34, ruby, "Cut ruby");
            case 31 :
                return(34, ruby_ring, "Ruby ring");
            case 32 :
                return(34, strung_jade_amulet, "Members: Jade amulet");
            case 33 :
                return(37, hunting_strung_rabbit_foot, "Members: Rabbit-foot necklaces");
            case 34 :
                return(38, topaz_bracelet, "Members: Red topaz bracelet");
            case 35 :
                return(40, ruby_necklace, "Ruby necklace");
            case 36 :
                return(42, jewl_ruby_bracelet, "Members: Ruby bracelet");
            case 37 :
                return(42, tiara_gold, "Members: Gold Tiara");
            case 38 :
                return(43, diamond, "Cut diamond");
            case 39 :
                return(43, diamond_ring, "Diamond ring");
            case 40 :
                return(45, strung_topaz_amulet, "Members: Red topaz amulet");
            case 41 :
                return(50, strung_ruby_amulet, "Ruby amulet");
            case 42 :
                return(55, dragonstone, "Members: Cut dragonstone");
            case 43 :
                return(55, dragonstone_ring, "Members: Dragonstone ring");
            case 44 :
                return(56, diamond_necklace, "Diamond necklace");
            case 45 :
                return(58, jewl_diamond_bracelet, "Members: Diamond bracelet");
            case 46 :
                return(67, onyx, "Members: Cut onyx");
            case 47 :
                return(67, onyx_ring, "Members: Onyx ring");
            case 48 :
                return(70, strung_diamond_amulet, "Diamond amulet");
            case 49 :
                return(72, dragonstone_necklace, "Members: Dragonstone necklace");
            case 50 :
                return(74, jewl_dragonstone_bracelet, "Members: Dragonstone bracelet");
            case 51 :
                return(75, slayer_ring_8, "Members: Slayer ring");
            case 52 :
                return(80, strung_dragonstone_amulet, "Members: Dragonstone amulet");
            case 53 :
                return(80, berserker_icon, "Members: Icon Removal");
            case 54 :
                return(80, ultor_ring, "Members: Ultor, Venator, Bellator, Magus rings");
            case 55 :
                return(82, onyx_necklace, "Members: Onyx necklace");
            case 56 :
                return(84, jewl_onyx_bracelet, "Members: Onyx bracelet");
            case 57 :
                return(86, amulet_of_rancour, "Members: Amulet of Rancour");
            case 58 :
                return(89, zenyte, "Members: Cut zenyte");
            case 59 :
                return(89, zenyte_ring, "Members: Zenyte ring");
            case 60 :
                return(90, strung_onyx_amulet, "Members: Onyx amulet");
            case 61 :
                return(92, zenyte_necklace, "Members: Zenyte necklace");
            case 62 :
                return(95, zenyte_bracelet, "Members: Zenyte bracelet");
            case 63 :
                return(98, zenyte_amulet, "Members: Zenyte amulet");
        }
        return(-1, null, "");
    case 7 :
        switch_int ($int1) {
            case 0 :
                return(18, silver_sickle, "Silver sickle");
            case 1 :
                return(21, xbows_crossbow_bolts_silver_unfeathered_5, "Silver crossbow bolts");
            case 2 :
                return(35, rat_bone_staff, "Bone staff");
            case 3 :
                return(54, water_battlestaff, "Water battlestaff");
            case 4 :
                return(58, earth_battlestaff, "Earth battlestaff");
            case 5 :
                return(59, toxic_sotd_charged, "Toxic Staff of the Dead");
            case 6 :
                return(59, toxic_tots_charged, "Trident of the Swamp");
            case 7 :
                return(62, fire_battlestaff, "Fire battlestaff");
            case 8 :
                return(66, air_battlestaff, "Air battlestaff");
            case 9 :
                return(72, noxious_halberd, "Noxious Halberd (With 72 Smithing)");
            case 10 :
                return(74, purging_staff, "Purging staff");
            case 11 :
                return(83, barrows_interface_karil_green, "Amethyst bolt tips");
            case 12 :
                return(85, amethyst_arrowheads, "Amethyst arrowtips");
            case 13 :
                return(85, wild_cave_accursed_charged, "Accursed Sceptre");
            case 14 :
                return(87, wwf_farming_helper, "Amethyst javelin heads");
            case 15 :
                return(89, amethyst_dart_tip, "Amethyst dart tips");
        }
        return(-1, null, "");
    case 8 :
        switch_int ($int1) {
            case 0 :
                return(70, celestial_signet_charged, "Celestial signet<br>(with 70 Smithing)");
            case 1 :
                return(70, crystal_helmet, "Crystal helm<br>(with 70 Smithing)");
            case 2 :
                return(72, crystal_platelegs, "Crystal legs<br>(with 72 Smithing)");
            case 3 :
                return(74, crystal_chestplate, "Crystal body<br>(with 74 Smithing)");
            case 4 :
                return(76, crystal_pickaxe, "Crystal pickaxe<br>(with 76 Smithing)");
            case 5 :
                return(76, crystal_axe, "Crystal axe<br>(with 76 Smithing)");
            case 6 :
                return(76, crystal_axe_2h, "Crystal felling axe<br>(with 76 Smithing)");
            case 7 :
                return(76, crystal_harpoon, "Crystal harpoon<br>(with 76 Smithing)");
            case 8 :
                return(78, crystal_bow, "Crystal bow<br>(with 78 Smithing)");
            case 9 :
                return(78, crystal_halberd, "Crystal halberd<br>(with 78 Smithing)");
            case 10 :
                return(78, crystal_shield, "Crystal shield<br>(with 78 Smithing)");
            case 11 :
                return(80, prif_crystal_key, "Enhanced crystal key<br>(with 80 Smithing)");
            case 12 :
                return(80, prif_teleport_crystal, "Eternal teleport crystal<br>(with 80 Smithing)");
            case 13 :
                return(82, blade_of_saeldor, "Blade of Saeldor<br>(with 82 Smithing)");
            case 14 :
                return(82, blade_of_saeldor_infinite, "Blade of Saeldor (c)<br>(with 82 Smithing)");
            case 15 :
                return(82, bow_of_faerdhinen, "Bow of Faerdhinen<br>(with 82 Smithing)");
            case 16 :
                return(82, bow_of_faerdhinen_infinite, "Bow of Faerdhinen (c)<br>(with 82 Smithing)");
        }
        return(-1, null, "");
    case 9 :
        switch_int ($int1) {
            case 0 :
                return(5, birdhouse_normal, "Craft a birdhouse trap from normal logs");
            case 1 :
                return(10, damaged_ballista_rope, "Extract sinew from monkey tails");
            case 2 :
                return(15, birdhouse_oak, "Craft a birdhouse trap from oak logs");
            case 3 :
                return(25, birdhouse_willow, "Craft a birdhouse trap from willow logs");
            case 4 :
                return(30, hammer, "Repair Piscarilius fishing cranes<br>(with 30 Construction)");
            case 5 :
                return(35, birdhouse_teak, "Craft a birdhouse trap from teak logs");
            case 6 :
                return(35, hg_furpouch_small, "Craft small hunters' pouches");
            case 7 :
                return(38, arceuus_essence_block, "Dense essence<br>(with 38 Mining)");
            case 8 :
                return(45, birdhouse_maple, "Craft a birdhouse trap from maple logs");
            case 9 :
                return(50, birdhouse_mahogany, "Craft a birdhouse trap from mahogany logs");
            case 10 :
                return(50, forestry_clothes_pouch, "Craft a clothes pouch<br>(with 50 Woodcutting)");
            case 11 :
                return(50, hg_furpouch_med, "Craft medium hunters' pouches");
            case 12 :
                return(52, dorgesh_light_bulb, "Replace Dorgeshuun light orbs");
            case 13 :
                return(56, rcu_pouch_colossal, "Craft a colossal pouch from essence pouches");
            case 14 :
                return(60, birdhouse_yew, "Craft a birdhouse trap from yew logs");
            case 15 :
                return(65, hg_furpouch_large, "Craft large hunters' pouches");
            case 16 :
                return(75, birdhouse_magic, "Craft a birdhouse trap from magic logs");
            case 17 :
                return(75, divine_rune_pouch, "Craft a divine rune pouch from a Thread of Elidinis.");
            case 18 :
                return(90, birdhouse_redwood, "Craft a birdhouse trap from redwood logs");
        }
        return(-1, null, "");
}
return(-1, null, "");
