// 4896
[clientscript,script4896](int $int0, int $int1, int $int2, int $int3)
if (enum(int, namedobj, enum_982, $int2) = null) {
    $int2, $int3 = 0, 0;
} else if ($int3 >= 16000 | $int3 < 0) {
    $int3 = 0;
}
switch_int ($int0) {
    case 1 :
        switch_int ($int1) {
            case 1 :
                %rune_pouch_loadout_a_rune1_bitsb, %rune_pouch_loadout_a_rune1_bitsa = calc($int2 / pow(2, 4)), calc($int2 % pow(2, 4));
                %rune_pouch_loadout_a_cap1 = $int3;
            case 2 :
                %rune_pouch_loadout_a_rune2_bitsb, %rune_pouch_loadout_a_rune2_bitsa = calc($int2 / pow(2, 4)), calc($int2 % pow(2, 4));
                %rune_pouch_loadout_a_cap2 = $int3;
            case 3 :
                %rune_pouch_loadout_a_rune3, %rune_pouch_loadout_a_cap3 = $int2, $int3;
            case 4 :
                %rune_pouch_loadout_a_rune4, %rune_pouch_loadout_a_cap4 = $int2, $int3;
        }
    case 2 :
        switch_int ($int1) {
            case 1 :
                %rune_pouch_loadout_b_rune1, %rune_pouch_loadout_b_cap1 = $int2, $int3;
            case 2 :
                %rune_pouch_loadout_b_rune2, %rune_pouch_loadout_b_cap2 = $int2, $int3;
            case 3 :
                %rune_pouch_loadout_b_rune3, %rune_pouch_loadout_b_cap3 = $int2, $int3;
            case 4 :
                %rune_pouch_loadout_b_rune4, %rune_pouch_loadout_b_cap4 = $int2, $int3;
        }
    case 3 :
        switch_int ($int1) {
            case 1 :
                %rune_pouch_loadout_c_rune1, %rune_pouch_loadout_c_cap1 = $int2, $int3;
            case 2 :
                %rune_pouch_loadout_c_rune2, %rune_pouch_loadout_c_cap2 = $int2, $int3;
            case 3 :
                %rune_pouch_loadout_c_rune3, %rune_pouch_loadout_c_cap3 = $int2, $int3;
            case 4 :
                %rune_pouch_loadout_c_rune4, %rune_pouch_loadout_c_cap4 = $int2, $int3;
        }
    case 4 :
        switch_int ($int1) {
            case 1 :
                %rune_pouch_loadout_d_rune1, %rune_pouch_loadout_d_cap1 = $int2, $int3;
            case 2 :
                %rune_pouch_loadout_d_rune2, %rune_pouch_loadout_d_cap2 = $int2, $int3;
            case 3 :
                %rune_pouch_loadout_d_rune3 = $int2;
                %rune_pouch_loadout_d_cap3_bitsc, %rune_pouch_loadout_d_cap3_bitsb, %rune_pouch_loadout_d_cap3_bitsa = calc($int3 / pow(2, 10)), calc($int3 / pow(2, 6) % pow(2, 4)), calc($int3 % pow(2, 6));
            case 4 :
                %rune_pouch_loadout_d_rune4, %rune_pouch_loadout_d_cap4 = $int2, $int3;
        }
    case 5 :
        switch_int ($int1) {
            case 1 :
                %rune_pouch_loadout_e_rune1_bitsb, %rune_pouch_loadout_e_rune1_bitsa = calc($int2 / pow(2, 4)), calc($int2 % pow(2, 4));
                %rune_pouch_loadout_e_cap1 = $int3;
            case 2 :
                %rune_pouch_loadout_e_rune2_bitsb, %rune_pouch_loadout_e_rune2_bitsa = calc($int2 / pow(2, 4)), calc($int2 % pow(2, 4));
                %rune_pouch_loadout_e_cap2 = $int3;
            case 3 :
                %rune_pouch_loadout_e_rune3, %rune_pouch_loadout_e_cap3 = $int2, $int3;
            case 4 :
                %rune_pouch_loadout_e_rune4, %rune_pouch_loadout_e_cap4 = $int2, $int3;
        }
    case 6 :
        switch_int ($int1) {
            case 1 :
                %rune_pouch_loadout_f_rune1, %rune_pouch_loadout_f_cap1 = $int2, $int3;
            case 2 :
                %rune_pouch_loadout_f_rune2, %rune_pouch_loadout_f_cap2 = $int2, $int3;
            case 3 :
                %rune_pouch_loadout_f_rune3, %rune_pouch_loadout_f_cap3 = $int2, $int3;
            case 4 :
                %rune_pouch_loadout_f_rune4, %rune_pouch_loadout_f_cap4 = $int2, $int3;
        }
    case 7 :
        switch_int ($int1) {
            case 1 :
                %rune_pouch_loadout_g_rune1, %rune_pouch_loadout_g_cap1 = $int2, $int3;
            case 2 :
                %rune_pouch_loadout_g_rune2, %rune_pouch_loadout_g_cap2 = $int2, $int3;
            case 3 :
                %rune_pouch_loadout_g_rune3, %rune_pouch_loadout_g_cap3 = $int2, $int3;
            case 4 :
                %rune_pouch_loadout_g_rune4, %rune_pouch_loadout_g_cap4 = $int2, $int3;
        }
    case 8 :
        switch_int ($int1) {
            case 1 :
                %rune_pouch_loadout_h_rune1, %rune_pouch_loadout_h_cap1 = $int2, $int3;
            case 2 :
                %rune_pouch_loadout_h_rune2, %rune_pouch_loadout_h_cap2 = $int2, $int3;
            case 3 :
                %rune_pouch_loadout_h_rune3 = $int2;
                %rune_pouch_loadout_h_cap3_bitsc, %rune_pouch_loadout_h_cap3_bitsb, %rune_pouch_loadout_h_cap3_bitsa = calc($int3 / pow(2, 10)), calc($int3 / pow(2, 6) % pow(2, 4)), calc($int3 % pow(2, 6));
            case 4 :
                %rune_pouch_loadout_h_rune4, %rune_pouch_loadout_h_cap4 = $int2, $int3;
        }
    case 9 :
        switch_int ($int1) {
            case 1 :
                %rune_pouch_loadout_i_rune1_bitsb, %rune_pouch_loadout_i_rune1_bitsa = calc($int2 / pow(2, 4)), calc($int2 % pow(2, 4));
                %rune_pouch_loadout_i_cap1 = $int3;
            case 2 :
                %rune_pouch_loadout_i_rune2_bitsb, %rune_pouch_loadout_i_rune2_bitsa = calc($int2 / pow(2, 4)), calc($int2 % pow(2, 4));
                %rune_pouch_loadout_i_cap2 = $int3;
            case 3 :
                %rune_pouch_loadout_i_rune3, %rune_pouch_loadout_i_cap3 = $int2, $int3;
            case 4 :
                %rune_pouch_loadout_i_rune4, %rune_pouch_loadout_i_cap4 = $int2, $int3;
        }
    case 10 :
        switch_int ($int1) {
            case 1 :
                %rune_pouch_loadout_j_rune1, %rune_pouch_loadout_j_cap1 = $int2, $int3;
            case 2 :
                %rune_pouch_loadout_j_rune2, %rune_pouch_loadout_j_cap2 = $int2, $int3;
            case 3 :
                %rune_pouch_loadout_j_rune3, %rune_pouch_loadout_j_cap3 = $int2, $int3;
            case 4 :
                %rune_pouch_loadout_j_rune4, %rune_pouch_loadout_j_cap4 = $int2, $int3;
        }
}
