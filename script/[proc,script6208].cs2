// 6208
[proc,script6208](component $component0, component $component1, component $component2)
def_int $int3 = -1;
def_int $int4 = -1;
def_int $int5 = -1;
def_int $int6 = -1;
def_obj $obj7 = null;
def_component $component8 = null;
def_int $int9 = 0;
def_int $int10 = inv_size(inv_94);
while ($int9 < $int10) {
    $component8 = enum(int, component, enum_4401, $int9);
    if ($component8 ! null) {
        cc_deleteall($component8);
        cc_create($component8, ^iftype_graphic, 0);
        cc_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_centre);
        cc_setsize(36, 36, ^setsize_abs, ^setsize_abs);
        cc_setgraphic("miscgraphics,0");
        cc_create($component8, ^iftype_graphic, 1);
        cc_setsize(36, 32, ^setsize_abs, ^setsize_abs);
        cc_setposition(2, 0, ^setpos_abs_centre, ^setpos_abs_centre);
        $obj7 = inv_getobj(inv_207, $int9);
        if ($obj7 ! null) {
            cc_settrans(0);
            cc_setgraphicshadow(0x333333);
            cc_setoutline(1);
            cc_setobject($obj7, inv_getnum(inv_207, $int9));
            cc_setopbase("<col=ff9040><oc_name($obj7)></col>");
            cc_setop(10, "Examine");
            cc_setonop("cc_settrans_temporarily(event_com, cc_getid, 100, 0)");
            if (oc_param($obj7, param_1564) ! 13) {
                switch_int (oc_param($obj7, param_1562)) {
                    case 3 :
                        $int3 = ~max($int3, oc_param($obj7, param_1563));
                    case 5 :
                        $int4 = ~max($int4, oc_param($obj7, param_1563));
                    case -6 :
                        $int5 = ~max($int5, oc_param($obj7, param_1563));
                    case -7 :
                        $int6 = ~max($int6, oc_param($obj7, param_1563));
                }
            }
        } else {
            cc_settrans(255);
            cc_clearops;
            cc_create($component8, ^iftype_graphic, 2);
            cc_setsize(32, 32, ^setsize_abs, ^setsize_abs);
            cc_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_centre);
            cc_setgraphic(enum(int, graphic, enum_904, $int9));
        }
    }
    $int9 = calc($int9 + 1);
}
cc_deleteall($component0);
def_int $int11 = calc((if_getwidth($component0) - 6 - 4 * 36) / 3 + 36);
def_int $int12 = calc((if_getheight($component0) - 6 - 7 * 32) / 6 + 32);
$int9 = 0;
def_int $int13 = $int10;
def_int $int14 = inv_size(inv_93);
while ($int9 < $int14) {
    $obj7 = inv_getobj(inv_207, $int13);
    cc_create($component0, ^iftype_graphic, $int9);
    cc_setposition(calc(4 + $int11 * ($int9 % 4)), calc(3 + $int12 * ($int9 / 4)), ^setpos_abs_left, ^setpos_abs_top);
    cc_setsize(36, 32, ^setsize_abs, ^setsize_abs);
    if ($obj7 ! null) {
        cc_settrans(0);
        cc_setgraphicshadow(0x333333);
        cc_setoutline(1);
        cc_setobject($obj7, inv_getnum(inv_207, $int13));
        cc_setopbase("<col=ff9040><oc_name($obj7)></col>");
        if ($obj7 = obj_27086) {
            cc_setop(1, "Check");
        }
        cc_setop(10, "Examine");
        cc_setonop("cc_settrans_temporarily(event_com, cc_getid, 100, 0)");
        if (oc_param($obj7, param_1564) ! 13) {
            switch_int (oc_param($obj7, param_1562)) {
                case 3 :
                    $int3 = ~max($int3, oc_param($obj7, param_1563));
                case 5 :
                    $int4 = ~max($int4, oc_param($obj7, param_1563));
                case -6 :
                    $int5 = ~max($int5, oc_param($obj7, param_1563));
                case -7 :
                    $int6 = ~max($int6, oc_param($obj7, param_1563));
            }
        }
    } else {
        cc_settrans(255);
        cc_clearops;
    }
    $int9, $int13 = calc($int9 + 1), calc($int13 + 1);
}
def_int $int15 = $int9;
$int15 = ~thinbox($component0, $int15);
cc_deleteall($component2);
def_int $int16 = 0;
cc_create($component2, ^iftype_graphic, $int16);
$int16 = calc($int16 + 1);
cc_setsize(0, 0, ^setsize_minus, ^setsize_minus);
cc_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_centre);
cc_setgraphic(tradebacking_light);
cc_settiling(true);
cc_create($component2, ^iftype_rectangle, $int16);
$int16 = calc($int16 + 1);
cc_setsize(0, 0, ^setsize_minus, ^setsize_minus);
cc_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_centre);
cc_setfill(false);
cc_setcolour(0x0e0e0c);
cc_create($component2, ^iftype_rectangle, $int16);
$int16 = calc($int16 + 1);
cc_setsize(2, 2, ^setsize_minus, ^setsize_minus);
cc_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_centre);
cc_setfill(false);
cc_setcolour(0x474745);
cc_create($component2, ^iftype_text, $int16);
$int16 = calc($int16 + 1);
cc_setsize(0, 0, ^setsize_minus, ^setsize_minus);
cc_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_centre);
cc_settextfont(p12_full);
cc_settextshadow(true);
cc_settextalign(^settextalign_centre, ^settextalign_centre, 0);
cc_setcolour(0xff981f);
cc_settext(enum(int, string, enum_4208, %varplayerbit_14031));
def_int $int17 = 0;
def_int $int18 = 0;
def_int $int19 = 0;
def_int $int20 = 0;
def_int $int21 = 0;
def_int $int22 = 0;
def_int $int23 = 0;
def_int $int24 = 0;
def_int $int25 = 0;
def_int $int26 = 0;
def_int $int27 = 0;
def_int $int28 = 0;
$int21, $int22, $int23, $int24, $int25, $int26, $int27, $int28 = ~script6335(%varplayerbit_14024);
def_int $intarray0(calc(23 + 1));
def_int $int29 = 23;
while ($int29 > 0) {
    switch_int ($int29) {
        case 1 :
            $intarray0($int29) = $int21;
        case 2 :
            $intarray0($int29) = $int22;
        case 3 :
            $intarray0($int29) = $int23;
        case 4 :
            $intarray0($int29) = $int24;
        case 5 :
            $intarray0($int29) = $int25;
        case 6 :
            $intarray0($int29) = $int26;
        case 7 :
            $intarray0($int29) = $int27;
        case default :
            $intarray0($int29) = $int28;
    }
    $int29 = calc($int29 - 1);
}
def_int $int30 = enum_getoutputcount(enum_4390);
$int9 = $int30;
def_int $intarray1(calc($int30 + 1));
def_int $int31 = enum_getoutputcount(enum_4392);
def_obj $objarray2($int31);
def_int $intarray3($int31);
def_int $int32 = 0;
def_int $int33 = ^max_32bit_int;
while ($int9 > 0) {
    $obj7 = enum(int, namedobj, enum_4390, $int9);
    if ($obj7 ! null) {
        $intarray1($int9) = inv_total(inv_207, $obj7);
        $int33 = enum(obj, int, enum_4392, $obj7);
        if ($int33 < ^max_32bit_int) {
            $int32 = $int31;
            while ($int32 > 0) {
                $int32 = calc($int32 - 1);
                if ($objarray2($int32) = null) {
                    $intarray3($int32) = $int33;
                    $objarray2($int32) = $obj7;
                    $int32 = -1;
                } else if ($obj7 = $objarray2($int32)) {
                    $int32 = -1;
                }
            }
        }
    }
    $int9 = calc($int9 - 1);
}
def_int $int34 = 0;
def_int $int35 = 0;
if (%varplayerbit_14031 ! ~script6325(%varplayerbit_14024)) {
    $int35 = 1;
} else if (%varplayer_3533 ! ~script6432(%varplayerbit_14024) & inv_total(inv_207, obj_27086) > 0) {
    $int35 = 1;
}
$int9 = $int10;
while ($int9 > 0) {
    $int9 = calc($int9 - 1);
    $int34 = ~script6322(%varplayerbit_14024, $int9);
    $obj7 = enum(int, namedobj, enum_4390, $int34);
    if ($obj7 ! null) {
        if (oc_stackable($obj7) = true) {
            $intarray1($int34) = calc($intarray1($int34) - 5000);
        } else {
            $intarray1($int34) = calc($intarray1($int34) - 1);
        }
        if ($intarray1($int34) < 0) {
            $int35 = 1;
        }
    }
    $obj7 = inv_getobj(inv_207, $int9);
    if ($obj7 ! null) {
        $int17 = 0;
        $int33 = enum(obj, int, enum_4392, $obj7);
        if ($int33 < ^max_32bit_int) {
            $int32 = $int31;
            while ($int32 > 0) {
                $int32 = calc($int32 - 1);
                if ($objarray2($int32) = $obj7) {
                    if ($intarray3($int32) > 0) {
                        $intarray3($int32) = calc($intarray3($int32) - 1);
                    } else {
                        $int17, $int20 = 1, 1;
                    }
                    $int32 = -1;
                }
            }
        }
        if (oc_param($obj7, param_434) ! null & oc_param($obj7, param_436) > $intarray0(enum(stat, int, enum_81, oc_param($obj7, param_434))) | oc_param($obj7, param_435) ! null & oc_param($obj7, param_437) > $intarray0(enum(stat, int, enum_81, oc_param($obj7, param_435))) | oc_param($obj7, param_191) ! null & oc_param($obj7, param_613) > $intarray0(enum(stat, int, enum_81, oc_param($obj7, param_191))) | oc_param($obj7, param_579) ! null & oc_param($obj7, param_614) > $intarray0(enum(stat, int, enum_81, oc_param($obj7, param_579))) | oc_param($obj7, param_610) ! null & oc_param($obj7, param_615) > $intarray0(enum(stat, int, enum_81, oc_param($obj7, param_610))) | oc_param($obj7, param_611) ! null & oc_param($obj7, param_616) > $intarray0(enum(stat, int, enum_81, oc_param($obj7, param_611))) | oc_param($obj7, param_612) ! null & oc_param($obj7, param_617) > $intarray0(enum(stat, int, enum_81, oc_param($obj7, param_612)))) {
            $int17, $int18 = 1, 1;
        }
        if (oc_param($obj7, param_1564) = 13) {
            switch_int (oc_param($obj7, param_1562)) {
                case 3 :
                    if ($int3 < oc_param($obj7, param_1563)) {
                        $int17, $int19 = 1, 1;
                    }
                case 5 :
                    if ($int4 < oc_param($obj7, param_1563)) {
                        $int17, $int19 = 1, 1;
                    }
                case -6 :
                    if ($int5 < oc_param($obj7, param_1563)) {
                        $int17, $int19 = 1, 1;
                    }
                case -7 :
                    if ($int6 < oc_param($obj7, param_1563)) {
                        $int17, $int19 = 1, 1;
                    }
            }
        }
        if ($int17 = 1) {
            $component8 = enum(int, component, enum_4401, $int9);
            if ($component8 ! null) {
                cc_create($component8, ^iftype_model, 2);
                cc_setsize(36, 32, ^setsize_abs, ^setsize_abs);
                cc_setposition(1, 0, ^setpos_abs_centre, ^setpos_abs_centre);
                cc_setmodel(model_7669);
                cc_setmodelangle(0, 0, 512, 512, 0, 1800);
            }
        }
    }
}
$int9 = 0;
while ($int9 < $int14) {
    $int34 = ~script6321(%varplayerbit_14024, $int9);
    $obj7 = enum(int, namedobj, enum_4390, $int34);
    if ($obj7 ! null) {
        if (oc_stackable($obj7) = true) {
            $intarray1($int34) = calc($intarray1($int34) - 5000);
        } else {
            $intarray1($int34) = calc($intarray1($int34) - 1);
        }
        if ($intarray1($int34) < 0) {
            $int35 = 1;
        }
    }
    cc_create($component0, ^iftype_model, $int15);
    $int15 = calc($int15 + 1);
    $obj7 = inv_getobj(inv_207, calc($int9 + $int10));
    if ($obj7 ! null) {
        $int17 = 0;
        $int33 = enum(obj, int, enum_4392, $obj7);
        if ($int33 < ^max_32bit_int) {
            $int32 = $int31;
            while ($int32 > 0) {
                $int32 = calc($int32 - 1);
                if ($objarray2($int32) = $obj7) {
                    if ($intarray3($int32) > 0) {
                        $intarray3($int32) = calc($intarray3($int32) - 1);
                    } else {
                        $int17, $int20 = 1, 1;
                    }
                    $int32 = -1;
                }
            }
        }
        if (oc_param($obj7, param_434) ! null & oc_param($obj7, param_436) > $intarray0(enum(stat, int, enum_81, oc_param($obj7, param_434))) | oc_param($obj7, param_435) ! null & oc_param($obj7, param_437) > $intarray0(enum(stat, int, enum_81, oc_param($obj7, param_435))) | oc_param($obj7, param_191) ! null & oc_param($obj7, param_613) > $intarray0(enum(stat, int, enum_81, oc_param($obj7, param_191))) | oc_param($obj7, param_579) ! null & oc_param($obj7, param_614) > $intarray0(enum(stat, int, enum_81, oc_param($obj7, param_579))) | oc_param($obj7, param_610) ! null & oc_param($obj7, param_615) > $intarray0(enum(stat, int, enum_81, oc_param($obj7, param_610))) | oc_param($obj7, param_611) ! null & oc_param($obj7, param_616) > $intarray0(enum(stat, int, enum_81, oc_param($obj7, param_611))) | oc_param($obj7, param_612) ! null & oc_param($obj7, param_617) > $intarray0(enum(stat, int, enum_81, oc_param($obj7, param_612)))) {
            $int17, $int18 = 1, 1;
        }
        if (oc_param($obj7, param_1564) = 13) {
            switch_int (oc_param($obj7, param_1562)) {
                case 3 :
                    if ($int3 < oc_param($obj7, param_1563)) {
                        $int17, $int19 = 1, 1;
                    }
                case 5 :
                    if ($int4 < oc_param($obj7, param_1563)) {
                        $int17, $int19 = 1, 1;
                    }
                case -6 :
                    if ($int5 < oc_param($obj7, param_1563)) {
                        $int17, $int19 = 1, 1;
                    }
                case -7 :
                    if ($int6 < oc_param($obj7, param_1563)) {
                        $int17, $int19 = 1, 1;
                    }
            }
        }
        if ($int17 = 1) {
            cc_sethide(false);
            cc_setsize(36, 32, ^setsize_abs, ^setsize_abs);
            cc_setposition(calc(4 + $int11 * ($int9 % 4)), calc(3 + $int12 * ($int9 / 4)), ^setpos_abs_left, ^setpos_abs_top);
            cc_setmodel(model_7669);
            cc_setmodelangle(0, 0, 512, 512, 0, 1800);
        } else {
            cc_sethide(true);
        }
    } else {
        cc_sethide(true);
    }
    $int9 = calc($int9 + 1);
}
if ($int35 = 0) {
    $int9 = $int30;
    while ($int9 > 0 & $int35 = 0) {
        if (enum(int, namedobj, enum_4390, $int9) ! null & $intarray1($int9) ! 0) {
            $int35 = 1;
        }
        $int9 = calc($int9 - 1);
    }
}
if ($int18 = 1) {
    if_settext("This build's <col=ff0000>stats</col> will not permit equipping some of the items.", $component1);
} else if ($int20 = 1) {
    if_settext("This load-out contains <col=ff0000>too many</col> of certain items.", $component1);
} else if ($int19 = 1) {
    if_settext("Your opponent has ammo that <col=ff0000>cannot be fired</col> by their weaponry.", $component1);
} else if ($int35 = 1) {
    if_settext("Your opponent's load-out <col=ff0000>does not match</col> yours.", $component1);
} else {
    if_settext("You and your opponent have <col=ffb83f>the same options</col> in your load-outs.", $component1);
}
