// 4185
[clientscript,colour_pallet](component $component0, int $int1)
~script4206(colour_pallet:clamp, colour_pallet:fader, colour_pallet:window, ^max_32bit_int, $component0);
%settings_colour_pallet_selected = $int1;
def_struct $struct2 = enum(int, struct, enum_423, %settings_category);
def_enum $enum3 = null;
if ($struct2 = null) {
    return;
}
$enum3 = struct_param($struct2, param_745);
if ($enum3 = null) {
    return;
}
def_struct $struct4 = null;
def_int $int5 = 0;
def_int $int6 = enum_getoutputcount($enum3);
def_int $int7 = 0;
def_int $int8 = 0;
def_int $int9 = 0;
def_int $int10 = 0;
def_string $string0 = "#";
while ($int5 < $int6) {
    $struct4 = enum(int, struct, $enum3, $int5);
    if ($struct4 ! null) {
        $int8 = struct_param($struct4, param_1078);
        $int9 = struct_param($struct4, param_1077);
        if ($int8 = 9) {
            if ($int9 = %settings_selected_setting) {
                $int6 = $int5;
            } else {
                $int7 = calc($int7 + 1);
            }
        }
    }
    $int5 = calc($int5 + 1);
}
~steelborder(colour_pallet:frame, "Colour picker - <struct_param($struct4, param_1086)>", 1);
def_component $component11 = colour_pallet:info;
def_component $component12 = colour_pallet:pallet_custom;
def_component $component13 = colour_pallet:pallet_custom_clickzone;
def_component $component14 = colour_pallet:pallet;
def_component $component15 = colour_pallet:pallet_colours;
def_component $component16 = colour_pallet:scrollbar;
cc_deleteall($component14);
cc_deleteall($component15);
cc_deleteall($component16);
def_int $int17 = 0;
cc_create($component11, ^iftype_text, $int17);
cc_settext("Current colour");
cc_settextfont(b12_full);
cc_settextshadow(true);
cc_setcolour(0xff981f);
cc_settextalign(^settextalign_centre, ^settextalign_centre, 0);
cc_setsize(100, 18, ^setsize_abs, ^setsize_abs);
cc_setposition(18, 2, ^setpos_abs_left, ^setpos_abs_top);
$int17 = calc($int17 + 1);
def_int $int18 = 45;
if (%settings_colour_pallet_selected = -1) {
    %settings_colour_pallet_selected = struct_param($struct4, param_1230);
}
cc_create($component11, ^iftype_rectangle, $int17);
cc_setsize($int18, $int18, ^setsize_abs, ^setsize_abs);
cc_setposition(45, 22, ^setpos_abs_left, ^setpos_abs_top);
cc_setcolour(%settings_colour_pallet_selected);
cc_setfill(true);
$int17 = calc($int17 + 1);
$int17 = ~thinbox_specific($component11, $int17, 45, 22, $int18, $int18, ^setpos_abs_left, ^setpos_abs_top);
cc_create($component11, ^iftype_text, $int17);
cc_settext(append($string0, ~colour_to_string(%settings_colour_pallet_selected)));
cc_settextfont(p11_full);
cc_settextshadow(true);
cc_setcolour(0xff981f);
cc_settextalign(^settextalign_centre, ^settextalign_centre, 0);
cc_setsize(80, 18, ^setsize_abs, ^setsize_abs);
cc_setposition(27, 2, ^setpos_abs_left, ^setpos_abs_bottom);
$int17 = calc($int17 + 1);
cc_create($component11, ^iftype_text, $int17);
cc_settext("New colour");
cc_settextfont(b12_full);
cc_settextshadow(true);
cc_setcolour(0xff981f);
cc_settextalign(^settextalign_centre, ^settextalign_centre, 0);
cc_setsize(100, 18, ^setsize_abs, ^setsize_abs);
cc_setposition(137, 2, ^setpos_abs_left, ^setpos_abs_top);
$int17 = calc($int17 + 1);
cc_create($component11, ^iftype_rectangle, $int17);
cc_setsize($int18, $int18, ^setsize_abs, ^setsize_abs);
cc_setposition(164, 22, ^setpos_abs_left, ^setpos_abs_top);
cc_setcolour(%settings_colour_pallet_selected);
cc_setfill(true);
def_int $int19 = $int17;
$int17 = calc($int17 + 1);
$int17 = ~thinbox_specific($component11, $int17, 164, 22, $int18, $int18, ^setpos_abs_left, ^setpos_abs_top);
def_string $string1 = append($string0, ~colour_to_string(%settings_colour_pallet_selected));
cc_create($component11, ^iftype_text, $int17);
cc_settext($string1);
cc_settextfont(p11_full);
cc_settextshadow(true);
cc_setcolour(0xff981f);
cc_settextalign(^settextalign_centre, ^settextalign_centre, 0);
cc_setsize(80, 18, ^setsize_abs, ^setsize_abs);
cc_setposition(147, 2, ^setpos_abs_left, ^setpos_abs_bottom);
def_int $int20 = $int17;
$int17 = 0;
def_int $int21 = 0;
def_int $int22 = 0;
def_int $int23 = 0;
def_int $int24 = 0;
def_int $int25 = 0;
def_int $int26 = 0;
def_int $int27 = 0;
def_int $int28 = 0;
$int26, $int27, $int28 = ~hex_to_rgb(%settings_colour_pallet_selected);
$int17, $int21, $int22 = ~script4501($component12, $int17, $component13, $int21, $string1, 20, 33, 80, 18, "Hexadecimal");
$int17, $int21, $int23 = ~script4501($component12, $int17, $component13, $int21, tostring($int26), 7, 67, 32, 18, "Red");
$int17, $int21, $int24 = ~script4501($component12, $int17, $component13, $int21, tostring($int27), 44, 67, 32, 18, "Green");
$int17, $int21, $int25 = ~script4501($component12, $int17, $component13, $int21, tostring($int28), 81, 67, 32, 18, "Blue");
if (cc_find($component13, 0) = ^true) {
    cc_setonop("colour_pallet_input_op(0, $component0, $component11, $int19, $int20, $struct4, $component12, $int22, $int23, $int24, $int25)");
}
if (cc_find($component13, 1) = ^true) {
    cc_setonop("colour_pallet_input_op(1, $component0, $component11, $int19, $int20, $struct4, $component12, $int22, $int23, $int24, $int25)");
}
if (cc_find($component13, 2) = ^true) {
    cc_setonop("colour_pallet_input_op(2, $component0, $component11, $int19, $int20, $struct4, $component12, $int22, $int23, $int24, $int25)");
}
if (cc_find($component13, 3) = ^true) {
    cc_setonop("colour_pallet_input_op(3, $component0, $component11, $int19, $int20, $struct4, $component12, $int22, $int23, $int24, $int25)");
}
cc_create($component12, ^iftype_text, $int17);
cc_settext("Custom input");
cc_settextfont(b12_full);
cc_settextshadow(true);
cc_setcolour(0xff981f);
cc_settextalign(^settextalign_centre, ^settextalign_centre, 0);
cc_setsize(100, 18, ^setsize_abs, ^setsize_abs);
cc_setposition(10, 2, ^setpos_abs_left, ^setpos_abs_top);
def_int $int29 = calc(enum_getoutputcount(enum_3760) + 1);
def_int $int30 = 26;
def_int $int31 = 1;
def_int $int32 = if_getheight($component14);
def_int $int33 = calc($int32 / ($int30 + $int31));
def_int $int34 = calc(if_getwidth($component14) / ($int31 + $int30));
def_int $int35 = calc($int29 / $int34);
def_int $int36 = calc($int29 % $int34);
def_int $int37 = 0;
if ($int36 > 0) {
    $int37 = calc($int35 + 1);
} else {
    $int37, $int36 = $int35, $int34;
}
if ($int37 > $int33) {
    if_setsize(16, 0, ^setsize_minus, ^setsize_minus, $component15);
    if_sethide(false, $component16);
    ~scrollbar_vertical($component16, $component15, "scrollbar_dragger_v2,3", "scrollbar_dragger_v2,0", "scrollbar_dragger_v2,1", "scrollbar_dragger_v2,2", "scrollbar_v2,0", "scrollbar_v2,1");
    $component14 = $component15;
    $int34 = calc(if_getwidth($component14) / ($int31 + $int30));
    $int35 = calc($int29 / $int34);
    $int36 = calc($int29 % $int34);
    if ($int36 > 0) {
        $int37 = calc($int35 + 1);
    } else {
        $int37, $int36 = $int35, $int34;
    }
} else {
    if_setsize(0, 0, ^setsize_minus, ^setsize_minus, $component15);
    if_sethide(true, $component16);
}
$int17 = 0;
def_int $int38 = 0;
def_int $int39 = 0;
def_int $int40 = 0;
def_int $int41 = -1;
def_int $int42 = 0;
def_int $int43 = 0;
def_int $int44 = 0;
def_int $int45 = 0;
def_boolean $boolean46 = ~on_mobile;
while ($int40 < $int37) {
    if ($int40 = calc($int37 - 1)) {
        $int34 = $int36;
        if ($int35 = 0) {
            $int43 = calc(if_getheight($component14) / 2 - ($int30 + $int31) / 2);
        }
    }
    $int45 = calc($int34 * ($int30 + $int31));
    $int42 = calc((if_getwidth($component14) - $int45) / 2);
    while ($int39 < $int34) {
        $int41 = enum(int, int, enum_3760, $int38);
        if ($int41 = -1) {
            $int41 = struct_param($struct4, param_1230);
        }
        cc_create($component15, ^iftype_rectangle, $int17);
        cc_setsize($int30, $int30, ^setsize_abs, ^setsize_abs);
        cc_setposition($int42, $int43, ^setpos_abs_left, ^setpos_abs_top);
        cc_setcolour($int41);
        cc_setfill(true);
        cc_setonop("colour_pallet_op(event_op, event_com, event_comsubid, $component0, $int41, $component11, $int19, $int20, $struct4, $component12, $int22, $int23, $int24, $int25)");
        cc_setop(1, "Select colour");
        $int17 = calc($int17 + 1);
        if ($boolean46 = false) {
            cc_create($component15, ^iftype_rectangle, $int17);
            cc_setsize($int30, $int30, ^setsize_abs, ^setsize_abs);
            cc_setposition($int42, $int43, ^setpos_abs_left, ^setpos_abs_top);
            cc_setcolour(^black);
            cc_setfill(true);
            cc_settrans(250);
            cc_setonmouserepeat("cc_settrans(event_com, event_comsubid, 220, null)");
            cc_setonmouseleave("cc_settrans(event_com, event_comsubid, 250, null)");
            $int17 = calc($int17 + 1);
        } else {
            cc_create($component15, ^iftype_rectangle, $int17);
            cc_sethide(true);
            $int17 = calc($int17 + 1);
        }
        $int17 = ~thinbox_specific($component15, $int17, $int42, $int43, $int30, $int30, ^setpos_abs_left, ^setpos_abs_top);
        $int42 = calc($int42 + $int30 + $int31);
        $int38 = calc($int38 + 1);
        $int39 = calc($int39 + 1);
    }
    $int39 = 0;
    $int42 = 0;
    $int43 = calc($int43 + $int30 + $int31);
    $int40 = calc($int40 + 1);
}
if ($int37 > $int33) {
    if_setscrollsize(0, $int43, $component14);
    ~scrollbar_resize($component16, $component14, if_getscrolly($component14));
}
~stonebutton_init("<col=ff981f>Cancel</col>", colour_pallet:cancel, p12_full, 0);
if_setonop("script4208(^max_32bit_int, colour_pallet:clamp, colour_pallet:fader, colour_pallet:window, $component0)", colour_pallet:cancel);
~stonebutton_init("<col=0dc10d>Save</col>", colour_pallet:submit, p12_full, 0);
if_setonop("script4208(%settings_colour_pallet_selected, colour_pallet:clamp, colour_pallet:fader, colour_pallet:window, $component0)", colour_pallet:submit);
