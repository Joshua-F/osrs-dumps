// 4515
[proc,script4515](component $component0, component $component1, stat $stat2, int $int3, int $int4, int $int5, component $component6)(int)
$int4 = calc($int4 + $int3 * 35);
def_int $int7 = 0;
def_int $int8 = 0;
cc_create($component0, ^iftype_graphic, $int5);
$int5 = calc($int5 + 1);
cc_setsize(35, 35, ^setsize_abs, ^setsize_abs);
cc_setposition($int4, $int7, ^setpos_abs_left, ^setpos_abs_top);
cc_setgraphic(tradebacking);
cc_settrans(100);
cc_settiling(true);
def_string $string0 = null;
if (%stat_boosts_hud_tooltips_hidden = 0) {
    $string0 = "<enum(stat, string, enum_680, $stat2)>: <tostring(stat($stat2))>/<tostring(stat_base($stat2))>";
    if (~on_enhanced_desktop = true) {
        cc_setonmouserepeat("tooltip_mouserepeat($component0, cc_getid, $component1, $string0, 0, 512)");
        cc_setonmouseleave("deltooltip($component1)");
        cc_setonclick(null);
        cc_setnoclickthrough(false);
    } else {
        cc_setonclick("stat_boosts_hud_mobile_tooltip($component0, calc($int5 - 1), $component1, $string0, 512, $component6)");
        cc_setnoclickthrough(true);
        cc_setonmouserepeat(null);
        cc_setonmouseleave(null);
    }
}
def_int $int9 = scale(75, 100, 35);
def_int $int10 = scale(75, 100, 35);
def_int $int11 = calc($int4 + (35 - $int9) / 2);
def_int $int12 = calc($int7 + (35 - $int10) / 2 - scale(5, 100, 35));
cc_create($component0, ^iftype_graphic, $int5);
$int5 = calc($int5 + 1);
cc_setsize($int9, $int10, ^setsize_abs, ^setsize_abs);
cc_setposition($int11, $int12, ^setpos_abs_left, ^setpos_abs_top);
cc_setgraphic(enum(stat, graphic, enum_255, $stat2));
def_int $int13 = 12;
def_int $int14 = 2;
def_int $int15 = calc($int7 + (35 - $int13 - $int14));
def_int $int16 = calc($int13 + $int14 * 2);
def_int $int17 = calc($int7 + (35 - $int16));
cc_create($component0, ^iftype_rectangle, $int5);
$int5 = calc($int5 + 1);
cc_setsize(35, $int16, ^setsize_abs, ^setsize_abs);
cc_setposition($int4, $int17, ^setpos_abs_left, ^setpos_abs_top);
cc_settrans(interpolate(255, 0, 0, 100, 40));
cc_setcolour(^black);
cc_settiling(true);
cc_setfill(true);
cc_create($component0, ^iftype_text, $int5);
$int5 = calc($int5 + 1);
cc_setsize(35, $int13, ^setsize_abs, ^setsize_abs);
cc_setposition($int4, $int15, ^setpos_abs_left, ^setpos_abs_top);
if (stat($stat2) < stat_base($stat2)) {
    cc_setcolour(0xff8888);
} else {
    cc_setcolour(0x93ff7a);
}
cc_settextfont(p12_full);
cc_settextshadow(true);
cc_settextalign(^settextalign_centre, ^settextalign_centre, 0);
def_string $string1 = "";
def_int $int18 = 0;
def_int $int19 = stat($stat2);
if (%last_stand_fakelevel > 0) {
    $int19 = ~script7769($stat2);
}
if (%stat_boosts_hud_display_relative = 1) {
    $int18 = calc($int19 - stat_base($stat2));
    if ($int18 > 0) {
        $string1 = "+";
    }
    $string1 = "<$string1><tostring($int18)>";
} else {
    $string1 = tostring($int19);
}
cc_settext($string1);
cc_create($component0, ^iftype_rectangle, $int5);
$int5 = calc($int5 + 1);
cc_setcolour(0x383023);
cc_setsize(35, 35, ^setsize_abs, ^setsize_abs);
cc_setposition($int4, $int7, ^setpos_abs_left, ^setpos_abs_top);
cc_create($component0, ^iftype_rectangle, $int5);
$int5 = calc($int5 + 1);
cc_setcolour(0x5a5245);
cc_setsize(calc(35 - 1), calc(35 - 1), ^setsize_abs, ^setsize_abs);
cc_setposition($int4, $int7, ^setpos_abs_left, ^setpos_abs_top);
return($int5);
