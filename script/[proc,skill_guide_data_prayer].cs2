// 2499
[proc,skill_guide_data_prayer](int $int0, int $int1)(int, obj, string)
switch_int ($int0) {
    case 0 :
        switch_int ($int1) {
            case 0 :
                return(-1, cert_pickpocket_guide_gnome, "Prayer allows you to access different prayers, available from the Prayer side panel. Each prayer offers a different powerful benefit.");
            case 1 :
                return(-1, placeholder_xmas16_ball_inflated_red, "Using prayers will drain your prayer points over time. Once you run out of prayer points, you will be unable to use any prayers. You can restore your prayer points by praying at an altar.");
            case 2 :
                return(-1, monkrobetop, "Some pieces of equipment will grant you a Prayer bonus, which will reduce the rate at which your prayer points are drained.");
            case 3 :
                return(-1, bones, "The most common way to increase your Prayer level is to offer the remains of the enemies you kill. Burying their bones and scattering their ashes will award you Prayer experience.");
        }
    case 1 :
        switch_int ($int1) {
            case 0 :
                return(oc_param(placeholder_xmas16_ball_inflated_red, param_1753), placeholder_xmas16_ball_inflated_red, "Thick Skin");
            case 1 :
                return(oc_param(xmas16_ball_inflated_green, param_1753), xmas16_ball_inflated_green, "Burst of Strength");
            case 2 :
                return(oc_param(placeholder_xmas16_ball_inflated_green, param_1753), placeholder_xmas16_ball_inflated_green, "Clarity of Thought");
            case 3 :
                return(oc_param(placeholder_xmas16_marionette_red, param_1753), placeholder_xmas16_marionette_red, "Sharp Eye");
            case 4 :
                return(oc_param(xmas16_blank_partyhat, param_1753), xmas16_blank_partyhat, "Mystic Will");
            case 5 :
                return(oc_param(xmas16_ball_inflated_blue, param_1753), xmas16_ball_inflated_blue, "Rock Skin");
            case 6 :
                return(oc_param(placeholder_xmas16_ball_inflated_blue, param_1753), placeholder_xmas16_ball_inflated_blue, "Superhuman Strength");
            case 7 :
                return(oc_param(xmas16_ball_deflated_red, param_1753), xmas16_ball_deflated_red, "Improved Reflexes");
            case 8 :
                return(oc_param(placeholder_xmas16_ball_deflated_red, param_1753), placeholder_xmas16_ball_deflated_red, "Rapid Restore");
            case 9 :
                return(oc_param(xmas16_ball_deflated_green, param_1753), xmas16_ball_deflated_green, "Rapid Heal");
            case 10 :
                return(oc_param(placeholder_xmas16_ball_deflated_green, param_1753), placeholder_xmas16_ball_deflated_green, "Protect Item");
            case 11 :
                return(oc_param(placeholder_xmas16_blank_partyhat, param_1753), placeholder_xmas16_blank_partyhat, "Hawk Eye");
            case 12 :
                return(oc_param(xmas16_red_partyhat, param_1753), xmas16_red_partyhat, "Mystic Lore");
            case 13 :
                return(oc_param(xmas16_ball_deflated_blue, param_1753), xmas16_ball_deflated_blue, "Steel Skin");
            case 14 :
                return(oc_param(placeholder_xmas16_ball_deflated_blue, param_1753), placeholder_xmas16_ball_deflated_blue, "Ultimate Strength");
            case 15 :
                return(oc_param(xmas16_marionette_unpainted, param_1753), xmas16_marionette_unpainted, "Incredible Reflexes");
            case 16 :
                return(oc_param(placeholder_xmas16_marionette_unpainted, param_1753), placeholder_xmas16_marionette_unpainted, "Protect from Magic");
            case 17 :
                return(oc_param(xmas16_marionette_blue, param_1753), xmas16_marionette_blue, "Protect from Missiles");
            case 18 :
                return(oc_param(placeholder_xmas16_marionette_blue, param_1753), placeholder_xmas16_marionette_blue, "Protect from Melee");
            case 19 :
                return(oc_param(placeholder_xmas16_red_partyhat, param_1753), placeholder_xmas16_red_partyhat, "Eagle Eye");
            case 20 :
                return(oc_param(xmas16_green_partyhat, param_1753), xmas16_green_partyhat, "Mystic Might");
            case 21 :
                return(oc_param(xmas16_marionette_green, param_1753), xmas16_marionette_green, "Members: Retribution");
            case 22 :
                return(oc_param(placeholder_xmas16_marionette_green, param_1753), placeholder_xmas16_marionette_green, "Members: Redemption");
            case 23 :
                return(oc_param(xmas16_marionette_red, param_1753), xmas16_marionette_red, "Members: Smite");
            case 24 :
                return(oc_param(placeholder_xmas16_teddy, param_1753), placeholder_xmas16_teddy, "Members: Preserve");
            case 25 :
                return(oc_param(xmas16_blue_partyhat, param_1753), xmas16_blue_partyhat, "Members: Chivalry<br> (with 65 Defence, after King's Ransom)");
            case 26 :
                return(oc_param(cert_ca_teleport_anim_offhand_easy, param_1753), cert_ca_teleport_anim_offhand_easy, "Members: Deadeye<br>(from the Royal Titans)");
            case 27 :
                return(oc_param(placeholder_giants_foundry_tester, param_1753), placeholder_giants_foundry_tester, "Members: Mystic Vigour<br>(from the Royal Titans)");
            case 28 :
                return(oc_param(placeholder_xmas16_blue_partyhat, param_1753), placeholder_xmas16_blue_partyhat, "Members: Piety<br> (with 70 Defence, after King's Ransom)");
            case 29 :
                return(oc_param(placeholder_xmas16_green_partyhat, param_1753), placeholder_xmas16_green_partyhat, "Members: Rigour<br> (with 70 Defence, from Chambers of Xeric)");
            case 30 :
                return(oc_param(xmas16_teddy, param_1753), xmas16_teddy, "Members: Augury<br> (with 70 Defence, from Chambers of Xeric)");
        }
        return(-1, null, "");
    case 2 :
        switch_int ($int1) {
            case 0 :
                return(10, basic_tk_helm, "Initiate armour<br> (after Recruitment Drive, with 20 Defence)");
            case 1 :
                return(20, basic_tk_rank2_helm, "Proselyte armour<br> (after Slug Menace, with 30 Defence)");
            case 2 :
                return(20, trail_saradomin_robe_t, "Vestment robe top");
            case 3 :
                return(20, trail_saradomin_robe_l, "Vestment robe legs");
            case 4 :
                return(22, pest_void_knight_top, "Void Knight equipment<br>(with 42 combat stats)");
            case 5 :
                return(31, holy_wraps, "Holy wraps");
            case 6 :
                return(31, holy_sandals, "Holy sandals");
            case 7 :
                return(40, trail_saradomin_cloak, "Vestment cloak");
            case 8 :
                return(40, trail_saradomin_mitre, "Vestment mitre");
            case 9 :
                return(40, soul_wars_ectoplasmator, "Ectoplasmator");
            case 10 :
                return(50, stringstar, "Use completed prayer books<br>to bless holy and unholy symbols.");
            case 11 :
                return(50, grape_blessing, "Use Bologa's grape blessings.");
            case 12 :
                return(55, spirit_shield, "Spirit Shield<br>(with 45 Defence)");
            case 13 :
                return(60, trail_saradomin_scarf, "Vestment stole");
            case 14 :
                return(60, trail_saradomin_staff, "Crozier");
            case 15 :
                return(60, blessed_spirit_shield, "Blessed spirit shield<br>(with 70 Defence)");
            case 16 :
                return(60, devout_boots, "Devout boots");
            case 17 :
                return(60, sunfire_body, "Sunfire Fanatic armour<br>(with <tostring(40)> Defence)");
            case 18 :
                return(65, 3a_druidic_top, "3rd age Druidic robes");
            case 19 :
                return(65, 3a_druidic_staff, "3rd Age Druidic staff<br>(with 65 attack)");
            case 20 :
                return(70, arcane, "Arcane & Spectral spirit shields<br>(with 75 Defence and 65 Magic)");
            case 21 :
                return(70, soul_cape_blue, "Soul cape");
            case 22 :
                return(70, dragonbone_necklace, "Dragonbone necklace");
            case 23 :
                return(70, bonecrusher_necklace, "Bonecrusher necklace");
            case 24 :
                return(75, elysian, "Elysian spirit shield<br>(with 75 Defence)");
            case 25 :
                return(80, elidinis_ward, "Elidinis' Ward<br>(with 80 Magic and 80 Defence)");
        }
        return(-1, null, "");
    case 3 :
        switch_int ($int1) {
            case 0 :
                return(30, jug_sunfire_wine_blessed, "Ralos' Rise sacrifices");
            case 1 :
                return(54, hallowed_token, "Hallowed Sepulchre - Portal sacrifice");
            case 2 :
                return(70, dragon_bones_superior, "Use superior dragon bones");
            case 3 :
                return(90, elidinis_ward_fortified, "Fortify Elidinis' Ward (with 90 Smithing)");
        }
        return(-1, null, "");
}
return(-1, null, "");
