// 6311
[proc,script6311](int $int0, component $component1, component $component2, component $component3, component $component4, enum $enum5)
def_int $intarray0(calc(enum_getoutputcount(enum_4390) + 1));
def_int $int6 = -1;
def_int $int7 = -1;
def_int $int8 = -1;
def_int $int9 = -1;
def_component $component10 = null;
def_int $int11 = 0;
def_obj $obj12 = null;
def_enum $enum13 = enum(int, enum, $enum5, $int0);
def_int $int14 = 0;
def_int $int15 = inv_size(inv_94);
while ($int14 < $int15) {
    $component10 = enum(int, component, $enum13, $int14);
    if ($component10 ! null) {
        cc_deleteall($component10);
        cc_create($component10, ^iftype_graphic, 0);
        cc_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_centre);
        cc_setsize(36, 36, ^setsize_abs, ^setsize_abs);
        cc_setgraphic("miscgraphics,0");
        cc_create($component10, ^iftype_graphic, 1);
        cc_setsize(36, 32, ^setsize_abs, ^setsize_abs);
        cc_setposition(2, 0, ^setpos_abs_centre, ^setpos_abs_centre);
        $int11 = ~script6322($int0, $int14);
        $obj12 = enum(int, namedobj, enum_4390, $int11);
        if ($obj12 ! null) {
            cc_settrans(0);
            cc_setgraphicshadow(0x333333);
            cc_setoutline(1);
            if (oc_stackable($obj12) = true) {
                cc_setobject($obj12, 5000);
            } else {
                cc_setobject($obj12, 1);
            }
            $intarray0($int11) = ~min(calc($intarray0($int11) + 1), enum(obj, int, enum_4392, $obj12));
            cc_setopbase("<col=ff9040><oc_name($obj12)></col>");
            cc_setop(1, "Discard");
            cc_setop(10, "Examine");
            cc_setonop("cc_settrans_temporarily(event_com, event_comsubid, 100, 0)");
            cc_setdraggable($component1, -1);
            cc_setondragcomplete("script6313($int0, event_com, event_comsubid, event_com2, event_comsubid2, $int11, $component1, $component2, $component3, $component4, $enum5)");
            cc_setondrag("br_loadout_hidewarning(event_com, event_comsubid, 1)");
            cc_setdragdeadzone(5);
            cc_setdragdeadtime(5);
            if (oc_param($obj12, param_1564) ! 13) {
                switch_int (oc_param($obj12, param_1562)) {
                    case 3 :
                        $int6 = ~max($int6, oc_param($obj12, param_1563));
                    case 5 :
                        $int7 = ~max($int7, oc_param($obj12, param_1563));
                    case -6 :
                        $int8 = ~max($int8, oc_param($obj12, param_1563));
                    case -7 :
                        $int9 = ~max($int9, oc_param($obj12, param_1563));
                }
            }
        } else {
            cc_settrans(255);
            cc_clearops;
            cc_create($component10, ^iftype_graphic, 2);
            cc_setsize(32, 32, ^setsize_abs, ^setsize_abs);
            cc_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_centre);
            cc_setgraphic(enum(int, graphic, enum_904, $int14));
        }
    }
    $int14 = calc($int14 + 1);
}
cc_deleteall($component2);
def_int $int16 = calc((if_getwidth($component2) - 6 - 4 * 36) / 3 + 36);
def_int $int17 = calc((if_getheight($component2) - 6 - 7 * 32) / 6 + 32);
$int14 = 0;
def_int $int18 = inv_size(inv_93);
while ($int14 < $int18) {
    $int11 = ~script6321($int0, $int14);
    $obj12 = enum(int, namedobj, enum_4390, $int11);
    cc_create($component2, ^iftype_graphic, $int14);
    cc_setposition(calc(4 + $int16 * ($int14 % 4)), calc(3 + $int17 * ($int14 / 4)), ^setpos_abs_left, ^setpos_abs_top);
    cc_setsize(36, 32, ^setsize_abs, ^setsize_abs);
    if ($obj12 ! null) {
        cc_settrans(0);
        cc_setgraphicshadow(0x333333);
        cc_setoutline(1);
        if (oc_stackable($obj12) = true) {
            cc_setobject($obj12, 5000);
        } else {
            cc_setobject($obj12, 1);
        }
        $intarray0($int11) = ~min(calc($intarray0($int11) + 1), enum(obj, int, enum_4392, $obj12));
        cc_setopbase("<col=ff9040><oc_name($obj12)></col>");
        if ($obj12 = obj_27086) {
            cc_setop(1, "Configure");
        }
        cc_setop(2, "Discard");
        cc_setop(10, "Examine");
        cc_setonop("cc_settrans_temporarily(event_com, event_comsubid, 100, 0)");
        cc_setdraggable($component1, -1);
        cc_setondragcomplete("script6313($int0, event_com, event_comsubid, event_com2, event_comsubid2, $int11, $component1, $component2, $component3, $component4, $enum5)");
        cc_setondrag("br_loadout_hidewarning(event_com, event_comsubid, $int18)");
        cc_setdragdeadzone(5);
        cc_setdragdeadtime(5);
        if (oc_param($obj12, param_1564) ! 13) {
            switch_int (oc_param($obj12, param_1562)) {
                case 3 :
                    $int6 = ~max($int6, oc_param($obj12, param_1563));
                case 5 :
                    $int7 = ~max($int7, oc_param($obj12, param_1563));
                case -6 :
                    $int8 = ~max($int8, oc_param($obj12, param_1563));
                case -7 :
                    $int9 = ~max($int9, oc_param($obj12, param_1563));
            }
        }
    } else {
        cc_settrans(255);
        cc_clearops;
    }
    $int14 = calc($int14 + 1);
}
def_int $int19 = $int14;
def_int $int20 = 0;
def_int $int21 = 0;
def_int $int22 = 0;
def_int $int23 = 0;
def_int $int24 = 0;
def_int $int25 = 0;
def_int $int26 = 0;
def_int $int27 = 0;
def_int $int28 = 0;
def_int $int29 = 0;
def_int $int30 = 0;
def_int $int31 = 0;
$int24, $int25, $int26, $int27, $int28, $int29, $int30, $int31 = ~script6335($int0);
def_int $intarray1(calc(23 + 1));
def_int $int32 = 23;
while ($int32 > 0) {
    switch_int ($int32) {
        case 1 :
            $intarray1($int32) = $int24;
        case 2 :
            $intarray1($int32) = $int25;
        case 3 :
            $intarray1($int32) = $int26;
        case 4 :
            $intarray1($int32) = $int27;
        case 5 :
            $intarray1($int32) = $int28;
        case 6 :
            $intarray1($int32) = $int29;
        case 7 :
            $intarray1($int32) = $int30;
        case default :
            $intarray1($int32) = $int31;
    }
    $int32 = calc($int32 - 1);
}
$int14 = $int15;
while ($int14 > 0) {
    $int14 = calc($int14 - 1);
    $component10 = enum(int, component, $enum13, $int14);
    if ($component10 ! null) {
        $int11 = ~script6322($int0, $int14);
        $obj12 = enum(int, namedobj, enum_4390, $int11);
        if ($obj12 ! null) {
            $int20 = 0;
            if ($intarray0($int11) > 0) {
                $intarray0($int11) = calc($intarray0($int11) - 1);
            } else {
                $int20, $int23 = 1, 1;
            }
            if (oc_param($obj12, param_434) ! null & oc_param($obj12, param_436) > $intarray1(enum(stat, int, enum_81, oc_param($obj12, param_434))) | oc_param($obj12, param_435) ! null & oc_param($obj12, param_437) > $intarray1(enum(stat, int, enum_81, oc_param($obj12, param_435))) | oc_param($obj12, param_191) ! null & oc_param($obj12, param_613) > $intarray1(enum(stat, int, enum_81, oc_param($obj12, param_191))) | oc_param($obj12, param_579) ! null & oc_param($obj12, param_614) > $intarray1(enum(stat, int, enum_81, oc_param($obj12, param_579))) | oc_param($obj12, param_610) ! null & oc_param($obj12, param_615) > $intarray1(enum(stat, int, enum_81, oc_param($obj12, param_610))) | oc_param($obj12, param_611) ! null & oc_param($obj12, param_616) > $intarray1(enum(stat, int, enum_81, oc_param($obj12, param_611))) | oc_param($obj12, param_612) ! null & oc_param($obj12, param_617) > $intarray1(enum(stat, int, enum_81, oc_param($obj12, param_612)))) {
                $int20, $int21 = 1, 1;
            }
            if (oc_param($obj12, param_1564) = 13) {
                switch_int (oc_param($obj12, param_1562)) {
                    case 3 :
                        if ($int6 < oc_param($obj12, param_1563)) {
                            $int20, $int22 = 1, 1;
                        }
                    case 5 :
                        if ($int7 < oc_param($obj12, param_1563)) {
                            $int20, $int22 = 1, 1;
                        }
                    case -6 :
                        if ($int8 < oc_param($obj12, param_1563)) {
                            $int20, $int22 = 1, 1;
                        }
                    case -7 :
                        if ($int9 < oc_param($obj12, param_1563)) {
                            $int20, $int22 = 1, 1;
                        }
                }
            }
            if ($int20 = 1) {
                cc_create($component10, ^iftype_model, 2);
                cc_setsize(36, 32, ^setsize_abs, ^setsize_abs);
                cc_setposition(1, 0, ^setpos_abs_centre, ^setpos_abs_centre);
                cc_setmodel(model_7669);
                cc_setmodelangle(0, 0, 512, 512, 0, 1800);
            }
        }
    }
}
$int14 = 0;
while ($int14 < $int18) {
    cc_create($component2, ^iftype_model, $int19);
    $int19 = calc($int19 + 1);
    $int11 = ~script6321($int0, $int14);
    $obj12 = enum(int, namedobj, enum_4390, $int11);
    if ($obj12 ! null) {
        $int20 = 0;
        if ($intarray0($int11) > 0) {
            $intarray0($int11) = calc($intarray0($int11) - 1);
        } else {
            $int20, $int23 = 1, 1;
        }
        if (oc_param($obj12, param_434) ! null & oc_param($obj12, param_436) > $intarray1(enum(stat, int, enum_81, oc_param($obj12, param_434))) | oc_param($obj12, param_435) ! null & oc_param($obj12, param_437) > $intarray1(enum(stat, int, enum_81, oc_param($obj12, param_435))) | oc_param($obj12, param_191) ! null & oc_param($obj12, param_613) > $intarray1(enum(stat, int, enum_81, oc_param($obj12, param_191))) | oc_param($obj12, param_579) ! null & oc_param($obj12, param_614) > $intarray1(enum(stat, int, enum_81, oc_param($obj12, param_579))) | oc_param($obj12, param_610) ! null & oc_param($obj12, param_615) > $intarray1(enum(stat, int, enum_81, oc_param($obj12, param_610))) | oc_param($obj12, param_611) ! null & oc_param($obj12, param_616) > $intarray1(enum(stat, int, enum_81, oc_param($obj12, param_611))) | oc_param($obj12, param_612) ! null & oc_param($obj12, param_617) > $intarray1(enum(stat, int, enum_81, oc_param($obj12, param_612)))) {
            $int20, $int21 = 1, 1;
        }
        if (oc_param($obj12, param_1564) = 13) {
            switch_int (oc_param($obj12, param_1562)) {
                case 3 :
                    if ($int6 < oc_param($obj12, param_1563)) {
                        $int20, $int22 = 1, 1;
                    }
                case 5 :
                    if ($int7 < oc_param($obj12, param_1563)) {
                        $int20, $int22 = 1, 1;
                    }
                case -6 :
                    if ($int8 < oc_param($obj12, param_1563)) {
                        $int20, $int22 = 1, 1;
                    }
                case -7 :
                    if ($int9 < oc_param($obj12, param_1563)) {
                        $int20, $int22 = 1, 1;
                    }
            }
        }
        if ($int20 = 1) {
            cc_sethide(false);
            cc_setsize(36, 32, ^setsize_abs, ^setsize_abs);
            cc_setposition(calc(4 + $int16 * ($int14 % 4)), calc(3 + $int17 * ($int14 / 4)), ^setpos_abs_left, ^setpos_abs_top);
            cc_setmodel(model_7669);
            cc_setmodelangle(0, 0, 512, 512, 0, 1800);
        } else {
            cc_sethide(true);
        }
    } else {
        cc_sethide(true);
    }
    $int14 = calc($int14 + 1);
}
$int19 = ~thinbox($component2, $int19);
if ($int21 = 1) {
    if_settextfont(p11_full, $component4);
    if_setcolour(~tob_hud_nameflasher, $component4);
    if_setontimer("tob_hud_nameflasher($component4)", $component4);
    if_settext("This build's stats will not permit you to equip some of your items.", $component4);
} else if ($int23 = 1) {
    if_settextfont(p11_full, $component4);
    if_setcolour(~tob_hud_nameflasher, $component4);
    if_setontimer("tob_hud_nameflasher($component4)", $component4);
    if_settext("Your load-out contains too many of certain items - please discard some.", $component4);
} else if ($int22 = 1) {
    if_settextfont(p11_full, $component4);
    if_setcolour(~tob_hud_nameflasher, $component4);
    if_setontimer("tob_hud_nameflasher($component4)", $component4);
    if_settext("You have some ammo that cannot be fired by any of your weaponry.", $component4);
} else {
    if_settextfont(p12_full, $component4);
    if_setcolour(0xff981f, $component4);
    if_setontimer(null, $component4);
    if_settext("This build's stats should allow you to equip these items.", $component4);
}
