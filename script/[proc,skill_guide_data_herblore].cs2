// 7886
[proc,skill_guide_data_herblore](int $int0, int $int1)(int, obj, string)
def_string $string0 = "";
if (%option_skill_guide = 0) {
    $string0 = "<col=6f0000>";
} else {
    $string0 = "<col=ffffff>";
}
switch_int ($int0) {
    case 0 :
        switch_int ($int1) {
            case 0 :
                return(-1, 3dose1attack, "You must complete the Druidic Ritual quest before you can use Herblore.");
            case 1 :
                return(-1, eye_of_newt, "Herblore allows you to make potions with herbs and ingredients found across Gielinor.");
            case 2 :
                return(-1, unidentified_guam, "To make a potion, you first need to clean a grimy herb, then combine it with a vial of water to make an unfinished potion. You can then add the secondary ingredient(s) to complete the potion.");
        }
    case 1 :
        switch_int ($int1) {
            case 0 :
                return(-1, invis_rod, "You must complete the Druidic Ritual quest before you can use Herblore.");
            case 1 :
                return(3, eye_of_newt, "Attack potion<br>Guam leaf & eye of newt");
            case 2 :
                return(5, unicorn_horn_dust, "Anti-poison potion<br>Marrentill & ground unicorn horn");
            case 3 :
                return(8, rogues_purse, "Relicym's balm");
            case 4 :
                return(12, limpwurt_root, "Strength potion<br>Tarromin & limpwurt root");
            case 5 :
                return(15, ashes, "Serum 207<br>Tarromin & ashes");
            case 6 :
                return(19, salamander_tar_green, "Guam tar<br>Guam leaf & swamp tar");
            case 7 :
                return(22, fossil_volcanic_ash, "Compost potion<br>Harralander & volcanic ash");
            case 8 :
                return(22, red_spiders_eggs, "Stat restore potion<br>Harralander & red spiders' eggs");
            case 9 :
                return(22, garlic, "Guthix balance potion<br>Restore potion, garlic & silver dust");
            case 10 :
                return(26, chocolate_dust, "Energy potion<br>Harralander & chocolate dust");
            case 11 :
                return(30, white_berries, "Defence potion<br>Ranarr weed & white berries");
            case 12 :
                return(31, salamander_tar_orange, "Marrentill tar<br>Marrentill & swamp tar");
            case 13 :
                return(34, toads_legs, "Agility potion<br>Toadflax & toad legs");
            case 14 :
                return(36, ground_desert_goat_horn, "Combat potion<br>Harralander & ground desert goat horn");
            case 15 :
                return(38, snape_grass, "Prayer restore potion<br>Ranarr weed & snape grass");
            case 16 :
                return(38, moonlight_grub, "Moonlight Potion<br>Vial of water & Moonlight grub paste");
            case 17 :
                return(39, salamander_tar_red, "Tarromin tar<br>Tarromin & swamp tar");
            case 18 :
                return(44, salamander_tar_black, "Harralander tar<br>Harralander & swamp tar");
            case 19 :
                return(45, eye_of_newt, "Super attack potion<br>Irit leaf & eye of newt");
            case 20 :
                return(48, unicorn_horn_dust, "Super anti-poison potion<br>Irit leaf & ground unicorn horn");
            case 21 :
                return(50, snape_grass, "Fishing potion<br>Avantoe & snape grass");
            case 22 :
                return(52, mortmyremushroom, "Super energy potion<br>Avantoe & Mort Myre fungi");
            case 23 :
                return(53, huntingbeast_sabreteeth, "Hunting potion - Avantoe & ground sabre-toothed kebbit teeth");
            case 24 :
                return(54, aldarium, "Goading potion<br>Harralander & aldarium");
            case 25 :
                return(55, limpwurt_root, "Super strength potion<br>Kwuarm & limpwurt root");
            case 26 :
                return(55, salamander_tar_mountain, "Irit tar<br>Irit leaf & swamp tar");
            case 27 :
                return(57, fairytale2_gorak_claws, "Magic essence potion<br>Star flower & ground gorak's claw");
            case 28 :
                return(58, aldarium, "Prayer regeneration potion<br>Huasca & aldarium");
            case 29 :
                return(60, dragon_scale_dust, "Weapon poison<br>Kwuarm & ground blue dragon scale");
            case 30 :
                return(63, red_spiders_eggs, "Super restore potion<br>Snapdragon & red spiders' eggs");
            case 31 :
                return(65, nail_beast_nail, "Sanfew serum cure all<br>Super restore potion, snake weed, ground unicorn horn and nail beast nails.");
            case 32 :
                return(66, white_berries, "Super defence potion<br>Cadantine & white berries");
            case 33 :
                return(68, yew_roots, "Antidote+<br>Coconut milk, toadflax & yew roots");
            case 34 :
                return(69, dragon_scale_dust, "Anti-firebreath potion<br>Lantadyme & ground blue dragon scale");
            case 35 :
                return(70, prif_crystal_shard_crushed, "Divine super attack potion<br>Crystal dust & super attack potion");
            case 36 :
                return(70, prif_crystal_shard_crushed, "Divine super strength potion<br>Crystal dust & super strength potion");
            case 37 :
                return(70, prif_crystal_shard_crushed, "Divine super defence potion<br>Crystal dust & super defence potion");
            case 38 :
                return(72, wine_of_zamorak, "Ranging potion<br>Dwarf weed & wine of Zamorak");
            case 39 :
                return(73, cactus_spine, "Weapon poison(+)<br>Coconut milk, cactus spine & red spiders' eggs");
            case 40 :
                return(74, prif_crystal_shard_crushed, "Divine ranging potion<br>Crystal dust & ranging potion");
            case 41 :
                return(76, cactus_potato, "Magic potion<br>Lantadyme & potato cactus");
            case 42 :
                return(77, cert_reinitialisation_05_inactive, "Stamina potion<br>Amylase & super energy potion");
            case 43 :
                return(78, jangerberries, "Zamorak brew<br>Torstol & jangerberries");
            case 44 :
                return(78, prif_crystal_shard_crushed, "Divine magic potion<br>Crystal dust & magic potion");
            case 45 :
                return(79, magic_roots, "Antidote++<br>Coconut milk, irit leaf & magic tree roots");
            case 46 :
                return(80, wine_of_zamorak, "Bastion potion<br>Cadantine & wine of Zamorak mixed in a vial of blood");
            case 47 :
                return(80, cactus_potato, "Battlemage potion<br>Cadantine & potato cactus mixed in a vial of blood");
            case 48 :
                return(81, crushed_bird_nest, "Saradomin brew<br>Toadflax & crushed birdnest");
            case 49 :
                return(81, demonic_tallow, "Surge potion<br>Torstol & demonic tallow");
            case 50 :
                return(82, poisonivy_berries, "Weapon poison(++)<br>Coconut milk, nightshade & poison ivy berries");
            case 51 :
                return(84, cert_pickpocket_guide_paladin, "Extended antifire potion<br>Antifire potion & lava scale shards");
            case 52 :
                return(85, nihil_dust, "Ancient brew<br>Dwarf weed & nihil dust");
            case 53 :
                return(86, prif_crystal_shard_crushed, "Divine bastion potion<br>Crystal dust & bastion potion");
            case 54 :
                return(86, prif_crystal_shard_crushed, "Divine battlemage potion<br>Crystal dust & battlemage potion");
            case 55 :
                return(87, cert_reinitialisation_23_inactive, "Anti-venom<br>Antidote++ & Zulrah's scales");
            case 56 :
                return(88, lily_of_the_sands, "Menaphite remedy<br>Dwarf weed & Lily of the sands");
            case 57 :
                return(90, torstol, "Super combat potion<br>Super attack potion, super defence potion, super strength potion & torstol");
            case 58 :
                return(91, ancient_essence, "Forgotten brew<br>Ancient brew & ancient essence");
            case 59 :
                return(92, crushed_dragon_bones, "Super antifire potion<br>Antifire potion & crushed superior dragon bones<br>(after Dragon Slayer II)");
            case 60 :
                return(94, torstol, "Anti-venom+<br>Anti-venom & Torstol");
            case 61 :
                return(94, araxyte_venom_sack, "Extended anti-venom+<br>Anti-venom+ & <oc_name(araxyte_venom_sack)>");
            case 62 :
                return(97, prif_crystal_shard_crushed, "Divine super combat potion<br>Crystal dust & super combat potion");
            case 63 :
                return(98, cert_pickpocket_guide_paladin, "Extended super antifires<br>Super antifire potion & lava scale shards<br>(after Dragon Slayer II)");
        }
        return(-1, null, "");
    case 2 :
        switch_int ($int1) {
            case 0 :
                return(3, guam_leaf, "Guam leaf");
            case 1 :
                return(3, rogues_purse, "Rogue's purse");
            case 2 :
                return(3, snake_weed, "Snake weed");
            case 3 :
                return(5, marentill, "Marrentill");
            case 4 :
                return(11, tarromin, "Tarromin");
            case 5 :
                return(20, harralander, "Harralander");
            case 6 :
                return(25, ranarr_weed, "Ranarr weed");
            case 7 :
                return(30, toadflax, "Toadflax");
            case 8 :
                return(40, irit_leaf, "Irit leaf");
            case 9 :
                return(48, avantoe, "Avantoe");
            case 10 :
                return(54, kwuarm, "Kwuarm");
            case 11 :
                return(58, huasca, "Huasca");
            case 12 :
                return(59, snapdragon, "Snapdragon");
            case 13 :
                return(65, cadantine, "Cadantine");
            case 14 :
                return(67, lantadyme, "Lantadyme");
            case 15 :
                return(70, dwarf_weed, "Dwarf weed");
            case 16 :
                return(75, torstol, "Torstol");
        }
        return(-1, null, "");
    case 3 :
        switch_int ($int1) {
            case 0 :
                return(-1, invis_rod, "You must complete barbarian herblore training before you can make these potions.");
            case 1 :
                return(4, brutal_2dose1attack, "Attack mix");
            case 2 :
                return(6, brutal_2doseantipoison, "Antipoison mix");
            case 3 :
                return(9, brutal_relicyms_balm2, "Relicym's mix");
            case 4 :
                return(14, brutal_2dose1strength, "Strength mix");
            case 5 :
                return(24, brutal_2dosestatrestore, "Restore mix");
            case 6 :
                return(29, brutal_2dose1energy, "Energy mix");
            case 7 :
                return(33, brutal_2dose1defense, "Defence mix");
            case 8 :
                return(37, brutal_2dose1agility, "Agility mix");
            case 9 :
                return(40, brutal_2dosecombat, "Combat mix");
            case 10 :
                return(42, brutal_2doseprayerrestore, "Prayer mix");
            case 11 :
                return(47, brutal_2dose2attack, "Super attack mix");
            case 12 :
                return(51, brutal_2dose2antipoison, "Anti-poison supermix");
            case 13 :
                return(53, brutal_2dosefisherspotion, "Fishing mix");
            case 14 :
                return(56, brutal_2dose2energy, "Super energy mix");
            case 15 :
                return(58, brutal_2dose1hunting, "Hunting mix");
            case 16 :
                return(59, brutal_2dose2strength, "Super strength mix");
            case 17 :
                return(61, brutal_2dosemagicess, "Magic essence mix");
            case 18 :
                return(67, brutal_2dose2restore, "Super restore mix");
            case 19 :
                return(71, brutal_2dose2defense, "Super defence mix");
            case 20 :
                return(74, "brutal_antidote+2", "Antidote+ mix");
            case 21 :
                return(75, brutal_2dose1antidragon, "Antifire mix");
            case 22 :
                return(80, brutal_2doserangerspotion, "Ranging mix");
            case 23 :
                return(83, brutal_2dose1magic, "Magic mix");
            case 24 :
                return(85, brutal_2dosepotionofzamorak, "Zamorak mix");
            case 25 :
                return(86, brutal_2dosestamina, "Stamina mix");
            case 26 :
                return(91, brutal_2dose2antidragon, "Extended antifire mix");
            case 27 :
                return(92, brutal_2doseancientbrew, "Ancient mix");
            case 28 :
                return(98, brutal_2dose3antidragon, "Super antifire mix");
            case 29 :
                return(99, brutal_2dose4antidragon, "Extended super antifire mix");
        }
        return(-1, null, "");
    case 4 :
        switch_int ($int1) {
            case 0 :
                return(-1, invis_rod, "Potions may be <$string0>strong</col>, <$string0>standard</col> or <$string0>weak</col>, depending on your Herblore level.");
            case 1 :
                return(47, raids_golpar, "Weak Golpar potions:");
            case 2 :
                return(scale(126, 100, 47), raids_golpar, "Standard Golpar potions");
            case 3 :
                return(scale(150, 100, 47), raids_golpar, "Strong Golpar potions");
            case 4 :
                return(-1, raids_vial_elder_4, "Elder potions<br> with Stinkhorn mushroom");
            case 5 :
                return(-1, raids_vial_kodai_4, "Kodai potions<br> with Endarkened juice");
            case 6 :
                return(-1, raids_vial_twisted_4, "Twisted potions<br> with Cicely");
            case 7 :
                return(52, raids_buchuleaf, "Weak Buchu leaf potions:");
            case 8 :
                return(scale(126, 100, 52), raids_buchuleaf, "Standard Buchu leaf potions");
            case 9 :
                return(scale(150, 100, 52), raids_buchuleaf, "Strong Buchu leaf potions");
            case 10 :
                return(-1, raids_vial_revitalisation_4, "Revitalisation potions<br> with Stinkhorn mushroom");
            case 11 :
                return(-1, raids_vial_xericaid_4, "Xeric's Aid potions<br> with Endarkened juice");
            case 12 :
                return(-1, raids_vial_prayer_4, "Prayer enhance potions<br> with Cicely");
            case 13 :
                return(60, raids_noxifer, "Weak Noxifer potions:");
            case 14 :
                return(scale(126, 100, 60), raids_noxifer, "Standard Noxifer potions");
            case 15 :
                return(scale(150, 100, 60), raids_noxifer, "Strong Noxifer potions");
            case 16 :
                return(-1, raids_vial_antipoison_4, "Antipoison potions<br> with Cicely");
            case 17 :
                return(-1, raids_vial_overload_4, "Overload<br> with Elder, Kodai & Twisted potions");
            case 18 :
                return(-1, raids_vial_overload_strong_4, "For overload potions, the tier is capped at the tier of the potions used to make it.");
        }
        return(-1, null, "");
    case 5 :
        switch_int ($int1) {
            case 0 :
                return(31, huntguide_herbiboar, "Harvest herbs from the <$string0>Herbiboar</col> on <$string0>Fossil Island</col> (with 80 Hunter).");
            case 1 :
                return(58, slayer_herb_sack, "Use the Herb Sack reward item, purchased from the Tithe Farm or Slayer Masters.");
            case 2 :
                return(60, mm_potion_mmm_unfinished, "<oc_name(mm_potion_mmm_unfinished)> (Mastering Mixology).");
            case 3 :
                return(60, mm_potion_aaa_unfinished, "<oc_name(mm_potion_aaa_unfinished)> (Mastering Mixology).");
            case 4 :
                return(60, mm_potion_lll_unfinished, "<oc_name(mm_potion_lll_unfinished)> (Mastering Mixology).");
            case 5 :
                return(63, mm_potion_mma_unfinished, "<oc_name(mm_potion_mma_unfinished)> (Mastering Mixology).");
            case 6 :
                return(66, mm_potion_mml_unfinished, "<oc_name(mm_potion_mml_unfinished)> (Mastering Mixology).");
            case 7 :
                return(69, mm_potion_aam_unfinished, "<oc_name(mm_potion_aam_unfinished)> (Mastering Mixology).");
            case 8 :
                return(72, mm_potion_aal_unfinished, "<oc_name(mm_potion_aal_unfinished)> (Mastering Mixology).");
            case 9 :
                return(75, mm_potion_llm_unfinished, "<oc_name(mm_potion_llm_unfinished)> (Mastering Mixology).");
            case 10 :
                return(78, mm_potion_lla_unfinished, "<oc_name(mm_potion_lla_unfinished)> (Mastering Mixology).");
            case 11 :
                return(81, mm_potion_mal_unfinished, "<oc_name(mm_potion_mal_unfinished)> (Mastering Mixology).");
            case 12 :
                return(81, mm_secondary_pouch, "Use the Secondary Pouch reward item, purchased from the Mastering Mixology activity.");
        }
        return(-1, null, "");
}
return(-1, null, "");
