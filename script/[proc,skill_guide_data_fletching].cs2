// 7884
[proc,skill_guide_data_fletching](int $int0, int $int1)(int, obj, string)
def_string $string0 = "";
if (%option_skill_guide = 0) {
    $string0 = "<col=6f0000>";
} else {
    $string0 = "<col=ffffff>";
}
switch_int ($int0) {
    case 0 :
        switch_int ($int1) {
            case 0 :
                return(-1, feather, "Fletching allows you to create various ranged weapons, as well as ammunition to go with them.");
            case 1 :
                return(-1, bow_string, "Making bows requires bowstring, which can be made from flax at a spinning wheel. You can use a knife on some logs to carve an unfinished bow, then add the bowstring to complete the weapon.");
            case 2 :
                return(-1, headless_arrow_5, "To create arrows, you'll first need to carve logs into arrow shafts with a knife, then tip the arrow shafts with feathers. Finally, you'll need to add some arrow heads.");
            case 3 :
                return(-1, xbows_crossbow_bolts_mithril_unfeathered_3, "To make bolts, you only need to combine unfinished bolts with feathers. You can also chisel gemstones down into bolt tips, with each gemstone being able to top a different bolt.");
        }
    case 1 :
        switch_int ($int1) {
            case 0 :
                return(1, arrow_shaft_5, "15 Arrow shafts (Logs)");
            case 1 :
                return(1, bronze_arrow, "Bronze arrows");
            case 2 :
                return(7, zogre_brutal_bronze, "Bronze 'brutal' arrows");
            case 3 :
                return(15, arrow_shaft_5, "30 Arrow shafts (Oak logs)");
            case 4 :
                return(15, iron_arrow, "Iron arrows");
            case 5 :
                return(18, zogre_brutal_iron, "Iron 'brutal' arrows");
            case 6 :
                return(30, arrow_shaft_5, "45 Arrow shafts (Willow logs)");
            case 7 :
                return(30, steel_arrow, "Steel arrows");
            case 8 :
                return(33, zogre_brutal_steel, "Steel 'brutal' arrows");
            case 9 :
                return(38, zogre_brutal_black, "Black 'brutal' arrows");
            case 10 :
                return(45, arrow_shaft_5, "60 Arrow shafts (Maple logs)");
            case 11 :
                return(45, mithril_arrow, "Mithril arrows");
            case 12 :
                return(49, zogre_brutal_mithril, "Mithril 'brutal' arrows");
            case 13 :
                return(52, slayer_broad_arrows, "Broad arrows");
            case 14 :
                return(60, arrow_shaft_5, "75 Arrow shafts (Yew logs)");
            case 15 :
                return(60, adamant_arrow, "Adamant arrows");
            case 16 :
                return(62, zogre_brutal_adamant, "Adamant 'brutal' arrows");
            case 17 :
                return(74, atlatl_dart, "Atlatl darts");
            case 18 :
                return(75, arrow_shaft_5, "90 Arrow shafts (Magic logs)");
            case 19 :
                return(75, rune_arrow, "Rune arrows");
            case 20 :
                return(77, zogre_brutal_rune, "Rune 'brutal' arrows");
            case 21 :
                return(82, amethyst_arrow, "Amethyst arrows");
            case 22 :
                return(90, arrow_shaft_5, "105 Arrow shafts (Redwood logs)");
            case 23 :
                return(90, dragon_arrow, "Dragon arrows");
        }
        return(-1, null, "");
    case 2 :
        switch_int ($int1) {
            case 0 :
                return(5, shortbow, "Shortbows");
            case 1 :
                return(10, longbow, "Longbows");
            case 2 :
                return(20, oak_shortbow, "Oak shortbows");
            case 3 :
                return(25, oak_longbow, "Oak longbows");
            case 4 :
                return(30, zogre_bow, "Ogre composite bows");
            case 5 :
                return(35, rat_bone_bow, "Bone shortbow");
            case 6 :
                return(35, willow_shortbow, "Willow shortbows");
            case 7 :
                return(40, willow_longbow, "Willow longbows");
            case 8 :
                return(50, maple_shortbow, "Maple shortbows");
            case 9 :
                return(55, maple_longbow, "Maple longbows");
            case 10 :
                return(65, yew_shortbow, "Yew shortbows");
            case 11 :
                return(70, yew_longbow, "Yew longbows");
            case 12 :
                return(74, scorching_bow, "Scorching bows");
            case 13 :
                return(80, magic_shortbow, "Magic shortbows");
            case 14 :
                return(85, magic_longbow, "Magic longbows");
            case 15 :
                return(85, wild_cave_webweaver_charged, "Webweaver bow");
        }
        return(-1, null, "");
    case 3 :
        switch_int ($int1) {
            case 0 :
                return(9, bolt, "Bronze bolts");
            case 1 :
                return(11, opal_bolt, "Opal-tipped bronze bolts");
            case 2 :
                return(24, xbows_crossbow_bolts_blurite, "Blurite bolts<br>(after Knight's Sword quest)");
            case 3 :
                return(26, xbows_crossbow_bolts_blurite_tipped_jade, "Jade-tipped blurite bolts");
            case 4 :
                return(32, huntingbow_bolts, "Kebbit-tipped hunting bolts");
            case 5 :
                return(39, xbows_crossbow_bolts_iron, "Iron bolts");
            case 6 :
                return(41, pearl_bolt, "Pearl-tipped iron bolts");
            case 7 :
                return(42, huntingbow_bigbolts, "Long kebbit-tipped hunting bolts");
            case 8 :
                return(43, xbows_crossbow_bolts_silver, "Silver bolts");
            case 9 :
                return(46, xbows_crossbow_bolts_steel, "Steel bolts");
            case 10 :
                return(48, xbows_crossbow_bolts_steel_tipped_redtopaz, "Red topaz-tipped steel bolts");
            case 11 :
                return(51, barbed_bolt, "Barbed-tipped bolts");
            case 12 :
                return(54, xbows_crossbow_bolts_mithril, "Mithril bolts");
            case 13 :
                return(55, slayer_broad_bolt, "Broad bolts");
            case 14 :
                return(56, xbows_crossbow_bolts_mithril_tipped_sapphire, "Sapphire-tipped mithril bolts");
            case 15 :
                return(58, xbows_crossbow_bolts_mithril_tipped_emerald, "Emerald-tipped mithril bolts");
            case 16 :
                return(59, xbows_grapple_tip_bolt_mithril, "Mithril grapple-tipped bolts");
            case 17 :
                return(61, xbows_crossbow_bolts_adamantite, "Adamantite bolts");
            case 18 :
                return(62, sunlight_antelope_bolt, "Sunlight bolts");
            case 19 :
                return(63, xbows_crossbow_bolts_adamantite_tipped_ruby, "Ruby-tipped adamantite bolts");
            case 20 :
                return(65, xbows_crossbow_bolts_adamantite_tipped_diamond, "Diamond-tipped adamantite bolts");
            case 21 :
                return(69, xbows_crossbow_bolts_runite, "Runite bolts");
            case 22 :
                return(71, xbows_crossbow_bolts_runite_tipped_dragonstone, "Dragonstone-tipped runite bolts");
            case 23 :
                return(72, moonlight_antelope_bolt, "Moonlight bolts");
            case 24 :
                return(73, xbows_crossbow_bolts_runite_tipped_onyx, "Onyx-tipped runite bolts");
            case 25 :
                return(76, slayer_broad_bolt_amethyst, "Amethyst broad bolts");
            case 26 :
                return(84, dragon_bolts, "Dragon bolts");
        }
        return(-1, null, "");
    case 4 :
        switch_int ($int1) {
            case 0 :
                return(10, bronze_dart, "Bronze darts");
            case 1 :
                return(22, iron_dart, "Iron darts");
            case 2 :
                return(37, steel_dart, "Steel darts");
            case 3 :
                return(52, mithril_dart, "Mithril darts");
            case 4 :
                return(67, adamant_dart, "Adamant darts");
            case 5 :
                return(78, toxic_blowpipe_loaded, "Toxic blowpipe");
            case 6 :
                return(81, rune_dart, "Rune darts");
            case 7 :
                return(90, amethyst_dart, "Amethyst darts");
            case 8 :
                return(95, dragon_dart, "Dragon darts");
        }
        return(-1, null, "");
    case 5 :
        switch_int ($int1) {
            case 0 :
                return(9, xbows_crossbow_stock_wood, "Bronze/wooden crossbows");
            case 1 :
                return(24, xbows_crossbow_stock_oak, "Blurite/oak crossbows<br>(after Knight's Sword quest)");
            case 2 :
                return(39, xbows_crossbow_stock_willow, "Iron/willow crossbows");
            case 3 :
                return(46, xbows_crossbow_stock_teak, "Steel/teak crossbows");
            case 4 :
                return(54, xbows_crossbow_stock_maple, "Mithril/maple crossbows");
            case 5 :
                return(61, xbows_crossbow_stock_mahogany, "Adamantite/mahogany crossbows");
            case 6 :
                return(69, xbows_crossbow_stock_yew, "Runite/yew crossbows");
            case 7 :
                return(74, hunting_crossbow_sunlight, "Sunlight hunters' crossbow");
            case 8 :
                return(78, xbows_crossbow_stock_magic, "Dragon/magic crossbows");
        }
        return(-1, null, "");
    case 6 :
        switch_int ($int1) {
            case 0 :
                return(3, bronze_javelin, "Bronze javelins");
            case 1 :
                return(17, iron_javelin, "Iron javelins");
            case 2 :
                return(32, steel_javelin, "Steel javelins");
            case 3 :
                return(47, light_ballista, "Light ballistae");
            case 4 :
                return(47, mithril_javelin, "Mithril javelins");
            case 5 :
                return(62, adamant_javelin, "Adamant javelins");
            case 6 :
                return(72, heavy_ballista, "Heavy ballistae");
            case 7 :
                return(77, rune_javelin, "Rune javelins");
            case 8 :
                return(84, amethyst_javelin, "Amethyst javelins");
            case 9 :
                return(92, dragon_javelin, "Dragon javelins");
        }
        return(-1, null, "");
    case 7 :
        switch_int ($int1) {
            case 0 :
                return(27, oak_shield, "Oak shield");
            case 1 :
                return(42, willow_shield, "Willow shield");
            case 2 :
                return(57, maple_shield, "Maple shield");
            case 3 :
                return(72, yew_shield, "Yew shield");
            case 4 :
                return(87, magic_shield, "Magic shield");
            case 5 :
                return(92, redwood_shield, "Redwood shield");
        }
        return(-1, null, "");
    case 8 :
        switch_int ($int1) {
            case 0 :
                return(20, oak_logs, "Oak vale totems");
            case 1 :
                return(35, willow_logs, "Willow vale totems");
            case 2 :
                return(50, maple_logs, "Maple vale totems");
            case 3 :
                return(65, yew_logs, "Yew vale totems");
            case 4 :
                return(80, magic_logs, "Magic vale totems");
            case 5 :
                return(90, redwood_logs, "Redwood vale totems");
        }
    case 9 :
        switch_int ($int1) {
            case 0 :
                return(40, battlestaff, "Battlestaves");
            case 1 :
                return(53, greenman_statue, "Greenman statue");
            case 2 :
                return(60, hg_hunter_spear, "Hunter's spears");
            case 3 :
                return(79, greenman_wall_decoration, "Greenman carving");
            case 4 :
                return(90, redwood_hiking_staff, "Redwood hiking staff");
        }
        return(-1, null, "");
}
return(-1, null, "");
