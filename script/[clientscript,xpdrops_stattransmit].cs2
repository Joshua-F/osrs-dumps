// 1004
[clientscript,xpdrops_stattransmit](boolean $boolean0, component $component1, component $component2, component $component3, component $component4, component $component5, component $component6, component $component7, component $component8, component $component9, int $int10, int $int11, int $int12, int $int13, int $int14, int $int15, int $int16, int $int17, int $int18, int $int19, int $int20, int $int21, int $int22, int $int23, int $int24, int $int25, int $int26, int $int27, int $int28, int $int29, int $int30, int $int31, int $int32, int $int33)
if ($boolean0 = true & %xpdrops_fake_skill_0 = -1) {
    return;
}
def_int $int34 = calc(23 + 1);
def_stat $statarray0($int34);
def_int $intarray1($int34);
def_int $int35 = 0;
def_int $int36 = 0;
if ($boolean0 = true) {
    while (%xpdrops_fake_skill_0 ! -1) {
        if (%xpdrops_fake_xp_0 = -10) {
            ~xpdrops_showpanel($component1, $component3, $component8, $component9);
        } else {
            $statarray0($int35) = enum(int, stat, enum_681, %xpdrops_fake_skill_0);
            $intarray1($int35) = %xpdrops_fake_xp_0;
            if ($statarray0($int35) ! null & $intarray1($int35) > 0) {
                $int35 = calc($int35 + 1);
            }
        }
        %xpdrops_fake_skill_0, %xpdrops_fake_skill_1, %xpdrops_fake_skill_2, %xpdrops_fake_skill_3, %xpdrops_fake_skill_4, %xpdrops_fake_skill_5, %xpdrops_fake_skill_6 = %xpdrops_fake_skill_1, %xpdrops_fake_skill_2, %xpdrops_fake_skill_3, %xpdrops_fake_skill_4, %xpdrops_fake_skill_5, %xpdrops_fake_skill_6, -1;
        %xpdrops_fake_xp_0, %xpdrops_fake_xp_1, %xpdrops_fake_xp_2, %xpdrops_fake_xp_3, %xpdrops_fake_xp_4, %xpdrops_fake_xp_5, %xpdrops_fake_xp_6 = %xpdrops_fake_xp_1, %xpdrops_fake_xp_2, %xpdrops_fake_xp_3, %xpdrops_fake_xp_4, %xpdrops_fake_xp_5, %xpdrops_fake_xp_6, -1;
    }
} else {
    $int36 = calc(stat_visible_xp(fishing) - $int25);
    if ($int36 > 0) {
        $statarray0($int35) = fishing;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(attack) - $int11);
    if ($int36 > 0) {
        $statarray0($int35) = attack;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(strength) - $int12);
    if ($int36 > 0) {
        $statarray0($int35) = strength;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(ranged) - $int13);
    if ($int36 > 0) {
        $statarray0($int35) = ranged;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(magic) - $int14);
    if ($int36 > 0) {
        $statarray0($int35) = magic;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(defence) - $int15);
    if ($int36 > 0) {
        $statarray0($int35) = defence;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(hitpoints) - $int16);
    if ($int36 > 0) {
        $statarray0($int35) = hitpoints;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(prayer) - $int17);
    if ($int36 > 0) {
        $statarray0($int35) = prayer;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(agility) - $int18);
    if ($int36 > 0) {
        $statarray0($int35) = agility;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(herblore) - $int19);
    if ($int36 > 0) {
        $statarray0($int35) = herblore;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(thieving) - $int20);
    if ($int36 > 0) {
        $statarray0($int35) = thieving;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(crafting) - $int21);
    if ($int36 > 0) {
        $statarray0($int35) = crafting;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(runecraft) - $int22);
    if ($int36 > 0) {
        $statarray0($int35) = runecraft;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(mining) - $int23);
    if ($int36 > 0) {
        $statarray0($int35) = mining;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(smithing) - $int24);
    if ($int36 > 0) {
        $statarray0($int35) = smithing;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(cooking) - $int26);
    if ($int36 > 0) {
        $statarray0($int35) = cooking;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(firemaking) - $int27);
    if ($int36 > 0) {
        $statarray0($int35) = firemaking;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(woodcutting) - $int28);
    if ($int36 > 0) {
        $statarray0($int35) = woodcutting;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(fletching) - $int29);
    if ($int36 > 0) {
        $statarray0($int35) = fletching;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(slayer) - $int30);
    if ($int36 > 0) {
        $statarray0($int35) = slayer;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(farming) - $int31);
    if ($int36 > 0) {
        $statarray0($int35) = farming;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(construction) - $int32);
    if ($int36 > 0) {
        $statarray0($int35) = construction;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
    $int36 = calc(stat_visible_xp(hunter) - $int33);
    if ($int36 > 0) {
        $statarray0($int35) = hunter;
        $intarray1($int35) = $int36;
        $int35 = calc($int35 + 1);
    }
}
def_int $int37 = 0;
def_int $int38 = 0;
def_fontmetrics $fontmetrics39 = p11_full;
def_graphic $graphic40 = p11_full;
def_int $int41 = 16;
def_int $int42 = 0;
def_int $int43 = 0;
def_int $int44 = 0;
def_int $int45 = 0;
def_int $int46 = 0;
def_component $component47 = null;
def_string $string2 = "";
if ($int35 > 0 & $int16 > 0 & ~script6065 = true) {
    if (%xpdrops_size = 1 & ~on_mobile = false) {
        $fontmetrics39, $graphic40, $int41 = p12_full, p12_full, 25;
    } else if (%xpdrops_size = 2 & ~on_mobile = false) {
        $fontmetrics39, $graphic40, $int41 = b12_full, b12_full, 25;
    }
    $int42 = if_getheight($component8);
    if ($int42 < 100) {
        $int42 = 100;
    }
    $int43 = calc($int41 * enum(int, int, enum_1171, %xpdrops_speed) / $int42 + 1);
    while ($int37 < $int35) {
        if ($int38 = 0 & $boolean0 = false) {
            %xpdrops_lastskill = $statarray0($int37);
            $int38 = 1;
        }
        if (%xpdrops_queue > 0 & %xpdrops_queue > calc(clientclock - $int43)) {
            $int44 = calc(%xpdrops_queue + $int43);
        } else {
            $int44 = clientclock;
        }
        if ($int44 < calc(clientclock + $int43 * $int10)) {
            $component47 = enum(int, component, enum_1163, %xpdrops_nextlayer);
            if_sethide(false, $component47);
            $int46 = $intarray1($int37);
            cc_create($component47, ^iftype_graphic, 1);
            cc_setgraphic(enum(stat, graphic, enum_255, $statarray0($int37)));
            cc_setposition(0, 0, ^setpos_abs_left, ^setpos_rel_bottom);
            cc_sethide(true);
            $int45 = 1;
            $int37 = calc($int37 + 1);
            while (%xpdrops_groupskills = 1 & $int37 < $int35 & $int45 < 5 & $int46 < 1000000) {
                $int46 = calc($int46 + $intarray1($int37));
                $int45 = calc($int45 + 1);
                cc_create($component47, ^iftype_graphic, $int45);
                cc_setgraphic(enum(stat, graphic, enum_255, $statarray0($int37)));
                cc_setposition(0, 0, ^setpos_abs_left, ^setpos_rel_bottom);
                cc_sethide(true);
                $int37 = calc($int37 + 1);
            }
            $string2 = ~tostring_spacer($int46, ",");
            if ($boolean0 = true) {
                $string2 = "<img=11> <$string2>";
            }
            if (cc_find($component47, 0) = ^true) {
                cc_settext($string2);
                cc_setposition(0, 0, ^setpos_abs_left, ^setpos_rel_bottom);
                cc_sethide(true);
                ~xpdrops_setdropsize($component47, $int41, $fontmetrics39, $graphic40, $string2);
            }
            if_setontimer("xpdrops_dropletmove($component47, $int44)", $component47);
            %xpdrops_queue = $int44;
            %xpdrops_nextlayer = calc((%xpdrops_nextlayer + 1) % $int10);
        } else {
            $int37 = $int35;
        }
    }
    ~xpdrops_showpanel($component1, $component3, $component8, $component9);
}
if ($boolean0 = false) {
    ~xpdrops_setbar($component3, $component4, $component5, $component6, $component7, $component8, $component9);
    ~xpdrops_setstatlistener($component1, $component2, $component3, $component4, $component5, $component6, $component7, $component8, $component9, $int10);
}
