// 6770
[proc,toa_invocations_side_panel_update](component $component0, component $component1, component $component2, component $component3, int $int4, int $int5)
if_settext(tostring($int4), interface_774:com77);
if_settext(tostring($int5), interface_774:com79);
if_setop(1, "", $component0);
if_setopbase("", $component0);
def_int $int6 = 0;
def_int $int7 = if_getwidth($component0);
def_int $int8 = calc($int7 - 4);
def_int $int9 = -1;
def_graphic $graphic10 = graphic_4655;
def_graphic $graphic11 = graphic_4660;
if ($int4 >= 300) {
    $graphic10 = graphic_4657;
    $graphic11 = graphic_4662;
} else if ($int4 >= 150) {
    $graphic10 = graphic_4656;
    $graphic11 = graphic_4661;
}
if_setgraphic($graphic11, $component2);
if (cc_find($component0, 0) = ^false) {
    cc_create($component0, ^iftype_rectangle, $int6);
    cc_setsize(calc($int7 - 2), 16, ^setsize_abs, ^setsize_abs);
    cc_setposition(1, 1, ^setpos_abs_left, ^setpos_abs_top);
    cc_setfill(false);
    cc_setcolour(0xe0e0c);
    $int6 = calc($int6 + 1);
    cc_create($component0, ^iftype_rectangle, $int6);
    cc_setsize(calc($int7 - 4), 14, ^setsize_abs, ^setsize_abs);
    cc_setposition(2, 2, ^setpos_abs_left, ^setpos_abs_top);
    cc_setfill(false);
    cc_setcolour(0x474745);
    $int6 = calc($int6 + 1);
    cc_create($component0, ^iftype_graphic, $int6);
    cc_setsize(calc($int7 - 4), 12, ^setsize_abs, ^setsize_abs);
    cc_setposition(2, 3, ^setpos_abs_left, ^setpos_abs_top);
    cc_setgraphic(graphic_4658);
    cc_settiling(true);
    $int6 = calc($int6 + 1);
    cc_create($component0, ^iftype_graphic, $int6);
    cc_setsize(1, 12, ^setsize_abs, ^setsize_abs);
    cc_setposition(2, 3, ^setpos_abs_left, ^setpos_abs_top);
    cc_setgraphic($graphic10);
    cc_settiling(true);
    $int6 = calc($int6 + 1);
    cc_create($component0, ^iftype_graphic, $int6);
    cc_setsize(10, 16, ^setsize_abs, ^setsize_abs);
    cc_setposition(-5, 1, ^setpos_abs_left, ^setpos_abs_top);
    cc_setgraphic(graphic_4659);
    $int6 = calc($int6 + 1);
    cc_create($component0, ^iftype_graphic, $int6);
    cc_setsize(10, 16, ^setsize_abs, ^setsize_abs);
    $int9 = scale(150, 600, $int8);
    cc_setposition(calc($int9 - 2), 1, ^setpos_abs_left, ^setpos_abs_top);
    cc_setgraphic(graphic_4659);
    $int6 = calc($int6 + 1);
    cc_create($component0, ^iftype_graphic, $int6);
    cc_setsize(10, 16, ^setsize_abs, ^setsize_abs);
    $int9 = scale(300, 600, $int8);
    cc_setposition(calc($int9 - 2), 1, ^setpos_abs_left, ^setpos_abs_top);
    cc_setgraphic(graphic_4659);
    $int6 = calc($int6 + 1);
    cc_create($component0, ^iftype_graphic, $int6);
    cc_setsize(10, 16, ^setsize_abs, ^setsize_abs);
    cc_setposition(calc($int8 - 1), 1, ^setpos_abs_left, ^setpos_abs_top);
    cc_setgraphic(graphic_4659);
    $int6 = calc($int6 + 1);
}
def_int $int12 = scale($int4, 600, $int8);
if ($int12 > $int8) {
    $int12 = calc($int8 - 1);
}
if (cc_find($component0, 3) = ^true) {
    cc_setsize($int12, cc_getheight, ^setsize_abs, ^setsize_abs);
    cc_setgraphic($graphic10);
}
if_setonmouserepeat("cc_settrans(event_com, cc_getid, 0, null)", $component3);
if_setonmouseleave("cc_settrans(event_com, cc_getid, 50, null)", $component3);
if_setonop("opsound(event_op, 2)", $component3);
if_setop(1, "Rewards Info", $component3);
def_int $int13 = 1;
def_int $int14 = 10;
def_int $int15 = 4;
def_int $int16 = 0;
def_int $int17 = enum_getoutputcount(enum_4683);
def_obj $obj18 = null;
def_int $rgb19 = ^black;
def_int $rgb20 = 0x212121;
def_int $int21 = 128;
$int6 = 0;
while ($int16 < $int17) {
    $obj18 = enum(int, namedobj, enum_4683, $int16);
    if ($int4 >= enum(namedobj, int, enum_4677, $obj18)) {
        $rgb19 = 0xfebf38;
        $rgb20 = 0x985101;
        $int21 = 0;
    } else if (enum(namedobj, boolean, enum_4678, $obj18) = true) {
        $rgb19 = 0xa6180b;
        $rgb20 = 0x500b03;
        $int21 = 192;
    } else {
        $rgb19 = ^black;
        $rgb20 = 0x212121;
        $int21 = 128;
    }
    cc_create($component1, ^iftype_rectangle, $int6);
    cc_setposition($int13, $int14, ^setpos_abs_left, ^setpos_abs_top);
    cc_setsize(36, 32, ^setsize_abs, ^setsize_abs);
    cc_setcolour($rgb19);
    $int6 = calc($int6 + 1);
    cc_create($component1, ^iftype_rectangle, $int6);
    cc_setposition(calc($int13 + 1), calc($int14 + 1), ^setpos_abs_left, ^setpos_abs_top);
    cc_setsize(calc(36 - 2), calc(32 - 2), ^setsize_abs, ^setsize_abs);
    cc_setcolour($rgb20);
    $int6 = calc($int6 + 1);
    cc_create($component1, ^iftype_rectangle, $int6);
    cc_setposition($int13, $int14, ^setpos_abs_left, ^setpos_abs_top);
    cc_setsize(3, 3, ^setsize_abs, ^setsize_abs);
    cc_setcolour($rgb20);
    $int6 = calc($int6 + 1);
    cc_create($component1, ^iftype_rectangle, $int6);
    cc_setposition($int13, calc($int14 + 32 - 3), ^setpos_abs_left, ^setpos_abs_top);
    cc_setsize(3, 3, ^setsize_abs, ^setsize_abs);
    cc_setcolour($rgb20);
    $int6 = calc($int6 + 1);
    cc_create($component1, ^iftype_rectangle, $int6);
    cc_setposition(calc($int13 + 36 - 3), $int14, ^setpos_abs_left, ^setpos_abs_top);
    cc_setsize(3, 3, ^setsize_abs, ^setsize_abs);
    cc_setcolour($rgb20);
    $int6 = calc($int6 + 1);
    cc_create($component1, ^iftype_rectangle, $int6);
    cc_setposition(calc($int13 + 36 - 3), calc($int14 + 32 - 3), ^setpos_abs_left, ^setpos_abs_top);
    cc_setsize(3, 3, ^setsize_abs, ^setsize_abs);
    cc_setcolour($rgb20);
    $int6 = calc($int6 + 1);
    cc_create($component1, ^iftype_rectangle, $int6);
    cc_setposition(calc($int13 + 2), calc($int14 + 2), ^setpos_abs_left, ^setpos_abs_top);
    cc_setsize(calc(36 - 4), calc(32 - 4), ^setsize_abs, ^setsize_abs);
    cc_setcolour(^black);
    cc_setfill(true);
    cc_settrans(180);
    $int6 = calc($int6 + 1);
    cc_create($component1, ^iftype_graphic, $int6);
    cc_setposition(calc($int13 + 1), calc($int14 + 1), ^setpos_abs_left, ^setpos_abs_top);
    cc_setsize(36, 32, ^setsize_abs, ^setsize_abs);
    cc_setobject_nonum($obj18, 1);
    cc_setgraphicshadow(0x333333);
    cc_settrans($int21);
    $int6 = calc($int6 + 1);
    $int16 = calc($int16 + 1);
    if (calc($int16 % $int15) = 0) {
        $int14 = calc($int14 + 32 + 2);
        switch_int (calc($int17 - $int16)) {
            case 1 :
                $int13 = calc(36 * 3 / 2);
            case 2 :
                $int13 = calc(36 + 2);
            case 3 :
                $int13 = calc(36 / 2);
            case default :
                $int13 = 1;
        }
    } else {
        $int13 = calc($int13 + 36 + 2);
    }
}
