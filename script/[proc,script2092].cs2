// 2092
[proc,script2092](component $component0, component $component1, component $component2, component $component3, component $component4, component $component5, component $component6, component $component7, int $int8, int $int9, int $int10, int $int11, int $int12, int $int13, int $int14, int $int15, int $int16, int $int17, int $int18, int $int19, int $int20, int $int21, int $int22, int $int23, int $int24, int $int25, int $int26, int $int27, int $int28, int $int29, int $int30, int $int31, int $int32, stat $stat33, int $int34)
def_int $int35 = calc(23 + 1);
def_stat $statarray0($int35);
def_int $intarray1($int35);
def_int $int36 = 0;
def_int $int37 = 0;
if ($int32 = 1) {
    $statarray0($int36) = $stat33;
    $intarray1($int36) = $int34;
    $int36 = calc($int36 + 1);
} else {
    $int37 = calc(stat_xp(fishing) - $int23);
    if ($int37 > 0) {
        $statarray0($int36) = fishing;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(attack) - $int9);
    if ($int37 > 0) {
        $statarray0($int36) = attack;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(strength) - $int10);
    if ($int37 > 0) {
        $statarray0($int36) = strength;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(ranged) - $int11);
    if ($int37 > 0) {
        $statarray0($int36) = ranged;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(magic) - $int12);
    if ($int37 > 0) {
        $statarray0($int36) = magic;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(defence) - $int13);
    if ($int37 > 0) {
        $statarray0($int36) = defence;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(hitpoints) - $int14);
    if ($int37 > 0) {
        $statarray0($int36) = hitpoints;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(prayer) - $int15);
    if ($int37 > 0) {
        $statarray0($int36) = prayer;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(agility) - $int16);
    if ($int37 > 0) {
        $statarray0($int36) = agility;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(herblore) - $int17);
    if ($int37 > 0) {
        $statarray0($int36) = herblore;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(thieving) - $int18);
    if ($int37 > 0) {
        $statarray0($int36) = thieving;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(crafting) - $int19);
    if ($int37 > 0) {
        $statarray0($int36) = crafting;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(runecraft) - $int20);
    if ($int37 > 0) {
        $statarray0($int36) = runecraft;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(mining) - $int21);
    if ($int37 > 0) {
        $statarray0($int36) = mining;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(smithing) - $int22);
    if ($int37 > 0) {
        $statarray0($int36) = smithing;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(cooking) - $int24);
    if ($int37 > 0) {
        $statarray0($int36) = cooking;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(firemaking) - $int25);
    if ($int37 > 0) {
        $statarray0($int36) = firemaking;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(woodcutting) - $int26);
    if ($int37 > 0) {
        $statarray0($int36) = woodcutting;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(fletching) - $int27);
    if ($int37 > 0) {
        $statarray0($int36) = fletching;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(slayer) - $int28);
    if ($int37 > 0) {
        $statarray0($int36) = slayer;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(farming) - $int29);
    if ($int37 > 0) {
        $statarray0($int36) = farming;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(construction) - $int30);
    if ($int37 > 0) {
        $statarray0($int36) = construction;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
    $int37 = calc(stat_xp(hunter) - $int31);
    if ($int37 > 0) {
        $statarray0($int36) = hunter;
        $intarray1($int36) = $int37;
        $int36 = calc($int36 + 1);
    }
}
def_int $int38 = 0;
def_int $int39 = 0;
def_fontmetrics $fontmetrics40 = p11_full;
def_graphic $graphic41 = p11_full;
def_int $int42 = 16;
def_int $int43 = 0;
def_int $int44 = 0;
def_int $int45 = 0;
def_int $int46 = 0;
def_int $int47 = 0;
def_component $component48 = null;
def_string $string0 = "";
if ($int36 > 0 & $int14 > 0 & calc(clientclock - %varclient_76) > 10) {
    if (%varplayerbit_4693 = 1) {
        $fontmetrics40, $graphic41, $int42 = p12_full, p12_full, 25;
    } else if (%varplayerbit_4693 = 2) {
        $fontmetrics40, $graphic41, $int42 = b12_full, b12_full, 25;
    }
    $int43 = if_getheight($component6);
    if ($int43 < 100) {
        $int43 = 100;
    }
    $int44 = calc($int42 * enum(int, int, enum_1171, %varplayerbit_4722) / $int43 + 1);
    while ($int38 < $int36) {
        if ($int39 = 0 & $int32 = 0) {
            %varclient_72 = $statarray0($int38);
            $int39 = 1;
        }
        if (%varclient_71 > 0 & %varclient_71 > calc(clientclock - $int44)) {
            $int45 = calc(%varclient_71 + $int44);
        } else {
            $int45 = clientclock;
        }
        if ($int45 < calc(clientclock + $int44 * $int8)) {
            $component48 = enum(int, component, enum_1163, %varclient_70);
            if_sethide(false, $component48);
            $int47 = $intarray1($int38);
            cc_create($component48, ^iftype_graphic, 1);
            cc_setgraphic(enum(stat, graphic, enum_255, $statarray0($int38)));
            cc_setposition(0, 0, ^setpos_abs_left, ^setpos_proportion_bottom);
            cc_sethide(true);
            $int46 = 1;
            $int38 = calc($int38 + 1);
            while (%varplayerbit_4696 = 1 & $int38 < $int36 & $int46 < 5 & $int47 < 1000000) {
                $int47 = calc($int47 + $intarray1($int38));
                $int46 = calc($int46 + 1);
                cc_create($component48, ^iftype_graphic, $int46);
                cc_setgraphic(enum(stat, graphic, enum_255, $statarray0($int38)));
                cc_setposition(0, 0, ^setpos_abs_left, ^setpos_proportion_bottom);
                cc_sethide(true);
                $int38 = calc($int38 + 1);
            }
            $string0 = ~tostring_spacer($int47, ",");
            if ($int32 = 1) {
                $string0 = "<img=11> <$string0>";
            }
            if (cc_find($component48, 0) = ^true) {
                cc_settext($string0);
                cc_setposition(0, 0, ^setpos_abs_left, ^setpos_proportion_bottom);
                cc_sethide(true);
                ~xpdrops_setdropsize($component48, $int42, $fontmetrics40, $graphic41, $string0);
            }
            if_setontimer("xpdrops_dropletmove($component48, $int45)", $component48);
            %varclient_71 = $int45;
            %varclient_70 = calc((%varclient_70 + 1) % $int8);
        } else {
            $int38 = $int36;
        }
    }
    ~xpdrops_showpanel($component0, $component1, $component6, $component7);
}
if ($int32 = 1) {
    return;
}
~xpdrops_setbar($component1, $component2, $component3, $component4, $component5, $component6, $component7);
~xpdrops_setstatlistener($component0, $component1, $component2, $component3, $component4, $component5, $component6, $component7, $int8);
