// 2273
[proc,script2273](component $component0, component $component1, component $component2, component $component3, component $component4, component $component5, component $component6, boolean $boolean7)
cc_deleteall($component3);
cc_deleteall($component4);
cc_deleteall($component5);
def_int $int8 = 0;
def_int $int9 = 0;
def_int $int10 = 0;
def_struct $struct11 = null;
def_int $int12 = 0;
def_int $int13 = 0;
def_int $int14 = 0;
def_string $string0 = "";
def_int $int15 = 0;
def_int $int16 = 4;
if (%varplayerbit_6670 = 2) {
    $int16 = 8;
} else if (%varplayerbit_6670 = 3) {
    $int16 = 30;
}
if (~on_mobile = true) {
    $int9 = 20;
}
cc_create($component5, ^iftype_rectangle, $int8);
$int8 = 1;
cc_setfill(true);
cc_setcolour(^black);
cc_setsize(0, calc(18 + $int9), ^setsize_minus, ^setsize_abs);
cc_setposition(0, 0, ^setpos_abs_left, ^setpos_abs_top);
cc_sethide(true);
while ($int8 <= $int16) {
    cc_create($component5, ^iftype_text, $int8);
    $int15 = ~telenexus_get_slot_value($int8);
    $struct11 = enum(int, struct, enum_1377, $int15);
    if ($struct11 = null) {
        cc_sethide(true);
    } else {
        cc_setsize(0, calc(18 + $int9), ^setsize_minus, ^setsize_abs);
        cc_setposition(0, $int10, ^setpos_abs_left, ^setpos_abs_top);
        cc_settextfont(p12_full);
        cc_settextalign(^settextalign_left, ^settextalign_centre, 0);
        cc_settextshadow(true);
        cc_settext("    <struct_param($struct11, param_660)>");
        cc_setcolour(0xff981f);
        cc_setdragdeadtime(4);
        cc_setdragdeadzone(5);
        cc_setondragcomplete("script2361($component0, $component1, $component2, $component3, $component4, $component5, $component6, $struct11, event_com2, event_comsubid2, $int8)");
        cc_setondrag("telenexus_dragscroll($component1, event_com, event_comsubid, event_mousex, event_mousey, $component2, 0, calc(18 + $int9))");
        $int14 = calc($int14 + 1);
        .cc_create($component4, ^iftype_graphic, $int13);
        if (cc_gethide = false) {
            .cc_setsize(7, 11, ^setsize_abs, ^setsize_abs);
            .cc_setposition(0, calc($int10 + 3 + $int9 / 2), ^setpos_abs_left, ^setpos_abs_top);
            .cc_setgraphic(drag_handle);
        } else {
            .cc_sethide(true);
        }
        .cc_create($component3, ^iftype_rectangle, $int13);
        .cc_setsize(0, calc(18 + $int9), ^setsize_minus, ^setsize_abs);
        .cc_setposition(0, $int10, ^setpos_abs_left, ^setpos_abs_top);
        .cc_setfill(true);
        if (calc($int13 % 2) = 0) {
            .cc_setcolour(^white);
            .cc_settrans(255);
        } else {
            .cc_setcolour(^black);
            .cc_settrans(225);
        }
        $int13 = calc($int13 + 1);
        $int10 = calc(cc_gety + cc_getheight);
    }
    $int8 = calc($int8 + 1);
}
if_setscrollsize(0, $int10, $component1);
if ($boolean7 = true | $int10 < if_getheight($component1)) {
    if_setscrollpos(0, 0, $component1);
    ~scrollbar_vertical($component2, $component1, "scrollbar_dragger_v2,3", "scrollbar_dragger_v2,0", "scrollbar_dragger_v2,1", "scrollbar_dragger_v2,2", "scrollbar_v2,0", "scrollbar_v2,1");
} else {
    ~scrollbar_vertical_rebuild($component2, $component1);
}
if_settext("Slots <tostring($int14)>/<tostring($int16)>", $component6);
