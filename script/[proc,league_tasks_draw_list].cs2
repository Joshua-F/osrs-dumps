// 3204
[proc,league_tasks_draw_list](int $int0, component $component1, component $component2, component $component3, component $component4, component $component5, component $component6, component $component7, component $component8, component $component9, component $component10, component $component11, component $component12, component $component13, component $component14, int $int15, int $int16)
if ($int15 = -1) {
    $int15 = if_getscrolly($component1);
}
cc_deleteall($component2);
cc_deleteall($component3);
cc_deleteall($component4);
cc_deleteall($component5);
cc_deleteall($component6);
cc_deleteall($component7);
cc_deleteall($component8);
cc_deleteall($component9);
cc_deleteall($component12);
cc_deleteall($component13);
def_int $int17 = 0;
def_struct $struct18 = enum(int, struct, enum_2670, %varplayerbit_10032);
if ($struct18 = null) {
    return;
}
~leagues_menu_button($component12, $int17, $component13, $component14);
$int17 = 0;
$int17 = 0;
~league_create_dropdown($component12, $component13, $component14, $int17, 1);
$int17 = 0;
def_enum $enum19 = struct_param($struct18, param_868);
def_int $rgb20 = struct_param($struct18, param_1027);
def_int $int21 = enum_getoutputcount($enum19);
def_int $int22 = 0;
def_int $int23 = 0;
def_struct $struct24 = null;
def_int $int25 = 0;
def_int $int26 = 40;
def_int $int27 = 255;
def_graphic $graphic28 = "open_buttons_small,1";
def_graphic $graphic29 = "open_buttons_small,0";
def_int $int30 = -1;
def_int $int31 = -1;
def_string $string0 = null;
def_string $string1 = null;
def_int $int32 = -1;
def_int $int33 = -1;
def_int $int34 = -1;
def_int $int35 = -1;
def_int $int36 = 0;
if (cc_find(interface_657:com_2, $int16) = ^true) {
    cc_setcolour($rgb20);
}
if (%varplayer_2615 < %varplayer_2614) {
    $int36 = 1;
}
while ($int22 < $int21) {
    $struct24 = enum(int, struct, $enum19, $int22);
    $int30 = ~league_task_is_completed($struct24);
    $int31 = struct_param($struct24, param_876);
    $string0 = struct_param($struct24, param_874);
    $string1 = struct_param($struct24, param_875);
    $int32 = enum(int, int, enum_2671, $int31);
    $int33 = struct_param($struct24, param_1016);
    $int34 = struct_param($struct24, param_1017);
    if (~league_task_display($int31, $int30, $int33, $int34) = true) {
        cc_create($component2, ^iftype_rectangle, $int17);
        if ($int22 = $int0) {
            $int35 = paraheight("Description: <$string1>", calc(if_getwidth($component2) - 10), p11_full);
            cc_setsize(0, calc($int26 + (10 * $int35 + 25)), ^setsize_minus, ^setsize_abs);
            $graphic28 = "open_buttons_small,3";
            $graphic29 = "open_buttons_small,2";
        } else {
            cc_setsize(0, $int26, ^setsize_minus, ^setsize_abs);
            $graphic28 = "open_buttons_small,1";
            $graphic29 = "open_buttons_small,0";
        }
        cc_setposition(0, $int25, ^setpos_abs_centre, ^setpos_abs_top);
        cc_setcolour(^white);
        cc_setfill(true);
        if (calc($int17 % 2) = 1) {
            $int27 = 230;
        } else {
            $int27 = 245;
        }
        if ($int22 = $int0 & ~on_mobile = false) {
            cc_settrans(210);
        } else {
            cc_settrans($int27);
        }
        if (~on_mobile = false) {
            cc_setonmouserepeat("league_task_hover(event_comsubid, $component2, $component8, 210, $graphic28)");
            cc_setonmouseleave("league_task_hover(event_comsubid, $component2, $component8, $int27, $graphic29)");
        } else {
            cc_setonmouserepeat(null);
            cc_setonmouseleave(null);
        }
        cc_setopbase("<col=ff981f><$string0></col>");
        if ($int22 = $int0) {
            cc_setop(1, "Collapse");
            cc_setonop("league_tasks_draw_list(-1, $component1, $component2, $component3, $component4, $component5, $component6, $component7, $component8, $component9, $component10, $component11, $component12, $component13, $component14, -1, $int16)");
        } else {
            cc_setop(1, "Expand");
            cc_setonop("league_tasks_draw_list($int22, $component1, $component2, $component3, $component4, $component5, $component6, $component7, $component8, $component9, $component10, $component11, $component12, $component13, $component14, -1, $int16)");
        }
        cc_create($component8, ^iftype_graphic, $int17);
        cc_setsize(18, 18, ^setsize_abs, ^setsize_abs);
        cc_setposition(5, calc($int25 + ($int26 - 18) / 2), ^setpos_abs_left, ^setpos_abs_top);
        cc_setgraphic($graphic29);
        cc_create($component9, ^iftype_graphic, $int17);
        cc_setsize(18, 18, ^setsize_abs, ^setsize_abs);
        cc_setposition(28, calc($int25 + ($int26 - 18) / 2), ^setpos_abs_left, ^setpos_abs_top);
        cc_setgraphic(enum(int, graphic, enum_2674, $int31));
        cc_create($component3, ^iftype_text, $int17);
        cc_settext($string0);
        cc_setsize(51, 16, ^setsize_minus, ^setsize_abs);
        cc_setposition(51, calc($int25 + $int26 / 2 - 16), ^setpos_abs_left, ^setpos_abs_top);
        cc_settextfont(p12_full);
        cc_settextalign(^settextalign_left, ^settextalign_centre, 0);
        cc_settextshadow(true);
        if ($int30 = 1) {
            cc_setcolour(0x0dc10d);
        } else {
            cc_setcolour(0x9f9f9f);
        }
        cc_create($component4, ^iftype_text, $int17);
        if ($int32 = 1) {
            cc_settext("Reward: <col=ffffff><tostring(enum(int, int, enum_2671, $int31))> point</col>");
        } else {
            cc_settext("Reward: <col=ffffff><tostring(enum(int, int, enum_2671, $int31))> points</col>");
        }
        cc_setsize(51, 11, ^setsize_minus, ^setsize_abs);
        cc_setposition(51, calc($int25 + $int26 / 2 + 2), ^setpos_abs_left, ^setpos_abs_top);
        cc_settextfont(p11_full);
        cc_settextalign(^settextalign_left, ^settextalign_centre, 0);
        cc_settextshadow(true);
        cc_setcolour($rgb20);
        if ($int22 = $int0) {
            cc_create($component5, ^iftype_text, 0);
            cc_settext("Type: <col=ffffff><enum(int, string, enum_3411, $int33)></col>");
            cc_setsize(51, 11, ^setsize_minus, ^setsize_abs);
            cc_setposition(5, calc($int25 + $int26), ^setpos_abs_left, ^setpos_abs_top);
            cc_settextfont(p11_full);
            cc_settextalign(^settextalign_left, ^settextalign_centre, 0);
            cc_settextshadow(true);
            cc_setcolour($rgb20);
            cc_create($component6, ^iftype_text, 0);
            cc_settext("Area: <col=ffffff><enum(int, string, enum_3412, $int34)></col>");
            cc_setsize(51, 11, ^setsize_minus, ^setsize_abs);
            cc_setposition(104, calc($int25 + $int26), ^setpos_abs_left, ^setpos_abs_top);
            cc_settextfont(p11_full);
            cc_settextalign(^settextalign_left, ^settextalign_centre, 0);
            cc_settextshadow(true);
            cc_setcolour($rgb20);
            cc_create($component7, ^iftype_text, 0);
            cc_settext("Description: <col=ffffff><$string1></col>");
            cc_setsize(10, calc(10 * $int35), ^setsize_minus, ^setsize_abs);
            cc_setposition(5, calc($int25 + $int26 + 19), ^setpos_abs_left, ^setpos_abs_top);
            cc_settextfont(p11_full);
            cc_settextalign(^settextalign_left, ^settextalign_centre, 0);
            cc_settextshadow(true);
            cc_setcolour($rgb20);
        }
        if ($int22 = $int0) {
            $int25 = calc($int25 + $int35 * 10 + $int26 + 25);
        } else {
            $int25 = calc($int25 + $int26);
        }
        $int17 = calc($int17 + 1);
    }
    $int22 = calc($int22 + 1);
}
if ($int25 > if_getheight($component1)) {
    if_setscrollsize(0, $int25, $component1);
} else {
    if_setscrollsize(0, 0, $component1);
}
if_setscrollpos(0, $int15, $component1);
cc_deleteall($component11);
~scrollbar_vertical($component11, $component1, "scrollbar_dragger_v2,3", "scrollbar_dragger_v2,0", "scrollbar_dragger_v2,1", "scrollbar_dragger_v2,2", "scrollbar_v2,0", "scrollbar_v2,1");
~scrollbar_resize($component11, $component1, $int15);
if ($int17 = 0) {
    if_sethide(false, $component10);
} else {
    if_sethide(true, $component10);
}
